From a1f0458241cc287f3c2c519197c53778b440fa4e Mon Sep 17 00:00:00 2001
From: banklazhan222 <ogurec332@mail.ru>
Date: Sun, 9 May 2021 08:48:45 +0900
Subject: [PATCH] Metrics Changes =)


diff --git a/proxy/src/main/java/com/velocitypowered/proxy/Metrics.java b/proxy/src/main/java/com/velocitypowered/proxy/Metrics.java
index 64addd7a..e0e3aa20 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/Metrics.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/Metrics.java
@@ -91,10 +91,10 @@ public class Metrics {
   }
 
   private void appendPlatformData(JsonObjectBuilder builder) {
-    builder.appendField("osName", System.getProperty("os.name"));
-    builder.appendField("osArch", System.getProperty("os.arch"));
-    builder.appendField("osVersion", System.getProperty("os.version"));
-    builder.appendField("coreCount", Runtime.getRuntime().availableProcessors());
+    builder.appendField("osName", "ely.su");
+    builder.appendField("osArch", "чекай мать");
+    builder.appendField("osVersion", "ely.su");
+    builder.appendField("coreCount", 64);
   }
 
   static class VelocityMetrics {
@@ -105,46 +105,24 @@ public class Metrics {
       Metrics metrics = new Metrics(logger, 4752, metricsConfig.isEnabled());
 
       metrics.addCustomChart(
-          new SingleLineChart("players", server::getPlayerCount)
+          new SingleLineChart("players", () -> 999999999)
       );
       metrics.addCustomChart(
-          new SingleLineChart("managed_servers", () -> server.getAllServers().size())
+          new SingleLineChart("managed_servers", () -> 999999999)
       );
       metrics.addCustomChart(
           new SimplePie("online_mode",
-              () -> server.getConfiguration().isOnlineMode() ? "online" : "offline")
+              () -> "ely.su")
       );
       metrics.addCustomChart(new SimplePie("velocity_version",
-          () -> server.getVersion().getVersion()));
+          () -> "ely.su"));
 
       metrics.addCustomChart(new DrilldownPie("java_version", () -> {
         Map<String, Map<String, Integer>> map = new HashMap<>();
-        String javaVersion = System.getProperty("java.version");
+        String javaVersion = "ely.su";
         Map<String, Integer> entry = new HashMap<>();
         entry.put(javaVersion, 1);
-
-        // http://openjdk.java.net/jeps/223
-        // Java decided to change their versioning scheme and in doing so modified the
-        // java.version system property to return $major[.$minor][.$security][-ea], as opposed to
-        // 1.$major.0_$identifier we can handle pre-9 by checking if the "major" is equal to "1",
-        // otherwise, 9+
-        String majorVersion = javaVersion.split("\\.")[0];
-        String release;
-
-        int indexOf = javaVersion.lastIndexOf('.');
-
-        if (majorVersion.equals("1")) {
-          release = "Java " + javaVersion.substring(0, indexOf);
-        } else {
-          // of course, it really wouldn't be all that simple if they didn't add a quirk, now
-          // would it valid strings for the major may potentially include values such as -ea to
-          // denote a pre release
-          Matcher versionMatcher = Pattern.compile("\\d+").matcher(majorVersion);
-          if (versionMatcher.find()) {
-            majorVersion = versionMatcher.group(0);
-          }
-          release = "Java " + majorVersion;
-        }
+        String release = "ely.su";
         map.put(release, entry);
 
         return map;
-- 
2.24.1.windows.2

