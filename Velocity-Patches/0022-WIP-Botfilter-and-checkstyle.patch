From aea280c52d6c233b3d2d125130785fbe5ff9f341 Mon Sep 17 00:00:00 2001
From: mdxd44 <mdxd44@ely.su>
Date: Thu, 24 Jun 2021 15:01:38 +0900
Subject: [PATCH] WIP Botfilter and checkstyle


diff --git a/proxy/src/main/java/com/velocitypowered/proxy/Velocity.java b/proxy/src/main/java/com/velocitypowered/proxy/Velocity.java
index 49ad384f..661930f3 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/Velocity.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/Velocity.java
@@ -61,6 +61,7 @@ public class Velocity {
 
   /**
    * Main method that the JVM will call when {@code java -jar velocity.jar} is executed.
+   *
    * @param args the arguments to the proxy
    */
   public static void main(String... args) {
@@ -81,7 +82,7 @@ public class Velocity {
 
     // ElytraProxy
     logger.warn("PLEASE REPORT ALL BUGS, ERRORS AND JUST NOTES"
-            + " OR SUGGESTIONS ON GITHUB PAGE. (https://github.com/Elytrium/ElytraProxy/issues)");
+        + " OR SUGGESTIONS ON GITHUB PAGE. (https://github.com/Elytrium/ElytraProxy/issues)");
     server.getConsoleCommandSource().start();
 
     // If we don't have a console available (because SimpleTerminalConsole returned), then we still
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java
index 318363a0..dae51fba 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java
@@ -54,9 +54,7 @@ import com.velocitypowered.proxy.protocol.util.GameProfileSerializer;
 import com.velocitypowered.proxy.scheduler.VelocityScheduler;
 import com.velocitypowered.proxy.server.ServerMap;
 import com.velocitypowered.proxy.util.AddressUtil;
-import com.velocitypowered.proxy.util.ClosestLocaleMatcher;
 import com.velocitypowered.proxy.util.EncryptionUtils;
-import com.velocitypowered.proxy.util.FileSystemUtils;
 import com.velocitypowered.proxy.util.VelocityChannelRegistrar;
 import com.velocitypowered.proxy.util.bossbar.AdventureBossBarManager;
 import com.velocitypowered.proxy.util.ratelimit.Ratelimiter;
@@ -80,7 +78,6 @@ import java.util.Locale;
 import java.util.Map;
 import java.util.Objects;
 import java.util.Optional;
-import java.util.ResourceBundle;
 import java.util.UUID;
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.ConcurrentHashMap;
@@ -96,11 +93,7 @@ import net.elytrium.elytraproxy.ElytraProxy;
 import net.elytrium.elytraproxy.config.Settings;
 import net.kyori.adventure.audience.Audience;
 import net.kyori.adventure.audience.ForwardingAudience;
-import net.kyori.adventure.key.Key;
 import net.kyori.adventure.text.Component;
-import net.kyori.adventure.translation.GlobalTranslator;
-import net.kyori.adventure.translation.TranslationRegistry;
-import net.kyori.adventure.util.UTF8ResourceBundleControl;
 import net.kyori.adventure.text.serializer.gson.GsonComponentSerializer;
 import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
 import org.apache.logging.log4j.LogManager;
@@ -153,7 +146,7 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {
   private final VelocityChannelRegistrar channelRegistrar = new VelocityChannelRegistrar();
   // ElytraProxy
   @Getter
-  private ElytraProxy elytraProxy;
+  private @MonotonicNonNull ElytraProxy elytraProxy;
   private Component maintenanceMotd;
 
   VelocityServer(final ProxyOptions options) {
@@ -214,7 +207,8 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {
     logger.info("Booting up {} {}...", getVersion().getName(), Settings.IMP.VERSION);
     console.setupStreams();
 
-    registerTranslations();
+    // ElytraProxy: Removed as unnecessary
+    //registerTranslations();
 
     serverKeyPair = EncryptionUtils.createRsaKeyPair(1024);
 
@@ -225,7 +219,7 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {
     // ElytraProxy: Move initialization to ElytraProxy main class
     // commandManager.register("elytraproxy", new ElytraProxyCommand(this));
     commandManager.register("server", new ServerCommand(this));
-    commandManager.register("shutdown", new ShutdownCommand(this),"end");
+    commandManager.register("shutdown", new ShutdownCommand(this), "end");
     new GlistCommand(this).register();
 
     this.doStartupConfigLoad();
@@ -236,6 +230,10 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {
 
     ipAttemptLimiter = Ratelimiters.createWithMilliseconds(configuration.getLoginRatelimit(),
         configuration.getLoginRatelimitAttempts()); // BotFilter backport: global rate limiter
+
+    // ElytraProxy
+    this.elytraProxy = new ElytraProxy(this);
+
     loadPlugins();
 
     // Go ahead and fire the proxy initialization event. We block since plugins should have a chance
@@ -258,11 +256,11 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {
     }
 
     Metrics.VelocityMetrics.startMetrics(this, configuration.getMetrics());
-
-    // ElytraProxy
-    this.elytraProxy = new ElytraProxy(this);
   }
 
+
+  // ElytraProxy: Removed as unnecessary
+  /*
   private void registerTranslations() {
     final TranslationRegistry translationRegistry = TranslationRegistry
         .create(Key.key("velocity", "translations"));
@@ -304,6 +302,7 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {
     }
     GlobalTranslator.get().addSource(translationRegistry);
   }
+  */
 
   @SuppressFBWarnings("DM_EXIT")
   private void doStartupConfigLoad() {
@@ -469,7 +468,7 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {
    * Shuts down the proxy, kicking players with the specified {@param reason}.
    *
    * @param explicitExit whether the user explicitly shut down the proxy
-   * @param reason message to kick online players with
+   * @param reason       message to kick online players with
    */
   public void shutdown(boolean explicitExit, Component reason) {
     if (eventManager == null || pluginManager == null || cm == null || scheduler == null) {
@@ -500,8 +499,8 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {
           // makes sure that all the disconnect events are being fired
 
           CompletableFuture<Void> playersTeardownFuture = CompletableFuture.allOf(players.stream()
-                  .map(ConnectedPlayer::getTeardownFuture)
-                  .toArray((IntFunction<CompletableFuture<Void>[]>) CompletableFuture[]::new));
+              .map(ConnectedPlayer::getTeardownFuture)
+              .toArray((IntFunction<CompletableFuture<Void>[]>) CompletableFuture[]::new));
 
           playersTeardownFuture.get(10, TimeUnit.SECONDS);
         } catch (TimeoutException e) {
@@ -581,6 +580,7 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {
 
   /**
    * Checks if the {@code connection} can be registered with the proxy.
+   *
    * @param connection the connection to check
    * @return {@code true} if we can register the connection, {@code false} if not
    */
@@ -595,6 +595,7 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {
 
   /**
    * Attempts to register the {@code connection} with the proxy.
+   *
    * @param connection the connection to register
    * @return {@code true} if we registered the connection, {@code false} if not
    */
@@ -650,8 +651,8 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {
     Objects.requireNonNull(partialName);
 
     return getAllPlayers().stream().filter(p -> p.getUsername()
-            .regionMatches(true, 0, partialName, 0, partialName.length()))
-            .collect(Collectors.toList());
+        .regionMatches(true, 0, partialName, 0, partialName.length()))
+        .collect(Collectors.toList());
   }
 
   @Override
@@ -659,8 +660,8 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {
     Objects.requireNonNull(partialName);
 
     return getAllServers().stream().filter(s -> s.getServerInfo().getName()
-            .regionMatches(true, 0, partialName, 0, partialName.length()))
-            .collect(Collectors.toList());
+        .regionMatches(true, 0, partialName, 0, partialName.length()))
+        .collect(Collectors.toList());
   }
 
   @Override
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/CommandGraphInjector.java b/proxy/src/main/java/com/velocitypowered/proxy/command/CommandGraphInjector.java
index 0d692891..d27a6d35 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/CommandGraphInjector.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/CommandGraphInjector.java
@@ -61,15 +61,14 @@ public final class CommandGraphInjector<S> {
    * <p>Prior to adding a literal with the same name as one previously contained
    * in the destination node, the old node is removed from the destination node.
    *
-   * @param dest the root node to add the permissible nodes to
+   * @param dest   the root node to add the permissible nodes to
    * @param source the command source to inject the nodes for
    */
   public void inject(final RootCommandNode<S> dest, final S source) {
     lock.lock();
     try {
       final RootCommandNode<S> origin = this.dispatcher.getRoot();
-      final CommandContextBuilder<S> rootContext =
-              new CommandContextBuilder<>(this.dispatcher, source, origin, 0);
+      final CommandContextBuilder<S> rootContext = new CommandContextBuilder<>(this.dispatcher, source, origin, 0);
 
       // Filter alias nodes
       for (final CommandNode<S> node : origin.getChildren()) {
@@ -77,16 +76,14 @@ public final class CommandGraphInjector<S> {
           continue;
         }
 
-        final CommandContextBuilder<S> context = rootContext.copy()
-                .withNode(node, ALIAS_RANGE);
+        final CommandContextBuilder<S> context = rootContext.copy().withNode(node, ALIAS_RANGE);
         if (!node.canUse(context, ALIAS_READER)) {
           continue;
         }
 
         final LiteralCommandNode<S> asLiteral = (LiteralCommandNode<S>) node;
         final LiteralCommandNode<S> copy = asLiteral.createBuilder().build();
-        final VelocityArgumentCommandNode<S, ?> argsNode =
-                VelocityCommands.getArgumentsNode(asLiteral);
+        final VelocityArgumentCommandNode<S, ?> argsNode = VelocityCommands.getArgumentsNode(asLiteral);
         if (argsNode == null) {
           // This literal is associated to a BrigadierCommand, filter normally.
           this.copyChildren(node, copy, source);
@@ -125,8 +122,7 @@ public final class CommandGraphInjector<S> {
     return result;
   }
 
-  private void copyChildren(final CommandNode<S> parent, final CommandNode<S> dest,
-                            final S source) {
+  private void copyChildren(final CommandNode<S> parent, final CommandNode<S> dest, final S source) {
     for (final CommandNode<S> child : parent.getChildren()) {
       final CommandNode<S> filtered = this.filterNode(child, source);
       if (filtered != null) {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/SuggestionsProvider.java b/proxy/src/main/java/com/velocitypowered/proxy/command/SuggestionsProvider.java
index 0639e7cb..6184040f 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/SuggestionsProvider.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/SuggestionsProvider.java
@@ -74,31 +74,31 @@ final class SuggestionsProvider<S> {
   /**
    * Provides suggestions for the given input and source.
    *
-   * @param input the partial input
+   * @param input  the partial input
    * @param source the command source invoking the command
    * @return a future that completes with the suggestions
    */
   public CompletableFuture<Suggestions> provideSuggestions(final String input, final S source) {
     final CommandContextBuilder<S> context = new CommandContextBuilder<>(
-            this.dispatcher, source, this.dispatcher.getRoot(), 0);
+        this.dispatcher, source, this.dispatcher.getRoot(), 0);
     return this.provideSuggestions(new StringReader(input), context);
   }
 
   /**
    * Provides suggestions for the given input and context.
    *
-   * @param reader the input reader
+   * @param reader  the input reader
    * @param context an empty context
    * @return a future that completes with the suggestions
    */
   private CompletableFuture<Suggestions> provideSuggestions(
-          final StringReader reader, final CommandContextBuilder<S> context) {
+      final StringReader reader, final CommandContextBuilder<S> context) {
     lock.lock();
     try {
       final StringRange aliasRange = this.consumeAlias(reader);
       final String alias = aliasRange.get(reader).toLowerCase(Locale.ENGLISH);
       final LiteralCommandNode<S> literal =
-              (LiteralCommandNode<S>) context.getRootNode().getChild(alias);
+          (LiteralCommandNode<S>) context.getRootNode().getChild(alias);
 
       final boolean hasArguments = reader.canRead();
       if (hasArguments) {
@@ -119,9 +119,9 @@ final class SuggestionsProvider<S> {
 
   private StringRange consumeAlias(final StringReader reader) {
     final int firstSep = reader.getString().indexOf(
-            CommandDispatcher.ARGUMENT_SEPARATOR_CHAR, reader.getCursor());
+        CommandDispatcher.ARGUMENT_SEPARATOR_CHAR, reader.getCursor());
     final StringRange range = StringRange.between(
-            reader.getCursor(), firstSep == -1 ? reader.getTotalLength() : firstSep);
+        reader.getCursor(), firstSep == -1 ? reader.getTotalLength() : firstSep);
     reader.setCursor(range.getEnd());
     return range;
   }
@@ -130,7 +130,7 @@ final class SuggestionsProvider<S> {
    * Returns whether a literal node with the given lowercase name should be considered for
    * suggestions given the specified input.
    *
-   * @param name the lowercase literal name
+   * @param name  the lowercase literal name
    * @param input the partial input
    * @return true if the literal should be considered; false otherwise
    */
@@ -141,12 +141,12 @@ final class SuggestionsProvider<S> {
   /**
    * Returns alias suggestions for the given input.
    *
-   * @param reader the input reader
+   * @param reader       the input reader
    * @param contextSoFar an empty context
    * @return a future that completes with the suggestions
    */
   private CompletableFuture<Suggestions> provideAliasSuggestions(
-          final StringReader reader, final CommandContextBuilder<S> contextSoFar) {
+      final StringReader reader, final CommandContextBuilder<S> contextSoFar) {
     final S source = contextSoFar.getSource();
     // Lowercase the alias here so all comparisons can be case-sensitive (cheaper)
     // TODO Is this actually faster? It may incur an allocation
@@ -165,8 +165,7 @@ final class SuggestionsProvider<S> {
       final String alias = node.getName();
 
       if (shouldConsider(alias, input) && node.canUse(source)) {
-        final CommandContextBuilder<S> context = contextSoFar.copy()
-                .withNode(node, ALIAS_SUGGESTION_RANGE);
+        final CommandContextBuilder<S> context = contextSoFar.copy().withNode(node, ALIAS_SUGGESTION_RANGE);
         if (node.canUse(context, reader)) {
           // LiteralCommandNode#listSuggestions is case insensitive
           final SuggestionsBuilder builder = new SuggestionsBuilder(input, 0);
@@ -184,14 +183,14 @@ final class SuggestionsProvider<S> {
    *
    * <p>The context is not mutated by this method. The reader's cursor may be modified.
    *
-   * @param alias the alias node
-   * @param reader the input reader
+   * @param alias        the alias node
+   * @param reader       the input reader
    * @param contextSoFar the context, containing {@code alias}
    * @return a future that completes with the suggestions
    */
   private CompletableFuture<Suggestions> provideArgumentsSuggestions(
-          final LiteralCommandNode<S> alias, final StringReader reader,
-          final CommandContextBuilder<S> contextSoFar) {
+      final LiteralCommandNode<S> alias, final StringReader reader,
+      final CommandContextBuilder<S> contextSoFar) {
     final S source = contextSoFar.getSource();
     final String fullInput = reader.getString();
     final VelocityArgumentCommandNode<S, ?> argsNode = VelocityCommands.getArgumentsNode(alias);
@@ -226,8 +225,7 @@ final class SuggestionsProvider<S> {
 
     // Ask the command for suggestions via the arguments node
     reader.setCursor(start);
-    final CompletableFuture<Suggestions> cmdSuggestions =
-            this.getArgumentsNodeSuggestions(argsNode, reader, context);
+    final CompletableFuture<Suggestions> cmdSuggestions = this.getArgumentsNodeSuggestions(argsNode, reader, context);
     final boolean hasHints = alias.getChildren().size() > 1;
     if (!hasHints) {
       return this.merge(fullInput, cmdSuggestions);
@@ -235,8 +233,7 @@ final class SuggestionsProvider<S> {
 
     // Parse the hint nodes to get remaining suggestions
     reader.setCursor(start);
-    final CompletableFuture<Suggestions> hintSuggestions =
-            this.getHintSuggestions(alias, reader, contextSoFar);
+    final CompletableFuture<Suggestions> hintSuggestions = this.getHintSuggestions(alias, reader, contextSoFar);
     return this.merge(fullInput, cmdSuggestions, hintSuggestions);
   }
 
@@ -246,14 +243,14 @@ final class SuggestionsProvider<S> {
    *
    * <p>The reader and context are not mutated by this method.
    *
-   * @param node the arguments node of the command
-   * @param reader the input reader
+   * @param node    the arguments node of the command
+   * @param reader  the input reader
    * @param context the context, containing an alias node and {@code node}
    * @return a future that completes with the suggestions
    */
   private CompletableFuture<Suggestions> getArgumentsNodeSuggestions(
-          final VelocityArgumentCommandNode<S, ?> node, final StringReader reader,
-          final CommandContextBuilder<S> context) {
+      final VelocityArgumentCommandNode<S, ?> node, final StringReader reader,
+      final CommandContextBuilder<S> context) {
     final int start = reader.getCursor();
     final String fullInput = reader.getString();
     final CommandContext<S> built = context.build(fullInput);
@@ -271,14 +268,14 @@ final class SuggestionsProvider<S> {
    *
    * <p>The reader and context are not mutated by this method.
    *
-   * @param alias the alias node
-   * @param reader the input reader
+   * @param alias   the alias node
+   * @param reader  the input reader
    * @param context the context, containing {@code alias}
    * @return a future that completes with the suggestions
    */
   private CompletableFuture<Suggestions> getHintSuggestions(
-          final LiteralCommandNode<S> alias, final StringReader reader,
-          final CommandContextBuilder<S> context) {
+      final LiteralCommandNode<S> alias, final StringReader reader,
+      final CommandContextBuilder<S> context) {
     final ParseResults<S> parse = this.parseHints(alias, reader, context);
     try {
       return this.dispatcher.getCompletionSuggestions(parse);
@@ -295,15 +292,15 @@ final class SuggestionsProvider<S> {
    *
    * <p>The reader and context are not mutated by this method.
    *
-   * @param node the node to parse
+   * @param node           the node to parse
    * @param originalReader the input reader
-   * @param contextSoFar the context, containing the alias node of the command
+   * @param contextSoFar   the context, containing the alias node of the command
    * @return the parse results containing the parsed hint nodes
    * @see VelocityCommandMeta#copyHints(CommandMeta) for the conditions under which the returned
-   *      hints can be suggested to a {@link CommandSource}.
+   * hints can be suggested to a {@link CommandSource}.
    */
   private ParseResults<S> parseHints(final CommandNode<S> node, final StringReader originalReader,
-                                     final CommandContextBuilder<S> contextSoFar) {
+      final CommandContextBuilder<S> contextSoFar) {
     // This is a stripped-down version of CommandDispatcher#parseNodes that doesn't
     // check the requirements are satisfied and ignores redirects, neither of which
     // are used by hint nodes. Parsing errors are ignored.
@@ -355,12 +352,12 @@ final class SuggestionsProvider<S> {
    * are ignored.
    *
    * @param fullInput the command input
-   * @param futures the futures that complete with the suggestions
+   * @param futures   the futures that complete with the suggestions
    * @return the future that completes with the merged suggestions
    */
   @SafeVarargs
   private CompletableFuture<Suggestions> merge(
-          final String fullInput, final CompletableFuture<Suggestions>... futures) {
+      final String fullInput, final CompletableFuture<Suggestions>... futures) {
     // https://github.com/Mojang/brigadier/pull/81
     return CompletableFuture.allOf(futures).handle((unused, throwable) -> {
       final List<Suggestions> suggestions = new ArrayList<>(futures.length);
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandManager.java b/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandManager.java
index 0fc0ea8b..0e506a65 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandManager.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandManager.java
@@ -25,7 +25,6 @@ import com.mojang.brigadier.ParseResults;
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
 import com.mojang.brigadier.suggestion.Suggestion;
 import com.mojang.brigadier.tree.RootCommandNode;
-import com.spotify.futures.CompletableFutures;
 import com.velocitypowered.api.command.BrigadierCommand;
 import com.velocitypowered.api.command.Command;
 import com.velocitypowered.api.command.CommandManager;
@@ -70,9 +69,9 @@ public class VelocityCommandManager implements CommandManager {
     this.eventManager = Preconditions.checkNotNull(eventManager);
     final RootCommandNode<CommandSource> root = this.dispatcher.getRoot();
     this.registrars = ImmutableList.of(
-            new BrigadierCommandRegistrar(root, this.lock.writeLock()),
-            new SimpleCommandRegistrar(root, this.lock.writeLock()),
-            new RawCommandRegistrar(root, this.lock.writeLock()));
+        new BrigadierCommandRegistrar(root, this.lock.writeLock()),
+        new SimpleCommandRegistrar(root, this.lock.writeLock()),
+        new RawCommandRegistrar(root, this.lock.writeLock()));
     this.suggestionsProvider = new SuggestionsProvider<>(this.dispatcher, this.lock.readLock());
     this.injector = new CommandGraphInjector<>(this.dispatcher, this.lock.readLock());
   }
@@ -110,8 +109,7 @@ public class VelocityCommandManager implements CommandManager {
         return; // success
       }
     }
-    throw new IllegalArgumentException(
-            command + " does not implement a registrable Command subinterface");
+    throw new IllegalArgumentException(command + " does not implement a registrable Command subinterface");
   }
 
   /**
@@ -120,15 +118,15 @@ public class VelocityCommandManager implements CommandManager {
    * of the given registrar.
    *
    * @param registrar the registrar to register the command
-   * @param command the command to register
-   * @param meta the command metadata
-   * @param <T> the type of the command
+   * @param command   the command to register
+   * @param meta      the command metadata
+   * @param <T>       the type of the command
    * @return true if the command implements the registrable superinterface of the registrar;
-   *         false otherwise.
+   * false otherwise.
    * @throws IllegalArgumentException if the registrar cannot register the command
    */
   private <T extends Command> boolean tryRegister(final CommandRegistrar<T> registrar,
-                                                  final Command command, final CommandMeta meta) {
+      final Command command, final CommandMeta meta) {
     final Class<T> superInterface = registrar.registrableSuperInterface();
     if (!superInterface.isInstance(command)) {
       return false;
@@ -148,12 +146,11 @@ public class VelocityCommandManager implements CommandManager {
   /**
    * Fires a {@link CommandExecuteEvent}.
    *
-   * @param source the source to execute the command for
+   * @param source  the source to execute the command for
    * @param cmdLine the command to execute
    * @return the {@link CompletableFuture} of the event
    */
-  public CompletableFuture<CommandExecuteEvent> callCommandEvent(final CommandSource source,
-      final String cmdLine) {
+  public CompletableFuture<CommandExecuteEvent> callCommandEvent(final CommandSource source, final String cmdLine) {
     Preconditions.checkNotNull(source, "source");
     Preconditions.checkNotNull(cmdLine, "cmdLine");
     return eventManager.fire(new CommandExecuteEvent(source, cmdLine));
@@ -211,32 +208,31 @@ public class VelocityCommandManager implements CommandManager {
   /**
    * Returns suggestions to fill in the given command.
    *
-   * @param source the source to execute the command for
+   * @param source  the source to execute the command for
    * @param cmdLine the partially completed command
    * @return a {@link CompletableFuture} eventually completed with a {@link List},
-   *         possibly empty
+   * possibly empty
    */
-  public CompletableFuture<List<String>> offerSuggestions(final CommandSource source,
-      final String cmdLine) {
+  public CompletableFuture<List<String>> offerSuggestions(final CommandSource source, final String cmdLine) {
     Preconditions.checkNotNull(source, "source");
     Preconditions.checkNotNull(cmdLine, "cmdLine");
 
     final String normalizedInput = VelocityCommands.normalizeInput(cmdLine, false);
     try {
       return suggestionsProvider.provideSuggestions(normalizedInput, source)
-              .thenApply(suggestions ->
-                      Lists.transform(suggestions.getList(), Suggestion::getText));
+          .thenApply(suggestions ->
+              Lists.transform(suggestions.getList(), Suggestion::getText));
     } catch (final Throwable e) {
       // Again, plugins are naughty
       return CompletableFuture.failedFuture(
-        new RuntimeException("Unable to provide suggestions for " + cmdLine + " for " + source, e));
+          new RuntimeException("Unable to provide suggestions for " + cmdLine + " for " + source, e));
     }
   }
 
   /**
    * Parses the given command input.
    *
-   * @param input the normalized command input, without the leading slash ('/')
+   * @param input  the normalized command input, without the leading slash ('/')
    * @param source the command source to parse the command for
    * @return the parse results
    */
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandMeta.java b/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandMeta.java
index b3449e4f..84db1f44 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandMeta.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandMeta.java
@@ -41,7 +41,7 @@ public final class VelocityCommandMeta implements CommandMeta {
     public Builder(final String alias) {
       Preconditions.checkNotNull(alias, "alias");
       this.aliases = ImmutableSet.<String>builder()
-              .add(alias.toLowerCase(Locale.ENGLISH));
+          .add(alias.toLowerCase(Locale.ENGLISH));
       this.hints = ImmutableList.builder();
     }
 
@@ -90,8 +90,8 @@ public final class VelocityCommandMeta implements CommandMeta {
     // We need to perform a deep copy of the hint to prevent the user
     // from modifying the nodes and adding a Command or a redirect.
     final ArgumentBuilder<CommandSource, ?> builder = hint.createBuilder()
-            // Requirement checking is performed by SuggestionProvider
-            .requires(source -> false);
+        // Requirement checking is performed by SuggestionProvider
+        .requires(source -> false);
     for (final CommandNode<CommandSource> child : hint.getChildren()) {
       builder.then(copyForHinting(child));
     }
@@ -112,8 +112,7 @@ public final class VelocityCommandMeta implements CommandMeta {
   private final Set<String> aliases;
   private final List<CommandNode<CommandSource>> hints;
 
-  private VelocityCommandMeta(
-          final Set<String> aliases, final List<CommandNode<CommandSource>> hints) {
+  private VelocityCommandMeta(final Set<String> aliases, final List<CommandNode<CommandSource>> hints) {
     this.aliases = aliases;
     this.hints = hints;
   }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommands.java b/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommands.java
index 262812f2..15ba47bb 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommands.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommands.java
@@ -46,12 +46,11 @@ import org.checkerframework.checker.nullness.qual.Nullable;
 public final class VelocityCommands {
 
   // Normalization
-
   /**
    * Normalizes the given command input.
    *
    * @param input the raw command input, without the leading slash ('/')
-   * @param trim whether to remove leading and trailing whitespace from the input
+   * @param trim  whether to remove leading and trailing whitespace from the input
    * @return the normalized command input
    */
   static String normalizeInput(final String input, final boolean trim) {
@@ -60,7 +59,7 @@ public final class VelocityCommands {
     if (firstSep != -1) {
       // Aliases are case-insensitive, arguments are not
       return command.substring(0, firstSep).toLowerCase(Locale.ENGLISH)
-              + command.substring(firstSep);
+          + command.substring(firstSep);
     } else {
       return command.toLowerCase(Locale.ENGLISH);
     }
@@ -89,10 +88,10 @@ public final class VelocityCommands {
    * no arguments were provided.
    *
    * @param arguments the map of parsed arguments, as returned by
-   *        {@link CommandContext#getArguments()} or {@link CommandContextBuilder#getArguments()}
-   * @param type the type class of the arguments
-   * @param fallback the value to return if no arguments were provided
-   * @param <V> the type of the arguments
+   *                  {@link CommandContext#getArguments()} or {@link CommandContextBuilder#getArguments()}
+   * @param type      the type class of the arguments
+   * @param fallback  the value to return if no arguments were provided
+   * @param <V>       the type of the arguments
    * @return the command arguments
    */
   public static <V> V readArguments(final Map<String, ? extends ParsedArgument<?, ?>> arguments,
@@ -106,7 +105,7 @@ public final class VelocityCommands {
       return type.cast(result);
     } catch (final ClassCastException e) {
       throw new IllegalArgumentException("Parsed argument is of type " + result.getClass()
-              + ", expected " + type, e);
+          + ", expected " + type, e);
     }
   }
 
@@ -130,11 +129,11 @@ public final class VelocityCommands {
    * Creates a copy of the given literal with the specified name.
    *
    * @param original the literal node to copy
-   * @param newName the name of the returned literal node
+   * @param newName  the name of the returned literal node
    * @return a copy of the literal with the given name
    */
   public static LiteralCommandNode<CommandSource> shallowCopy(
-          final LiteralCommandNode<CommandSource> original, final String newName) {
+      final LiteralCommandNode<CommandSource> original, final String newName) {
     // Brigadier resolves the redirect of a node if further input can be parsed.
     // Let <bar> be a literal node having a redirect to a <foo> literal. Then,
     // the context returned by CommandDispatcher#parseNodes when given the input
@@ -145,11 +144,11 @@ public final class VelocityCommands {
     Preconditions.checkNotNull(original, "original");
     Preconditions.checkNotNull(newName, "secondaryAlias");
     final LiteralArgumentBuilder<CommandSource> builder = LiteralArgumentBuilder
-            .<CommandSource>literal(newName)
-            .requires(original.getRequirement())
-            .requiresWithContext(original.getContextRequirement())
-            .forward(original.getRedirect(), original.getRedirectModifier(), original.isFork())
-            .executes(original.getCommand());
+        .<CommandSource>literal(newName)
+        .requires(original.getRequirement())
+        .requiresWithContext(original.getContextRequirement())
+        .forward(original.getRedirect(), original.getRedirectModifier(), original.isFork())
+        .executes(original.getCommand());
     for (final CommandNode<CommandSource> child : original.getChildren()) {
       builder.then(child);
     }
@@ -163,11 +162,10 @@ public final class VelocityCommands {
    * if present; otherwise returns {@code null}.
    *
    * @param alias the alias node
-   * @param <S> the type of the command source
+   * @param <S>   the type of the command source
    * @return the arguments node, or null if not present
    */
-  static <S> @Nullable VelocityArgumentCommandNode<S, ?> getArgumentsNode(
-          final LiteralCommandNode<S> alias) {
+  static <S> @Nullable VelocityArgumentCommandNode<S, ?> getArgumentsNode(final LiteralCommandNode<S> alias) {
     final CommandNode<S> node = alias.getChild(ARGS_NODE_NAME);
     if (node instanceof VelocityArgumentCommandNode) {
       return (VelocityArgumentCommandNode<S, ?>) node;
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/brigadier/StringArrayArgumentType.java b/proxy/src/main/java/com/velocitypowered/proxy/command/brigadier/StringArrayArgumentType.java
index eefeec46..c09506ed 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/brigadier/StringArrayArgumentType.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/brigadier/StringArrayArgumentType.java
@@ -35,11 +35,11 @@ public final class StringArrayArgumentType implements ArgumentType<String[]> {
   public static final StringArrayArgumentType INSTANCE = new StringArrayArgumentType();
   public static final String[] EMPTY = new String[0];
 
-  private static final Splitter WORD_SPLITTER =
-          Splitter.on(CommandDispatcher.ARGUMENT_SEPARATOR_CHAR);
+  private static final Splitter WORD_SPLITTER = Splitter.on(CommandDispatcher.ARGUMENT_SEPARATOR_CHAR);
   private static final List<String> EXAMPLES = Arrays.asList("word", "some words");
 
-  private StringArrayArgumentType() {}
+  private StringArrayArgumentType() {
+  }
 
   @Override
   public String[] parse(final StringReader reader) throws CommandSyntaxException {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/brigadier/VelocityArgumentBuilder.java b/proxy/src/main/java/com/velocitypowered/proxy/command/brigadier/VelocityArgumentBuilder.java
index 62e8c8b9..b996e7a4 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/brigadier/VelocityArgumentBuilder.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/brigadier/VelocityArgumentBuilder.java
@@ -31,7 +31,7 @@ import org.checkerframework.checker.nullness.qual.Nullable;
  * @param <T> the type of the argument to parse
  */
 public final class VelocityArgumentBuilder<S, T>
-        extends ArgumentBuilder<S, VelocityArgumentBuilder<S, T>> {
+    extends ArgumentBuilder<S, VelocityArgumentBuilder<S, T>> {
 
   /**
    * Creates a builder for creating {@link VelocityArgumentCommandNode}s with
@@ -39,12 +39,11 @@ public final class VelocityArgumentBuilder<S, T>
    *
    * @param name the name of the node
    * @param type the type of the argument to parse
-   * @param <S> the type of the command source
-   * @param <T> the type of the argument to parse
+   * @param <S>  the type of the command source
+   * @param <T>  the type of the argument to parse
    * @return a builder
    */
-  public static <S, T> VelocityArgumentBuilder<S, T> velocityArgument(final String name,
-                                                                    final ArgumentType<T> type) {
+  public static <S, T> VelocityArgumentBuilder<S, T> velocityArgument(final String name, final ArgumentType<T> type) {
     Preconditions.checkNotNull(name, "name");
     Preconditions.checkNotNull(type, "type");
     return new VelocityArgumentBuilder<>(name, type);
@@ -82,7 +81,6 @@ public final class VelocityArgumentBuilder<S, T>
   @Override
   public VelocityArgumentCommandNode<S, T> build() {
     return new VelocityArgumentCommandNode<>(this.name, this.type, getCommand(), getRequirement(),
-            getContextRequirement(), getRedirect(), getRedirectModifier(), isFork(),
-            this.suggestionsProvider);
+        getContextRequirement(), getRedirect(), getRedirectModifier(), isFork(), this.suggestionsProvider);
   }
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/brigadier/VelocityArgumentCommandNode.java b/proxy/src/main/java/com/velocitypowered/proxy/command/brigadier/VelocityArgumentCommandNode.java
index d0bb4f6e..c1b46e4d 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/brigadier/VelocityArgumentCommandNode.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/brigadier/VelocityArgumentCommandNode.java
@@ -52,25 +52,25 @@ public class VelocityArgumentCommandNode<S, T> extends ArgumentCommandNode<S, St
   private final ArgumentType<T> type;
 
   VelocityArgumentCommandNode(
-          final String name, final ArgumentType<T> type, final Command<S> command,
-          final Predicate<S> requirement,
-          final BiPredicate<CommandContextBuilder<S>, ImmutableStringReader> contextRequirement,
-          final CommandNode<S> redirect, final RedirectModifier<S> modifier, final boolean forks,
-          final SuggestionProvider<S> customSuggestions) {
+      final String name, final ArgumentType<T> type, final Command<S> command,
+      final Predicate<S> requirement,
+      final BiPredicate<CommandContextBuilder<S>, ImmutableStringReader> contextRequirement,
+      final CommandNode<S> redirect, final RedirectModifier<S> modifier, final boolean forks,
+      final SuggestionProvider<S> customSuggestions) {
     super(name, StringArgumentType.greedyString(), command, requirement, contextRequirement,
-            redirect, modifier, forks, customSuggestions);
+        redirect, modifier, forks, customSuggestions);
     this.type = Preconditions.checkNotNull(type, "type");
   }
 
   @Override
   public void parse(final StringReader reader, final CommandContextBuilder<S> contextBuilder)
-          throws CommandSyntaxException {
+      throws CommandSyntaxException {
     // Same as super, except we use the rich ArgumentType
     final int start = reader.getCursor();
     final T result = this.type.parse(reader);
     if (reader.canRead()) {
       throw CommandSyntaxException.BUILT_IN_EXCEPTIONS.dispatcherParseException()
-              .createWithContext(reader, "Expected greedy ArgumentType to parse all input");
+          .createWithContext(reader, "Expected greedy ArgumentType to parse all input");
     }
 
     final ParsedArgument<S, T> parsed = new ParsedArgument<>(start, reader.getCursor(), result);
@@ -80,8 +80,8 @@ public class VelocityArgumentCommandNode<S, T> extends ArgumentCommandNode<S, St
 
   @Override
   public CompletableFuture<Suggestions> listSuggestions(
-          final CommandContext<S> context, final SuggestionsBuilder builder)
-          throws CommandSyntaxException {
+      final CommandContext<S> context, final SuggestionsBuilder builder)
+      throws CommandSyntaxException {
     if (getCustomSuggestions() == null) {
       return Suggestions.empty();
     }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/builtin/GlistCommand.java b/proxy/src/main/java/com/velocitypowered/proxy/command/builtin/GlistCommand.java
index f9251320..561a492d 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/builtin/GlistCommand.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/builtin/GlistCommand.java
@@ -37,8 +37,6 @@ import net.elytrium.elytraproxy.config.Settings;
 import net.kyori.adventure.identity.Identity;
 import net.kyori.adventure.text.Component;
 import net.kyori.adventure.text.TextComponent;
-import net.kyori.adventure.text.TranslatableComponent;
-import net.kyori.adventure.text.format.NamedTextColor;
 import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
 
 public class GlistCommand {
@@ -99,8 +97,7 @@ public class GlistCommand {
     } else {
       Optional<RegisteredServer> registeredServer = server.getServer(serverName);
       if (!registeredServer.isPresent()) {
-        source.sendMessage(Identity.nil(),
-            CommandMessages.SERVER_DOES_NOT_EXIST(serverName));
+        source.sendMessage(Identity.nil(), CommandMessages.SERVER_DOES_NOT_EXIST(serverName));
         return -1;
       }
       sendServerPlayers(source, registeredServer.get(), false);
@@ -112,19 +109,19 @@ public class GlistCommand {
     int online = server.getAllPlayers().size();
     Component msg = online == 1
         ? LegacyComponentSerializer
-            .legacyAmpersand()
-            .deserialize(Settings.IMP.MESSAGES.VELOCITY.COMMAND.GLIST_PLAYER_SINGULAR
-                .replace("{NL}", "\n")
-                .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
-                .replace("{0}", Integer.toString(online)
-        ))
-            : LegacyComponentSerializer
-                .legacyAmpersand()
-                .deserialize(Settings.IMP.MESSAGES.VELOCITY.COMMAND.GLIST_PLAYER_PLURAL
-                    .replace("{NL}", "\n")
-                    .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
-                    .replace("{0}", Integer.toString(online)
-        ));
+        .legacyAmpersand()
+        .deserialize(Settings.IMP.MESSAGES.VELOCITY.COMMAND.GLIST_PLAYER_SINGULAR
+            .replace("{NL}", "\n")
+            .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
+            .replace("{0}", Integer.toString(online)
+            ))
+        : LegacyComponentSerializer
+        .legacyAmpersand()
+        .deserialize(Settings.IMP.MESSAGES.VELOCITY.COMMAND.GLIST_PLAYER_PLURAL
+            .replace("{NL}", "\n")
+            .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
+            .replace("{0}", Integer.toString(online)
+            ));
     target.sendMessage(msg);
   }
 
@@ -142,8 +139,8 @@ public class GlistCommand {
                     .replace("{NL}", "\n")
                     .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
                     .replace("{0}", server.getServerInfo().getName())
-                    .replace("{1}", Integer.toString(onServer.size())
-        ))).resetStyle();
+                    .replace("{1}", Integer.toString(onServer.size()))
+                )).resetStyle();
 
     for (int i = 0; i < onServer.size(); i++) {
       Player player = onServer.get(i);
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/builtin/ServerCommand.java b/proxy/src/main/java/com/velocitypowered/proxy/command/builtin/ServerCommand.java
index fa55a506..b14dd94c 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/builtin/ServerCommand.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/builtin/ServerCommand.java
@@ -148,13 +148,10 @@ public class ServerCommand implements SimpleCommand {
               showText(
                   LegacyComponentSerializer
                       .legacyAmpersand()
-                      .deserialize(Settings.IMP.MESSAGES.VELOCITY.COMMAND
-                              .SERVER_TOOLTIP_CURRENT_SERVER
+                      .deserialize(Settings.IMP.MESSAGES.VELOCITY.COMMAND.SERVER_TOOLTIP_CURRENT_SERVER
                           .replace("{NL}", "\n")
                           .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
-                          .replace("{0}", LegacyComponentSerializer
-                              .legacySection()
-                              .serialize(playersTextComponent))
+                          .replace("{0}", LegacyComponentSerializer.legacySection().serialize(playersTextComponent))
                       )));
     } else {
       serverTextComponent = serverTextComponent.color(NamedTextColor.GRAY)
@@ -163,13 +160,10 @@ public class ServerCommand implements SimpleCommand {
               showText(
                   LegacyComponentSerializer
                       .legacyAmpersand()
-                      .deserialize(Settings.IMP.MESSAGES.VELOCITY.COMMAND
-                              .SERVER_TOOLTIP_OFFER_CONNECT_SERVER
+                      .deserialize(Settings.IMP.MESSAGES.VELOCITY.COMMAND.SERVER_TOOLTIP_OFFER_CONNECT_SERVER
                           .replace("{NL}", "\n")
                           .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
-                          .replace("{0}", LegacyComponentSerializer
-                              .legacySection()
-                              .serialize(playersTextComponent))
+                          .replace("{0}", LegacyComponentSerializer.legacySection().serialize(playersTextComponent))
                       )));
     }
     return serverTextComponent;
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/invocation/CommandInvocationFactory.java b/proxy/src/main/java/com/velocitypowered/proxy/command/invocation/CommandInvocationFactory.java
index c462a01c..4436b573 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/invocation/CommandInvocationFactory.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/invocation/CommandInvocationFactory.java
@@ -63,16 +63,16 @@ public interface CommandInvocationFactory<I extends CommandInvocation<?>> {
   /**
    * Creates an invocation from the given parsed nodes and arguments.
    *
-   * @param source the command source
-   * @param nodes the list of parsed nodes, as returned by {@link CommandContext#getNodes()} and
-   *              {@link CommandContextBuilder#getNodes()}
+   * @param source    the command source
+   * @param nodes     the list of parsed nodes, as returned by {@link CommandContext#getNodes()} and
+   *                  {@link CommandContextBuilder#getNodes()}
    * @param arguments the list of parsed arguments, as returned by
-   *        {@link CommandContext#getArguments()} and {@link CommandContextBuilder#getArguments()}
+   *                  {@link CommandContext#getArguments()} and {@link CommandContextBuilder#getArguments()}
    * @return the built invocation context
    */
   // This provides an abstraction over methods common to CommandContext and CommandContextBuilder.
   // Annoyingly, they mostly have the same getters but one is (correctly) not a subclass of
   // the other. Subclasses may override the methods above to obtain class-specific data.
   I create(final CommandSource source, final List<? extends ParsedCommandNode<?>> nodes,
-           final Map<String, ? extends ParsedArgument<?, ?>> arguments);
+      final Map<String, ? extends ParsedArgument<?, ?>> arguments);
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/invocation/RawCommandInvocation.java b/proxy/src/main/java/com/velocitypowered/proxy/command/invocation/RawCommandInvocation.java
index 2579a2e6..98d72d6b 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/invocation/RawCommandInvocation.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/invocation/RawCommandInvocation.java
@@ -26,8 +26,7 @@ import com.velocitypowered.proxy.command.VelocityCommands;
 import java.util.List;
 import java.util.Map;
 
-public final class RawCommandInvocation extends AbstractCommandInvocation<String>
-        implements RawCommand.Invocation {
+public final class RawCommandInvocation extends AbstractCommandInvocation<String> implements RawCommand.Invocation {
 
   public static final Factory FACTORY = new Factory();
 
@@ -35,8 +34,8 @@ public final class RawCommandInvocation extends AbstractCommandInvocation<String
 
     @Override
     public RawCommand.Invocation create(
-            final CommandSource source, final List<? extends ParsedCommandNode<?>> nodes,
-            final Map<String, ? extends ParsedArgument<?, ?>> arguments) {
+        final CommandSource source, final List<? extends ParsedCommandNode<?>> nodes,
+        final Map<String, ? extends ParsedArgument<?, ?>> arguments) {
       final String alias = VelocityCommands.readAlias(nodes);
       final String args = VelocityCommands.readArguments(arguments, String.class, "");
       return new RawCommandInvocation(source, alias, args);
@@ -45,8 +44,7 @@ public final class RawCommandInvocation extends AbstractCommandInvocation<String
 
   private final String alias;
 
-  private RawCommandInvocation(final CommandSource source,
-                               final String alias, final String arguments) {
+  private RawCommandInvocation(final CommandSource source, final String alias, final String arguments) {
     super(source, arguments);
     this.alias = Preconditions.checkNotNull(alias, "alias");
   }
@@ -82,9 +80,9 @@ public final class RawCommandInvocation extends AbstractCommandInvocation<String
   @Override
   public String toString() {
     return "RawCommandInvocation{"
-            + "source='" + this.source() + '\''
-            + ", alias='" + this.alias + '\''
-            + ", arguments='" + this.arguments() + '\''
-            + '}';
+        + "source='" + this.source() + '\''
+        + ", alias='" + this.alias + '\''
+        + ", arguments='" + this.arguments() + '\''
+        + '}';
   }
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/invocation/SimpleCommandInvocation.java b/proxy/src/main/java/com/velocitypowered/proxy/command/invocation/SimpleCommandInvocation.java
index a6ec6061..c0c00d52 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/invocation/SimpleCommandInvocation.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/invocation/SimpleCommandInvocation.java
@@ -29,7 +29,7 @@ import java.util.List;
 import java.util.Map;
 
 public final class SimpleCommandInvocation extends AbstractCommandInvocation<String[]>
-        implements SimpleCommand.Invocation {
+    implements SimpleCommand.Invocation {
 
   public static final Factory FACTORY = new Factory();
 
@@ -37,19 +37,17 @@ public final class SimpleCommandInvocation extends AbstractCommandInvocation<Str
 
     @Override
     public SimpleCommand.Invocation create(
-            final CommandSource source, final List<? extends ParsedCommandNode<?>> nodes,
-            final Map<String, ? extends ParsedArgument<?, ?>> arguments) {
+        final CommandSource source, final List<? extends ParsedCommandNode<?>> nodes,
+        final Map<String, ? extends ParsedArgument<?, ?>> arguments) {
       final String alias = VelocityCommands.readAlias(nodes);
-      final String[] args = VelocityCommands.readArguments(
-              arguments, String[].class, StringArrayArgumentType.EMPTY);
+      final String[] args = VelocityCommands.readArguments(arguments, String[].class, StringArrayArgumentType.EMPTY);
       return new SimpleCommandInvocation(source, alias, args);
     }
   }
 
   private final String alias;
 
-  SimpleCommandInvocation(final CommandSource source, final String alias,
-                          final String[] arguments) {
+  SimpleCommandInvocation(final CommandSource source, final String alias, final String[] arguments) {
     super(source, arguments);
     this.alias = Preconditions.checkNotNull(alias, "alias");
   }
@@ -85,9 +83,9 @@ public final class SimpleCommandInvocation extends AbstractCommandInvocation<Str
   @Override
   public String toString() {
     return "SimpleCommandInvocation{"
-            + "source='" + this.source() + '\''
-            + ", alias='" + this.alias + '\''
-            + ", arguments='" + Arrays.toString(this.arguments()) + '\''
-            + '}';
+        + "source='" + this.source() + '\''
+        + ", alias='" + this.alias + '\''
+        + ", arguments='" + Arrays.toString(this.arguments()) + '\''
+        + '}';
   }
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/AbstractCommandRegistrar.java b/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/AbstractCommandRegistrar.java
index c5fa6f46..b95e7cce 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/AbstractCommandRegistrar.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/AbstractCommandRegistrar.java
@@ -52,10 +52,8 @@ abstract class AbstractCommandRegistrar<T extends Command> implements CommandReg
     }
   }
 
-  protected void register(final LiteralCommandNode<CommandSource> node,
-                          final String secondaryAlias) {
-    final LiteralCommandNode<CommandSource> copy =
-            VelocityCommands.shallowCopy(node, secondaryAlias);
+  protected void register(final LiteralCommandNode<CommandSource> node, final String secondaryAlias) {
+    final LiteralCommandNode<CommandSource> copy = VelocityCommands.shallowCopy(node, secondaryAlias);
     this.register(copy);
   }
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/CommandRegistrar.java b/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/CommandRegistrar.java
index 5b53aee8..5890615d 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/CommandRegistrar.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/CommandRegistrar.java
@@ -33,7 +33,7 @@ public interface CommandRegistrar<T extends Command> {
   /**
    * Registers the given command.
    *
-   * @param meta the command metadata, including the case-insensitive aliases
+   * @param meta    the command metadata, including the case-insensitive aliases
    * @param command the command to register
    * @throws IllegalArgumentException if the given command cannot be registered
    */
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/InvocableCommandRegistrar.java b/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/InvocableCommandRegistrar.java
index e6ff7129..c90ffde1 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/InvocableCommandRegistrar.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/InvocableCommandRegistrar.java
@@ -42,14 +42,14 @@ import java.util.function.Predicate;
  * {@link InvocableCommand} in a root node.
  */
 abstract class InvocableCommandRegistrar<T extends InvocableCommand<I>,
-        I extends CommandInvocation<A>, A> extends AbstractCommandRegistrar<T> {
+    I extends CommandInvocation<A>, A> extends AbstractCommandRegistrar<T> {
 
   private final CommandInvocationFactory<I> invocationFactory;
   private final ArgumentType<A> argumentsType;
 
   protected InvocableCommandRegistrar(final RootCommandNode<CommandSource> root, final Lock lock,
-                                      final CommandInvocationFactory<I> invocationFactory,
-                                      final ArgumentType<A> argumentsType) {
+      final CommandInvocationFactory<I> invocationFactory,
+      final ArgumentType<A> argumentsType) {
     super(root, lock);
     this.invocationFactory = Preconditions.checkNotNull(invocationFactory, "invocationFactory");
     this.argumentsType = Preconditions.checkNotNull(argumentsType, "argumentsType");
@@ -60,8 +60,7 @@ abstract class InvocableCommandRegistrar<T extends InvocableCommand<I>,
     final Iterator<String> aliases = meta.getAliases().iterator();
 
     final String primaryAlias = aliases.next();
-    final LiteralCommandNode<CommandSource> literal =
-            this.createLiteral(command, meta, primaryAlias);
+    final LiteralCommandNode<CommandSource> literal = this.createLiteral(command, meta, primaryAlias);
     this.register(literal);
 
     while (aliases.hasNext()) {
@@ -83,35 +82,35 @@ abstract class InvocableCommandRegistrar<T extends InvocableCommand<I>,
     };
 
     final LiteralCommandNode<CommandSource> literal = LiteralArgumentBuilder
-            .<CommandSource>literal(alias)
-            .requiresWithContext((context, reader) -> {
-              if (reader.canRead()) {
-                // InvocableCommands do not follow a tree-like permissions checking structure.
-                // Thus, a CommandSource may be able to execute a command with arguments while
-                // not being able to execute the argument-less variant.
-                // Only check for permissions once parsing is complete.
-                return true;
-              }
-              return requirement.test(context);
-            })
-            .executes(callback)
-            .build();
+        .<CommandSource>literal(alias)
+        .requiresWithContext((context, reader) -> {
+          if (reader.canRead()) {
+            // InvocableCommands do not follow a tree-like permissions checking structure.
+            // Thus, a CommandSource may be able to execute a command with arguments while
+            // not being able to execute the argument-less variant.
+            // Only check for permissions once parsing is complete.
+            return true;
+          }
+          return requirement.test(context);
+        })
+        .executes(callback)
+        .build();
 
     final ArgumentCommandNode<CommandSource, String> arguments = VelocityArgumentBuilder
-            .<CommandSource, A>velocityArgument(VelocityCommands.ARGS_NODE_NAME, argumentsType)
-            .requiresWithContext((context, reader) -> requirement.test(context))
-            .executes(callback)
-            .suggests((context, builder) -> {
-              final I invocation = invocationFactory.create(context);
-              return command.suggestAsync(invocation).thenApply(suggestions -> {
-                for (String value : suggestions) {
-                  Preconditions.checkNotNull(value, "suggestion");
-                  builder.suggest(value);
-                }
-                return builder.build();
-              });
-            })
-            .build();
+        .<CommandSource, A>velocityArgument(VelocityCommands.ARGS_NODE_NAME, argumentsType)
+        .requiresWithContext((context, reader) -> requirement.test(context))
+        .executes(callback)
+        .suggests((context, builder) -> {
+          final I invocation = invocationFactory.create(context);
+          return command.suggestAsync(invocation).thenApply(suggestions -> {
+            for (String value : suggestions) {
+              Preconditions.checkNotNull(value, "suggestion");
+              builder.suggest(value);
+            }
+            return builder.build();
+          });
+        })
+        .build();
     literal.addChild(arguments);
 
     // Add hinting nodes
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/RawCommandRegistrar.java b/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/RawCommandRegistrar.java
index 2c1e8f10..4101dc51 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/RawCommandRegistrar.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/RawCommandRegistrar.java
@@ -28,7 +28,7 @@ import java.util.concurrent.locks.Lock;
  * Registers {@link RawCommand}s in a root node.
  */
 public final class RawCommandRegistrar
-        extends InvocableCommandRegistrar<RawCommand, RawCommand.Invocation, String> {
+    extends InvocableCommandRegistrar<RawCommand, RawCommand.Invocation, String> {
 
   public RawCommandRegistrar(final RootCommandNode<CommandSource> root, final Lock lock) {
     super(root, lock, RawCommandInvocation.FACTORY, StringArgumentType.greedyString());
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/SimpleCommandRegistrar.java b/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/SimpleCommandRegistrar.java
index bfd4ef43..8fb749ed 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/SimpleCommandRegistrar.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/registrar/SimpleCommandRegistrar.java
@@ -28,7 +28,7 @@ import java.util.concurrent.locks.Lock;
  * Registers {@link SimpleCommand}s in a root node.
  */
 public final class SimpleCommandRegistrar
-        extends InvocableCommandRegistrar<SimpleCommand, SimpleCommand.Invocation, String[]> {
+    extends InvocableCommandRegistrar<SimpleCommand, SimpleCommand.Invocation, String[]> {
 
   public SimpleCommandRegistrar(final RootCommandNode<CommandSource> root, final Lock lock) {
     super(root, lock, SimpleCommandInvocation.FACTORY, StringArrayArgumentType.INSTANCE);
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/config/VelocityConfiguration.java b/proxy/src/main/java/com/velocitypowered/proxy/config/VelocityConfiguration.java
index 71469abd..44034da7 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/config/VelocityConfiguration.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/config/VelocityConfiguration.java
@@ -58,26 +58,37 @@ public class VelocityConfiguration implements ProxyConfig {
 
   private static final Logger logger = LogManager.getLogger(VelocityConfiguration.class);
 
-  @Expose private String bind = "0.0.0.0:25565";
-  @Expose private String motd = "&3An ElytraProxy Server";
-  @Expose private int showMaxPlayers = 500;
-  @Expose private boolean onlineMode = true;
-  @Expose private boolean preventClientProxyConnections = true;
-  @Expose private PlayerInfoForwarding playerInfoForwardingMode = PlayerInfoForwarding.NONE;
+  @Expose
+  private String bind = "0.0.0.0:25565";
+  @Expose
+  private String motd = "&3An ElytraProxy Server";
+  @Expose
+  private int showMaxPlayers = 500;
+  @Expose
+  private boolean onlineMode = true;
+  @Expose
+  private boolean preventClientProxyConnections = true;
+  @Expose
+  private PlayerInfoForwarding playerInfoForwardingMode = PlayerInfoForwarding.NONE;
   private byte[] forwardingSecret = generateRandomString(12).getBytes(StandardCharsets.UTF_8);
-  @Expose private boolean announceForge = true;
-  @Expose private boolean onlineModeKickExistingPlayers = false;
-  @Expose private PingPassthroughMode pingPassthrough = PingPassthroughMode.DISABLED;
+  @Expose
+  private boolean announceForge = true;
+  @Expose
+  private boolean onlineModeKickExistingPlayers = false;
+  @Expose
+  private PingPassthroughMode pingPassthrough = PingPassthroughMode.DISABLED;
   private final Servers servers;
   private final ForcedHosts forcedHosts;
-  @Expose private final Advanced advanced;
-  @Expose private final Query query;
+  @Expose
+  private final Advanced advanced;
+  @Expose
+  private final Query query;
   private final Metrics metrics;
   private net.kyori.adventure.text.@MonotonicNonNull Component motdAsComponent;
   private @Nullable Favicon favicon;
 
-  private VelocityConfiguration(Servers servers, ForcedHosts forcedHosts, Advanced advanced,
-      Query query, Metrics metrics) {
+  private VelocityConfiguration(Servers servers, ForcedHosts forcedHosts,
+      Advanced advanced, Query query, Metrics metrics) {
     this.servers = servers;
     this.forcedHosts = forcedHosts;
     this.advanced = advanced;
@@ -88,8 +99,8 @@ public class VelocityConfiguration implements ProxyConfig {
   private VelocityConfiguration(String bind, String motd, int showMaxPlayers, boolean onlineMode,
       boolean preventClientProxyConnections, boolean announceForge,
       PlayerInfoForwarding playerInfoForwardingMode, byte[] forwardingSecret,
-      boolean onlineModeKickExistingPlayers, PingPassthroughMode pingPassthrough, Servers servers,
-      ForcedHosts forcedHosts, Advanced advanced, Query query, Metrics metrics) {
+      boolean onlineModeKickExistingPlayers, PingPassthroughMode pingPassthrough,
+      Servers servers, ForcedHosts forcedHosts, Advanced advanced, Query query, Metrics metrics) {
     this.bind = bind;
     this.motd = motd;
     this.showMaxPlayers = showMaxPlayers;
@@ -109,6 +120,7 @@ public class VelocityConfiguration implements ProxyConfig {
 
   /**
    * Attempts to validate the configuration.
+   *
    * @return {@code true} if the configuration is sound, {@code false} if not
    */
   public boolean validate() {
@@ -407,6 +419,7 @@ public class VelocityConfiguration implements ProxyConfig {
 
   /**
    * Reads the Velocity configuration from {@code path}.
+   *
    * @param path the path to read from
    * @return the deserialized Velocity configuration
    * @throws IOException if we could not read from the {@code path}.
@@ -564,7 +577,6 @@ public class VelocityConfiguration implements ProxyConfig {
      * server name before we pass it onto server registration to keep proper server name behavior.
      *
      * @param name the server name to clean
-     *
      * @return the cleaned server name
      */
     private String cleanServerName(String name) {
@@ -632,18 +644,30 @@ public class VelocityConfiguration implements ProxyConfig {
 
   private static class Advanced {
 
-    @Expose private int compressionThreshold = 512;
-    @Expose private int compressionLevel = 9;
-    @Expose private int loginRatelimit = 3000;
-    @Expose private int connectionTimeout = 5000;
-    @Expose private int readTimeout = 30000;
-    @Expose private boolean proxyProtocol = false;
-    @Expose private boolean tcpFastOpen = false;
-    @Expose private boolean bungeePluginMessageChannel = true;
-    @Expose private boolean showPingRequests = true;
-    @Expose private boolean failoverOnUnexpectedServerDisconnect = true;
-    @Expose private boolean announceProxyCommands = true;
-    @Expose private boolean logCommandExecutions = true;
+    @Expose
+    private int compressionThreshold = 512;
+    @Expose
+    private int compressionLevel = 9;
+    @Expose
+    private int loginRatelimit = 3000;
+    @Expose
+    private int connectionTimeout = 5000;
+    @Expose
+    private int readTimeout = 30000;
+    @Expose
+    private boolean proxyProtocol = false;
+    @Expose
+    private boolean tcpFastOpen = false;
+    @Expose
+    private boolean bungeePluginMessageChannel = true;
+    @Expose
+    private boolean showPingRequests = true;
+    @Expose
+    private boolean failoverOnUnexpectedServerDisconnect = true;
+    @Expose
+    private boolean announceProxyCommands = true;
+    @Expose
+    private boolean logCommandExecutions = true;
 
     private Advanced() {
     }
@@ -739,10 +763,14 @@ public class VelocityConfiguration implements ProxyConfig {
 
   private static class Query {
 
-    @Expose private boolean queryEnabled = false;
-    @Expose private int queryPort = 25565;
-    @Expose private String queryMap = "ElytraProxy";
-    @Expose private boolean showPlugins = false;
+    @Expose
+    private boolean queryEnabled = false;
+    @Expose
+    private int queryPort = 25565;
+    @Expose
+    private String queryMap = "ElytraProxy";
+    @Expose
+    private boolean showPlugins = false;
 
     private Query() {
     }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/ConnectionType.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/ConnectionType.java
index 4820ce68..631883e8 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/ConnectionType.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/ConnectionType.java
@@ -45,10 +45,9 @@ public interface ConnectionType {
    * Adds properties to the {@link GameProfile} if required. If any properties
    * are added, the returned {@link GameProfile} will be a copy.
    *
-   * @param original The original {@link GameProfile}
+   * @param original       The original {@link GameProfile}
    * @param forwardingType The Velocity {@link PlayerInfoForwarding}
    * @return The {@link GameProfile} with the properties added in.
    */
-  GameProfile addGameProfileTokensIfRequired(GameProfile original,
-                                             PlayerInfoForwarding forwardingType);
+  GameProfile addGameProfileTokensIfRequired(GameProfile original, PlayerInfoForwarding forwardingType);
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/MinecraftConnection.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/MinecraftConnection.java
index 03901b49..82ff8426 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/MinecraftConnection.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/MinecraftConnection.java
@@ -89,8 +89,9 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
 
   /**
    * Initializes a new {@link MinecraftConnection} instance.
+   *
    * @param channel the channel on the connection
-   * @param server the Velocity instance
+   * @param server  the Velocity instance
    */
   public MinecraftConnection(Channel channel, VelocityServer server) {
     this.channel = channel;
@@ -146,24 +147,24 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
           InetSocketAddress adr1 = (InetSocketAddress) ctx.channel().remoteAddress();
           String notifymsg = "{} tried to connect using {}";
           if (!Settings.IMP.MAIN_SETTINGS.HOSTNAMES_MANAGER.IGNORED_IPS.contains(
-                  adr1.getAddress().getHostAddress())) {
+              adr1.getAddress().getHostAddress())) {
             if (Settings.IMP.MAIN_SETTINGS.HOSTNAMES_MANAGER.WHITELIST) {
               if (Settings.IMP.MAIN_SETTINGS.HOSTNAMES_MANAGER.IPS_CHECK) {
                 if (!Settings.IMP.MAIN_SETTINGS.HOSTNAMES_MANAGER.HOSTNAMES.contains(
-                        adr.getAddress().getHostAddress())) {
+                    adr.getAddress().getHostAddress())) {
                   server.getElytraProxy().getLogger().info(notifymsg,
-                          ctx.channel().remoteAddress(),
-                          adr.getAddress().getHostAddress());
+                      ctx.channel().remoteAddress(),
+                      adr.getAddress().getHostAddress());
                   server.getElytraProxy().getStatistics().addBlockedConnection();
                   return;
                 }
               }
               if (Settings.IMP.MAIN_SETTINGS.HOSTNAMES_MANAGER.DOMAINS_CHECK) {
                 if (!Settings.IMP.MAIN_SETTINGS.HOSTNAMES_MANAGER.HOSTNAMES.contains(
-                        adr.getHostName())) {
+                    adr.getHostName())) {
                   server.getElytraProxy().getLogger().info(notifymsg,
-                          ctx.channel().remoteAddress(),
-                          adr.getHostName());
+                      ctx.channel().remoteAddress(),
+                      adr.getHostName());
                   server.getElytraProxy().getStatistics().addBlockedConnection();
                   return;
                 }
@@ -171,20 +172,20 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
             } else {
               if (Settings.IMP.MAIN_SETTINGS.HOSTNAMES_MANAGER.IPS_CHECK) {
                 if (Settings.IMP.MAIN_SETTINGS.HOSTNAMES_MANAGER.HOSTNAMES.contains(
-                        adr.getAddress().getHostAddress())) {
+                    adr.getAddress().getHostAddress())) {
                   server.getElytraProxy().getLogger().info(notifymsg,
-                          ctx.channel().remoteAddress(),
-                          adr.getAddress().getHostAddress());
+                      ctx.channel().remoteAddress(),
+                      adr.getAddress().getHostAddress());
                   server.getElytraProxy().getStatistics().addBlockedConnection();
                   return;
                 }
               }
               if (Settings.IMP.MAIN_SETTINGS.HOSTNAMES_MANAGER.DOMAINS_CHECK) {
                 if (Settings.IMP.MAIN_SETTINGS.HOSTNAMES_MANAGER.HOSTNAMES.contains(
-                        adr.getHostName())) {
+                    adr.getHostName())) {
                   server.getElytraProxy().getLogger().info(notifymsg,
-                          ctx.channel().remoteAddress(),
-                          adr.getHostName());
+                      ctx.channel().remoteAddress(),
+                      adr.getHostName());
                   server.getElytraProxy().getStatistics().addBlockedConnection();
                   return;
                 }
@@ -272,6 +273,7 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
 
   /**
    * Writes and immediately flushes a message to the connection.
+   *
    * @param msg the message to write
    */
   public void write(Object msg) {
@@ -284,6 +286,7 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
 
   /**
    * Writes, but does not flush, a message to the connection.
+   *
    * @param msg the message to write
    */
   public void delayedWrite(Object msg) {
@@ -305,6 +308,7 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
 
   /**
    * Closes the connection after writing the {@code msg}.
+   *
    * @param msg the message to write
    */
   public void closeWith(Object msg) {
@@ -335,6 +339,7 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
 
   /**
    * Immediately closes the connection.
+   *
    * @param markKnown whether the disconnection is known
    */
   public void close(boolean markKnown) {
@@ -381,6 +386,7 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
 
   /**
    * Determines whether or not the channel should continue reading data automaticaly.
+   *
    * @param autoReading whether or not we should read data automatically
    */
   public void setAutoReading(boolean autoReading) {
@@ -399,6 +405,7 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
 
   /**
    * Changes the state of the Minecraft connection.
+   *
    * @param state the new state
    */
   public void setState(StateRegistry state) {
@@ -415,6 +422,7 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
 
   /**
    * Sets the new protocol version for the connection.
+   *
    * @param protocolVersion the protocol version to use
    */
   public void setProtocolVersion(ProtocolVersion protocolVersion) {
@@ -442,6 +450,7 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
 
   /**
    * Sets the session handler for this connection.
+   *
    * @param sessionHandler the handler to use
    */
   public void setSessionHandler(MinecraftSessionHandler sessionHandler) {
@@ -461,6 +470,7 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
   /**
    * Sets the compression threshold on the connection. You are responsible for sending
    * {@link com.velocitypowered.proxy.protocol.packet.SetCompression} beforehand.
+   *
    * @param threshold the compression threshold to use
    */
   public void setCompressionThreshold(int threshold) {
@@ -502,6 +512,7 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
 
   /**
    * Enables encryption on the connection.
+   *
    * @param secret the secret key negotiated between the client and the server
    * @throws GeneralSecurityException if encryption can't be enabled
    */
@@ -533,6 +544,7 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
 
   /**
    * Gets the detected {@link ConnectionType}.
+   *
    * @return The {@link ConnectionType}
    */
   public ConnectionType getType() {
@@ -541,6 +553,7 @@ public class MinecraftConnection extends ChannelInboundHandlerAdapter {
 
   /**
    * Sets the detected {@link ConnectionType}.
+   *
    * @param connectionType The {@link ConnectionType}
    */
   public void setType(ConnectionType connectionType) {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/MinecraftSessionHandler.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/MinecraftSessionHandler.java
index e3d2cae0..ff3f0234 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/MinecraftSessionHandler.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/MinecraftSessionHandler.java
@@ -53,7 +53,10 @@ import com.velocitypowered.proxy.protocol.packet.title.TitleSubtitlePacket;
 import com.velocitypowered.proxy.protocol.packet.title.TitleTextPacket;
 import com.velocitypowered.proxy.protocol.packet.title.TitleTimesPacket;
 import io.netty.buffer.ByteBuf;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.Player;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.PlayerPosition;
 import net.elytrium.elytraproxy.botfilter.protocol.packet.PlayerPositionAndLook;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.TeleportConfirm;
 
 public interface MinecraftSessionHandler {
 
@@ -233,9 +236,21 @@ public interface MinecraftSessionHandler {
     return false;
   }
 
-  //BotFilter start - add handle methods
+  // BotFilter backport Start: Add handle methods
+  default boolean handle(Player packet) {
+    return false;
+  }
+
+  default boolean handle(PlayerPosition packet) {
+    return false;
+  }
+
   default boolean handle(PlayerPositionAndLook packet) {
     return false;
   }
-  //BotFilter end
+
+  default boolean handle(TeleportConfirm packet) {
+    return false;
+  }
+  // BotFilter backport End
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BackendConnectionPhase.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BackendConnectionPhase.java
index 24a808b0..4e5c05d8 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BackendConnectionPhase.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BackendConnectionPhase.java
@@ -36,14 +36,13 @@ public interface BackendConnectionPhase {
    * @param message The message to handle
    * @return true if handled, false otherwise.
    */
-  default boolean handle(VelocityServerConnection server,
-                         ConnectedPlayer player,
-                         PluginMessage message) {
+  default boolean handle(VelocityServerConnection server, ConnectedPlayer player, PluginMessage message) {
     return false;
   }
 
   /**
    * Indicates whether the connection is considered complete.
+   *
    * @return true if so
    */
   default boolean consideredComplete() {
@@ -55,9 +54,8 @@ public interface BackendConnectionPhase {
    * because the provided player is connecting to a new server.
    *
    * @param serverConnection The server the player is disconnecting from
-   * @param player The player
+   * @param player           The player
    */
-  default void onDepartForNewServer(VelocityServerConnection serverConnection,
-                                    ConnectedPlayer player) {
+  default void onDepartForNewServer(VelocityServerConnection serverConnection, ConnectedPlayer player) {
   }
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BackendConnectionPhases.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BackendConnectionPhases.java
index 3fb42348..2315c7a2 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BackendConnectionPhases.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BackendConnectionPhases.java
@@ -32,7 +32,8 @@ public final class BackendConnectionPhases {
   /**
    * The backend connection is vanilla.
    */
-  public static final BackendConnectionPhase VANILLA = new BackendConnectionPhase() {};
+  public static final BackendConnectionPhase VANILLA = new BackendConnectionPhase() {
+  };
 
   /**
    * The backend connection is unknown at this time.
@@ -44,9 +45,7 @@ public final class BackendConnectionPhases {
     }
 
     @Override
-    public boolean handle(VelocityServerConnection serverConn,
-                          ConnectedPlayer player,
-                          PluginMessage message) {
+    public boolean handle(VelocityServerConnection serverConn, ConnectedPlayer player, PluginMessage message) {
       // The connection may be legacy forge. If so, the Forge handler will deal with this
       // for us. Otherwise, we have nothing to do.
       return LegacyForgeHandshakeBackendPhase.NOT_STARTED.handle(serverConn, player, message);
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BackendPlaySessionHandler.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BackendPlaySessionHandler.java
index fa8dddaf..9b544b6c 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BackendPlaySessionHandler.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BackendPlaySessionHandler.java
@@ -21,8 +21,6 @@ import static com.velocitypowered.proxy.connection.backend.BungeeCordMessageResp
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableList;
-import com.mojang.brigadier.builder.ArgumentBuilder;
-import com.mojang.brigadier.tree.CommandNode;
 import com.mojang.brigadier.tree.RootCommandNode;
 import com.velocitypowered.api.command.CommandSource;
 import com.velocitypowered.api.event.command.PlayerAvailableCommandsEvent;
@@ -52,7 +50,6 @@ import io.netty.buffer.ByteBufUtil;
 import io.netty.buffer.Unpooled;
 import io.netty.channel.Channel;
 import io.netty.handler.timeout.ReadTimeoutException;
-import java.util.Collection;
 import java.util.regex.Pattern;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BungeeCordMessageResponder.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BungeeCordMessageResponder.java
index c55cb6cf..0577a1d0 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BungeeCordMessageResponder.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/BungeeCordMessageResponder.java
@@ -171,8 +171,7 @@ public class BungeeCordMessageResponder {
     processMessage0(in, GsonComponentSerializer.gson());
   }
 
-  private void processMessage0(ByteBufDataInput in,
-      ComponentSerializer<Component, ?, String> serializer) {
+  private void processMessage0(ByteBufDataInput in, ComponentSerializer<Component, ?, String> serializer) {
     String target = in.readUTF();
     String message = in.readUTF();
 
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/LoginSessionHandler.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/LoginSessionHandler.java
index b8627700..d77273f6 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/LoginSessionHandler.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/LoginSessionHandler.java
@@ -62,7 +62,8 @@ public class LoginSessionHandler implements MinecraftSessionHandler {
   private final CompletableFuture<Impl> resultFuture;
   private boolean informationForwarded;
 
-  LoginSessionHandler(VelocityServer server, VelocityServerConnection serverConn,
+  LoginSessionHandler(VelocityServer server,
+      VelocityServerConnection serverConn,
       CompletableFuture<Impl> resultFuture) {
     this.server = server;
     this.serverConn = serverConn;
@@ -160,8 +161,7 @@ public class LoginSessionHandler implements MinecraftSessionHandler {
     }
   }
 
-  private static ByteBuf createForwardingData(byte[] hmacSecret, String address,
-      GameProfile profile) {
+  private static ByteBuf createForwardingData(byte[] hmacSecret, String address, GameProfile profile) {
     ByteBuf forwarded = Unpooled.buffer(2048);
     try {
       ProtocolUtils.writeVarInt(forwarded, VelocityConstants.FORWARDING_VERSION);
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/TransitionSessionHandler.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/TransitionSessionHandler.java
index 35682584..bc29dd80 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/TransitionSessionHandler.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/TransitionSessionHandler.java
@@ -54,8 +54,9 @@ public class TransitionSessionHandler implements MinecraftSessionHandler {
 
   /**
    * Creates the new transition handler.
-   * @param server the Velocity server instance
-   * @param serverConn the server connection
+   *
+   * @param server       the Velocity server instance
+   * @param serverConn   the server connection
    * @param resultFuture the result future
    */
   TransitionSessionHandler(VelocityServer server,
@@ -197,7 +198,6 @@ public class TransitionSessionHandler implements MinecraftSessionHandler {
 
   @Override
   public void disconnected() {
-    resultFuture
-        .completeExceptionally(new IOException("Unexpectedly disconnected from remote server"));
+    resultFuture.completeExceptionally(new IOException("Unexpectedly disconnected from remote server"));
   }
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/VelocityServerConnection.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/VelocityServerConnection.java
index 62be4a34..660dac6a 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/VelocityServerConnection.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/backend/VelocityServerConnection.java
@@ -68,12 +68,14 @@ public class VelocityServerConnection implements MinecraftConnectionAssociation,
 
   /**
    * Initializes a new server connection.
+   *
    * @param registeredServer the server to connect to
-   * @param proxyPlayer the player connecting to the server
-   * @param server the Velocity proxy instance
+   * @param proxyPlayer      the player connecting to the server
+   * @param server           the Velocity proxy instance
    */
   public VelocityServerConnection(VelocityRegisteredServer registeredServer,
-      ConnectedPlayer proxyPlayer, VelocityServer server) {
+      ConnectedPlayer proxyPlayer,
+      VelocityServer server) {
     this.registeredServer = registeredServer;
     this.proxyPlayer = proxyPlayer;
     this.server = server;
@@ -81,8 +83,9 @@ public class VelocityServerConnection implements MinecraftConnectionAssociation,
 
   /**
    * Connects to the server.
+   *
    * @return a {@link com.velocitypowered.api.proxy.ConnectionRequestBuilder.Result} representing
-   *         whether or not the connect succeeded
+   * whether or not the connect succeeded
    */
   public CompletableFuture<Impl> connect() {
     CompletableFuture<Impl> result = new CompletableFuture<>();
@@ -180,6 +183,7 @@ public class VelocityServerConnection implements MinecraftConnectionAssociation,
 
   /**
    * Ensures the connection is still active and throws an exception if it is not.
+   *
    * @return the active connection
    * @throws IllegalStateException if the connection is inactive
    */
@@ -229,8 +233,9 @@ public class VelocityServerConnection implements MinecraftConnectionAssociation,
 
   /**
    * Sends a plugin message to the server through this connection.
+   *
    * @param identifier the channel ID to use
-   * @param data the data
+   * @param data       the data
    * @return whether or not the message was sent
    */
   public boolean sendPluginMessage(ChannelIdentifier identifier, ByteBuf data) {
@@ -275,8 +280,7 @@ public class VelocityServerConnection implements MinecraftConnectionAssociation,
    * @return whether or not the player is online
    */
   public boolean isActive() {
-    return connection != null && !connection.isClosed() && !gracefulDisconnect
-        && proxyPlayer.isActive();
+    return connection != null && !connection.isClosed() && !gracefulDisconnect && proxyPlayer.isActive();
   }
 
   /**
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ClientConnectionPhase.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ClientConnectionPhase.java
index b0ee83b3..9abcc3b8 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ClientConnectionPhase.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ClientConnectionPhase.java
@@ -33,14 +33,12 @@ public interface ClientConnectionPhase {
    * Handle a plugin message in the context of
    * this phase.
    *
-   * @param player The player
+   * @param player  The player
    * @param message The message to handle
-   * @param server The backend connection to use
+   * @param server  The backend connection to use
    * @return true if handled, false otherwise.
    */
-  default boolean handle(ConnectedPlayer player,
-      PluginMessage message,
-      VelocityServerConnection server) {
+  default boolean handle(ConnectedPlayer player, PluginMessage message, VelocityServerConnection server) {
     return false;
   }
 
@@ -64,6 +62,7 @@ public interface ClientConnectionPhase {
 
   /**
    * Indicates whether the connection is considered complete.
+   *
    * @return true if so
    */
   default boolean consideredComplete() {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ClientConnectionPhases.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ClientConnectionPhases.java
index 934dae0a..7c414790 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ClientConnectionPhases.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ClientConnectionPhases.java
@@ -28,7 +28,8 @@ public final class ClientConnectionPhases {
   /**
    * The client is connecting with a vanilla client (as far as we can tell).
    */
-  public static final ClientConnectionPhase VANILLA = new ClientConnectionPhase() {};
+  public static final ClientConnectionPhase VANILLA = new ClientConnectionPhase() {
+  };
 
   private ClientConnectionPhases() {
     throw new AssertionError();
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ClientPlaySessionHandler.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ClientPlaySessionHandler.java
index 6104354f..a4a888ea 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ClientPlaySessionHandler.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ClientPlaySessionHandler.java
@@ -68,7 +68,6 @@ import java.util.UUID;
 import java.util.concurrent.CompletableFuture;
 import net.elytrium.elytraproxy.commands.ElytraProxyCommand;
 import net.elytrium.elytraproxy.config.Settings;
-import net.kyori.adventure.identity.Identity;
 import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -84,11 +83,12 @@ public class ClientPlaySessionHandler implements MinecraftSessionHandler {
 
   private final ConnectedPlayer player;
   private boolean spawned = false;
-  // ElytraProxy
+  // ElytraProxy Start
   private boolean checkedBySettings = false;
   private boolean checkedByBrand = false;
   private boolean willBeKickedChat = false;
   private boolean willBeKickedUnk = false;
+  // ElytraProxy End
   private final List<UUID> serverBossBars = new ArrayList<>();
   private final Queue<PluginMessage> loginPluginMessages = new ArrayDeque<>();
   private final VelocityServer server;
@@ -96,6 +96,7 @@ public class ClientPlaySessionHandler implements MinecraftSessionHandler {
 
   /**
    * Constructs a client play session handler.
+   *
    * @param server the Velocity server instance
    * @param player the player
    */
@@ -198,8 +199,7 @@ public class ClientPlaySessionHandler implements MinecraftSessionHandler {
           player.disconnect(
               LegacyComponentSerializer
                   .legacyAmpersand()
-                  .deserialize(Settings.IMP.MESSAGES.ELYTRAPROXY.KICK
-                          .CLIENT_CHECK_SETTINGS_CHAT_COLOR
+                  .deserialize(Settings.IMP.MESSAGES.ELYTRAPROXY.KICK.CLIENT_CHECK_SETTINGS_CHAT_COLOR
                       .replace("{NL}", "\n")
                       .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
                   ));
@@ -212,8 +212,7 @@ public class ClientPlaySessionHandler implements MinecraftSessionHandler {
           player.disconnect(
               LegacyComponentSerializer
                   .legacyAmpersand()
-                  .deserialize(Settings.IMP.MESSAGES.ELYTRAPROXY.KICK
-                          .CLIENT_CHECK_SETTINGS_SKIN_PARTS
+                  .deserialize(Settings.IMP.MESSAGES.ELYTRAPROXY.KICK.CLIENT_CHECK_SETTINGS_SKIN_PARTS
                       .replace("{NL}", "\n")
                       .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
                   ));
@@ -280,9 +279,8 @@ public class ClientPlaySessionHandler implements MinecraftSessionHandler {
             }
           })
           .exceptionally(e -> {
-            logger.info("Exception occurred while running command for {}",
-                player.getUsername(), e);
-            player.sendMessage(Identity.nil(),
+            logger.info("Exception occurred while running command for {}", player.getUsername(), e);
+            player.sendMessage(
                 LegacyComponentSerializer
                     .legacyAmpersand()
                     .deserialize(Settings.IMP.MESSAGES.VELOCITY.COMMAND.GENERIC_ERROR
@@ -459,7 +457,6 @@ public class ClientPlaySessionHandler implements MinecraftSessionHandler {
 
   @Override
   public void exception(Throwable throwable) {
-    // ElytraProxy
     player.disconnect(
         LegacyComponentSerializer
             .legacyAmpersand()
@@ -490,7 +487,8 @@ public class ClientPlaySessionHandler implements MinecraftSessionHandler {
   /**
    * Handles the {@code JoinGame} packet. This function is responsible for handling the client-side
    * switching servers in Velocity.
-   * @param joinGame the join game packet
+   *
+   * @param joinGame    the join game packet
    * @param destination the new server we are connecting to
    */
   public void handleBackendJoinGame(JoinGame joinGame, VelocityServerConnection destination) {
@@ -540,8 +538,8 @@ public class ClientPlaySessionHandler implements MinecraftSessionHandler {
     // Clear any title from the previous server.
     if (player.getProtocolVersion().compareTo(MINECRAFT_1_8) >= 0) {
       player.getConnection()
-              .delayedWrite(GenericTitlePacket.constructTitlePacket(
-                      GenericTitlePacket.ActionType.RESET, player.getProtocolVersion()));
+          .delayedWrite(GenericTitlePacket.constructTitlePacket(
+              GenericTitlePacket.ActionType.RESET, player.getProtocolVersion()));
     }
 
     // Flush everything
@@ -727,8 +725,7 @@ public class ClientPlaySessionHandler implements MinecraftSessionHandler {
         });
   }
 
-  private CompletableFuture<Void> processCommandExecuteResult(String originalCommand,
-      CommandResult result) {
+  private CompletableFuture<Void> processCommandExecuteResult(String originalCommand, CommandResult result) {
     if (result == CommandResult.denied()) {
       return CompletableFuture.completedFuture(null);
     }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ConnectedPlayer.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ConnectedPlayer.java
index 2a9a92cb..23febece 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ConnectedPlayer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/ConnectedPlayer.java
@@ -67,7 +67,6 @@ import com.velocitypowered.proxy.protocol.packet.title.GenericTitlePacket;
 import com.velocitypowered.proxy.server.VelocityRegisteredServer;
 import com.velocitypowered.proxy.tablist.VelocityTabList;
 import com.velocitypowered.proxy.tablist.VelocityTabListLegacy;
-import com.velocitypowered.proxy.util.ClosestLocaleMatcher;
 import com.velocitypowered.proxy.util.DurationUtils;
 import com.velocitypowered.proxy.util.collect.CappedSet;
 import io.netty.buffer.ByteBufUtil;
@@ -78,7 +77,6 @@ import java.util.Collection;
 import java.util.Collections;
 import java.util.List;
 import java.util.Locale;
-import java.util.Objects;
 import java.util.Optional;
 import java.util.Queue;
 import java.util.UUID;
@@ -94,10 +92,6 @@ import net.kyori.adventure.pointer.Pointers;
 import net.kyori.adventure.text.Component;
 import net.kyori.adventure.text.serializer.gson.GsonComponentSerializer;
 import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
-import net.kyori.adventure.text.serializer.plain.PlainComponentSerializer;
-import net.kyori.adventure.title.Title;
-import net.kyori.adventure.title.Title.Times;
-import net.kyori.adventure.translation.GlobalTranslator;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.checkerframework.checker.nullness.qual.MonotonicNonNull;
@@ -140,10 +134,10 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
   private @Nullable ResourcePackInfo pendingResourcePack;
   private @Nullable ResourcePackInfo appliedResourcePack;
   private final @NotNull Pointers pointers = Player.super.pointers().toBuilder()
-          .withDynamic(Identity.UUID, this::getUniqueId)
-          .withDynamic(Identity.NAME, this::getUsername)
-          .withStatic(PermissionChecker.POINTER, getPermissionChecker())
-          .build();
+      .withDynamic(Identity.UUID, this::getUniqueId)
+      .withDynamic(Identity.NAME, this::getUsername)
+      .withStatic(PermissionChecker.POINTER, getPermissionChecker())
+      .build();
   private @Nullable String clientBrand;
 
   ConnectedPlayer(VelocityServer server, GameProfile profile, MinecraftConnection connection,
@@ -186,6 +180,7 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
 
   /**
    * Makes sure the player is connected to a server and returns the server they are connected to.
+   *
    * @return the server the player is connected to
    */
   public VelocityServerConnection ensureAndGetCurrentServer() {
@@ -264,54 +259,54 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
     return connection.getProtocolVersion();
   }
 
-  /**
-   * Translates the message in the user's locale.
-   *
-   * @param message the message to translate
-   * @return the translated message
-   */
-  public Component translateMessage(Component message) {
-    Locale locale = ClosestLocaleMatcher.INSTANCE
-        .lookupClosest(this.settings == null ? Locale.getDefault() : this.settings.getLocale());
-    return GlobalTranslator.render(message, locale);
-  }
+  //ElytraProxy Start: Removed as unnecessary
+  ///**
+  // * Translates the message in the user's locale.
+  // *
+  // * @param message the message to translate
+  // * @return the translated message
+  // */
+  //public Component translateMessage(Component message) {
+  //  Locale locale = ClosestLocaleMatcher.INSTANCE
+  //      .lookupClosest(this.settings == null ? Locale.getDefault() : this.settings.getLocale());
+  //  return GlobalTranslator.render(message, locale);
+  //}
 
   @Override
   public void sendMessage(@NonNull Identity identity, @NonNull Component message) {
-    Component translated = translateMessage(message);
-    connection.write(Chat.createClientbound(identity, translated, this.getProtocolVersion()));
+    //Component translated = translateMessage(message);
+    connection.write(Chat.createClientbound(identity, message/*translated*/, this.getProtocolVersion()));
   }
 
   @Override
-  public void sendMessage(@NonNull Identity identity, @NonNull Component message,
-      @NonNull MessageType type) {
+  public void sendMessage(@NonNull Identity identity, @NonNull Component message, @NonNull MessageType type) {
     Preconditions.checkNotNull(message, "message");
     Preconditions.checkNotNull(type, "type");
 
-    Component translated = translateMessage(message);
-    Chat packet = Chat.createClientbound(identity, translated, this.getProtocolVersion());
+    //Component translated = translateMessage(message);
+    Chat packet = Chat.createClientbound(identity, message/*translated*/, this.getProtocolVersion());
     packet.setType(type == MessageType.CHAT ? Chat.CHAT_TYPE : Chat.SYSTEM_TYPE);
     connection.write(packet);
   }
 
   @Override
   public void sendActionBar(net.kyori.adventure.text.@NonNull Component message) {
-    Component translated = translateMessage(message);
+    //Component translated = translateMessage(message);
 
     ProtocolVersion playerVersion = getProtocolVersion();
     if (playerVersion.compareTo(ProtocolVersion.MINECRAFT_1_11) >= 0) {
       // Use the title packet instead.
       GenericTitlePacket pkt = GenericTitlePacket.constructTitlePacket(
-              GenericTitlePacket.ActionType.SET_ACTION_BAR, playerVersion);
+          GenericTitlePacket.ActionType.SET_ACTION_BAR, playerVersion);
       pkt.setComponent(ProtocolUtils.getJsonChatSerializer(playerVersion)
-          .serialize(translated));
+          .serialize(message/*translated*/));
       connection.write(pkt);
     } else {
       // Due to issues with action bar packets, we'll need to convert the text message into a
       // legacy message and then inject the legacy text into a component... yuck!
       JsonObject object = new JsonObject();
       object.addProperty("text", LegacyComponentSerializer.legacySection()
-          .serialize(translated));
+          .serialize(message/*translated*/));
       Chat chat = new Chat();
       chat.setMessage(object.toString());
       chat.setType(Chat.GAME_INFO_TYPE);
@@ -341,10 +336,12 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
 
   @Override
   public void sendPlayerListHeaderAndFooter(final Component header, final Component footer) {
+    /*
     Component translatedHeader = translateMessage(header);
     Component translatedFooter = translateMessage(footer);
-    this.playerListHeader = translatedHeader;
-    this.playerListFooter = translatedFooter;
+    */
+    this.playerListHeader = header/*translatedHeader*/;
+    this.playerListFooter = footer/*translatedFooter*/;
     if (this.getProtocolVersion().compareTo(ProtocolVersion.MINECRAFT_1_8) >= 0) {
       this.connection.write(HeaderAndFooter.create(header, footer, this.getProtocolVersion()));
     }
@@ -357,17 +354,17 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
           .getProtocolVersion());
 
       GenericTitlePacket titlePkt = GenericTitlePacket.constructTitlePacket(
-                      GenericTitlePacket.ActionType.SET_TITLE, this.getProtocolVersion());
-      titlePkt.setComponent(serializer.serialize(translateMessage(title.title())));
+          GenericTitlePacket.ActionType.SET_TITLE, this.getProtocolVersion());
+      titlePkt.setComponent(serializer.serialize(title.title()/*translateMessage(title.title())*/));
       connection.delayedWrite(titlePkt);
 
       GenericTitlePacket subtitlePkt = GenericTitlePacket.constructTitlePacket(
-              GenericTitlePacket.ActionType.SET_SUBTITLE, this.getProtocolVersion());
-      subtitlePkt.setComponent(serializer.serialize(translateMessage(title.subtitle())));
+          GenericTitlePacket.ActionType.SET_SUBTITLE, this.getProtocolVersion());
+      subtitlePkt.setComponent(serializer.serialize(title.title()/*translateMessage(title.subtitle())*/));
       connection.delayedWrite(subtitlePkt);
 
       GenericTitlePacket timesPkt = GenericTitlePacket.constructTitlePacket(
-              GenericTitlePacket.ActionType.SET_TIMES, this.getProtocolVersion());
+          GenericTitlePacket.ActionType.SET_TIMES, this.getProtocolVersion());
       net.kyori.adventure.title.Title.Times times = title.times();
       if (times != null) {
         timesPkt.setFadeIn((int) DurationUtils.toTicks(times.fadeIn()));
@@ -384,7 +381,7 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
   public void clearTitle() {
     if (this.getProtocolVersion().compareTo(ProtocolVersion.MINECRAFT_1_8) >= 0) {
       connection.write(GenericTitlePacket.constructTitlePacket(
-              GenericTitlePacket.ActionType.HIDE, this.getProtocolVersion()));
+          GenericTitlePacket.ActionType.HIDE, this.getProtocolVersion()));
     }
   }
 
@@ -392,7 +389,7 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
   public void resetTitle() {
     if (this.getProtocolVersion().compareTo(ProtocolVersion.MINECRAFT_1_8) >= 0) {
       connection.write(GenericTitlePacket.constructTitlePacket(
-                      GenericTitlePacket.ActionType.RESET, this.getProtocolVersion()));
+          GenericTitlePacket.ActionType.RESET, this.getProtocolVersion()));
     }
   }
 
@@ -446,16 +443,18 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
 
   /**
    * Disconnects the player from the proxy.
-   * @param reason the reason for disconnecting the player
+   *
+   * @param reason      the reason for disconnecting the player
    * @param duringLogin whether the disconnect happened during login
    */
   public void disconnect0(Component reason, boolean duringLogin) {
-    Component translated = this.translateMessage(reason);
+    //Component translated = this.translateMessage(reason);
 
     logger.info("{} has disconnected: {}", this,
-        LegacyComponentSerializer.legacySection().serialize(translated));
-    connection.closeWith(Disconnect.create(translated, this.getProtocolVersion()));
+        LegacyComponentSerializer.legacySection().serialize(reason/*translated*/));
+    connection.closeWith(Disconnect.create(reason/*translated*/, this.getProtocolVersion()));
   }
+  // ElytraProxy End
 
   public @Nullable VelocityServerConnection getConnectedServer() {
     return connectedServer;
@@ -471,12 +470,12 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
 
   /**
    * Handles unexpected disconnects.
-   * @param server the server we disconnected from
+   *
+   * @param server    the server we disconnected from
    * @param throwable the exception
-   * @param safe whether or not we can safely reconnect to a new server
+   * @param safe      whether or not we can safely reconnect to a new server
    */
-  public void handleConnectionException(RegisteredServer server, Throwable throwable,
-      boolean safe) {
+  public void handleConnectionException(RegisteredServer server, Throwable throwable, boolean safe) {
     if (!isActive()) {
       // If the connection is no longer active, it makes no sense to try and recover it.
       return;
@@ -519,12 +518,12 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
 
   /**
    * Handles unexpected disconnects.
-   * @param server the server we disconnected from
+   *
+   * @param server     the server we disconnected from
    * @param disconnect the disconnect packet
-   * @param safe whether or not we can safely reconnect to a new server
+   * @param safe       whether or not we can safely reconnect to a new server
    */
-  public void handleConnectionException(RegisteredServer server, Disconnect disconnect,
-      boolean safe) {
+  public void handleConnectionException(RegisteredServer server, Disconnect disconnect, boolean safe) {
     if (!isActive()) {
       // If the connection is no longer active, it makes no sense to try and recover it.
       return;
@@ -536,7 +535,6 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
           LegacyComponentSerializer
               .legacySection()
               .serialize(disconnectReason));
-      // TODO: rewrite this shit
       handleConnectionException(server, disconnectReason,
           LegacyComponentSerializer
               .legacyAmpersand()
@@ -544,16 +542,14 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
                   .replace("{NL}", "\n")
                   .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
                   .replace("{0}", server.getServerInfo().getName())
-                  .replace("{1}", LegacyComponentSerializer
-                      .legacySection()
-                      .serialize(disconnectReason))
+                  .replace("{1}", LegacyComponentSerializer.legacySection().serialize(disconnectReason))
               ), safe);
     } else {
       logger.error("{}: disconnected while connecting to {}: {}", this,
           server.getServerInfo().getName(),
-              LegacyComponentSerializer
-                  .legacySection()
-                  .serialize(disconnectReason));
+          LegacyComponentSerializer
+              .legacySection()
+              .serialize(disconnectReason));
       handleConnectionException(server, disconnectReason,
           LegacyComponentSerializer
               .legacyAmpersand()
@@ -561,15 +557,13 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
                   .replace("{NL}", "\n")
                   .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
                   .replace("{0}", server.getServerInfo().getName())
-                  .replace("{1}", LegacyComponentSerializer
-                      .legacySection()
-                      .serialize(disconnectReason))
+                  .replace("{1}", LegacyComponentSerializer.legacySection().serialize(disconnectReason))
               ), safe);
     }
   }
 
-  private void handleConnectionException(RegisteredServer rs,
-      @Nullable Component kickReason, Component friendlyReason, boolean safe) {
+  private void handleConnectionException(RegisteredServer rs, @Nullable Component kickReason,
+      Component friendlyReason, boolean safe) {
     if (!isActive()) {
       // If the connection is no longer active, it makes no sense to try and recover it.
       return;
@@ -601,8 +595,8 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
     handleKickEvent(originalEvent, friendlyReason, kickedFromCurrent);
   }
 
-  private void handleKickEvent(KickedFromServerEvent originalEvent, Component friendlyReason,
-      boolean kickedFromCurrent) {
+  private void handleKickEvent(KickedFromServerEvent originalEvent,
+      Component friendlyReason, boolean kickedFromCurrent) {
     server.getEventManager().fire(originalEvent)
         .thenAcceptAsync(event -> {
           // There can't be any connection in flight now.
@@ -637,7 +631,7 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
                     // Impossible/nonsensical cases
                     case ALREADY_CONNECTED:
                     case CONNECTION_IN_PROGRESS:
-                    // Fatal case
+                      // Fatal case
                     case CONNECTION_CANCELLED:
                       disconnect(status.getReasonComponent().orElse(res.getMessageComponent()));
                       break;
@@ -648,18 +642,14 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
                           getProtocolVersion()), ((Impl) status).isSafe());
                       break;
                     case SUCCESS:
-                      // ElytraProxy
-                      sendMessage(Identity.nil(),
+                      sendMessage(
                           LegacyComponentSerializer
                               .legacyAmpersand()
                               .deserialize(Settings.IMP.MESSAGES.VELOCITY.ERROR.MOVED_TO_NEW_SERVER
                                   .replace("{NL}", "\n")
                                   .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
-                                  .replace("{0}", originalEvent
-                                      .getServer().getServerInfo().getName())
-                                  .replace("{1}", LegacyComponentSerializer
-                                      .legacySection()
-                                      .serialize(friendlyReason))
+                                  .replace("{0}", originalEvent.getServer().getServerInfo().getName())
+                                  .replace("{1}", LegacyComponentSerializer.legacySection().serialize(friendlyReason))
                               ));
                       break;
                     default:
@@ -696,7 +686,6 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
    * server.
    *
    * @param current the "current" server that the player is on, useful as an override
-   *
    * @return the next server to try
    */
   private Optional<RegisteredServer> getNextServerToTry(@Nullable RegisteredServer current) {
@@ -877,8 +866,7 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
         // Unless its 1.17+ and forced it will come back denied anyway
         while (!outstandingResourcePacks.isEmpty()) {
           queued = outstandingResourcePacks.peek();
-          if (queued.getShouldForce() && getProtocolVersion()
-                  .compareTo(ProtocolVersion.MINECRAFT_1_17) >= 0) {
+          if (queued.getShouldForce() && getProtocolVersion().compareTo(ProtocolVersion.MINECRAFT_1_17) >= 0) {
             break;
           }
           onResourcePackResponse(PlayerResourcePackStatusEvent.Status.DECLINED);
@@ -919,20 +907,18 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
    */
   public boolean onResourcePackResponse(PlayerResourcePackStatusEvent.Status status) {
     final boolean peek = status == PlayerResourcePackStatusEvent.Status.ACCEPTED;
-    final ResourcePackInfo queued = peek
-            ? outstandingResourcePacks.peek() : outstandingResourcePacks.poll();
+    final ResourcePackInfo queued = peek ? outstandingResourcePacks.peek() : outstandingResourcePacks.poll();
 
     server.getEventManager().fire(new PlayerResourcePackStatusEvent(this, status, queued))
-            .thenAcceptAsync(event -> {
-              if (event.getStatus() == PlayerResourcePackStatusEvent.Status.DECLINED
-                      && event.getPackInfo() != null && event.getPackInfo().getShouldForce()
-                      && (!event.isOverwriteKick() || event.getPlayer()
-                              .getProtocolVersion().compareTo(ProtocolVersion.MINECRAFT_1_17) >= 0)
-              ) {
-                event.getPlayer().disconnect(Component
-                        .translatable("multiplayer.requiredTexturePrompt.disconnect"));
-              }
-            });
+        .thenAcceptAsync(event -> {
+          if (event.getStatus() == PlayerResourcePackStatusEvent.Status.DECLINED
+              && event.getPackInfo() != null && event.getPackInfo().getShouldForce()
+              && (!event.isOverwriteKick() || event.getPlayer()
+              .getProtocolVersion().compareTo(ProtocolVersion.MINECRAFT_1_17) >= 0)
+          ) {
+            event.getPlayer().disconnect(Component.translatable("multiplayer.requiredTexturePrompt.disconnect"));
+          }
+        });
 
     switch (status) {
       case ACCEPTED:
@@ -995,6 +981,7 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
 
   /**
    * Return all the plugin message channels "known" to the client.
+   *
    * @return the channels
    */
   public Collection<String> getKnownChannels() {
@@ -1028,8 +1015,7 @@ public class ConnectedPlayer implements MinecraftConnectionAssociation, Player {
           && !connectedServer.hasCompletedJoin())) {
         return Optional.of(ConnectionRequestBuilder.Status.CONNECTION_IN_PROGRESS);
       }
-      if (connectedServer != null
-              && connectedServer.getServer().getServerInfo().equals(server.getServerInfo())) {
+      if (connectedServer != null && connectedServer.getServer().getServerInfo().equals(server.getServerInfo())) {
         return Optional.of(ALREADY_CONNECTED);
       }
       return Optional.empty();
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/HandshakeSessionHandler.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/HandshakeSessionHandler.java
index 0f398877..17b5d080 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/HandshakeSessionHandler.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/HandshakeSessionHandler.java
@@ -69,15 +69,13 @@ public class HandshakeSessionHandler implements MinecraftSessionHandler {
 
   @Override
   public boolean handle(LegacyHandshake packet) {
-    // ElytraProxy
-    connection.closeWith(LegacyDisconnect
-        .from(
-            LegacyComponentSerializer
-                .legacyAmpersand()
-                .deserialize(Settings.IMP.MESSAGES.VELOCITY.ERROR.EXTREMELY_OLD_CLIENT
-                    .replace("{NL}", "\n")
-                    .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
-                )));
+    connection.closeWith(LegacyDisconnect.from(
+        LegacyComponentSerializer
+            .legacyAmpersand()
+            .deserialize(Settings.IMP.MESSAGES.VELOCITY.ERROR.EXTREMELY_OLD_CLIENT
+                .replace("{NL}", "\n")
+                .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
+            )));
     return true;
   }
 
@@ -128,7 +126,7 @@ public class HandshakeSessionHandler implements MinecraftSessionHandler {
       return;
     }
 
-    // BotFilter backport start: global rate limiter
+    // BotFilter backport Start: global rate limiter
     /*
     InetAddress address = ((InetSocketAddress) connection.getRemoteAddress()).getAddress();
     if (!server.getIpAttemptLimiter().attempt(address)) {
@@ -142,7 +140,7 @@ public class HandshakeSessionHandler implements MinecraftSessionHandler {
       return;
     }
     */
-    // BotFilter backport end - global rate limiter
+    // BotFilter backport End
 
     connection.setType(getHandshakeConnectionType(handshake));
 
@@ -150,7 +148,6 @@ public class HandshakeSessionHandler implements MinecraftSessionHandler {
     // and lower, otherwise IP information will never get forwarded.
     if (server.getConfiguration().getPlayerInfoForwardingMode() == PlayerInfoForwarding.MODERN
         && handshake.getProtocolVersion().compareTo(ProtocolVersion.MINECRAFT_1_13) < 0) {
-      // ElytraProxy
       ic.disconnectQuietly(
           LegacyComponentSerializer
               .legacyAmpersand()
@@ -222,8 +219,7 @@ public class HandshakeSessionHandler implements MinecraftSessionHandler {
     private final MinecraftConnection connection;
     private final LegacyPing ping;
 
-    private LegacyInboundConnection(MinecraftConnection connection,
-        LegacyPing ping) {
+    private LegacyInboundConnection(MinecraftConnection connection, LegacyPing ping) {
       this.connection = connection;
       this.ping = ping;
     }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/InitialInboundConnection.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/InitialInboundConnection.java
index c094cc90..dc5f2769 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/InitialInboundConnection.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/InitialInboundConnection.java
@@ -23,13 +23,10 @@ import com.velocitypowered.proxy.connection.MinecraftConnection;
 import com.velocitypowered.proxy.connection.MinecraftConnectionAssociation;
 import com.velocitypowered.proxy.protocol.packet.Disconnect;
 import com.velocitypowered.proxy.protocol.packet.Handshake;
-import com.velocitypowered.proxy.util.ClosestLocaleMatcher;
 import java.net.InetSocketAddress;
-import java.util.Locale;
 import java.util.Optional;
 import net.kyori.adventure.text.Component;
 import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
-import net.kyori.adventure.translation.GlobalTranslator;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -42,8 +39,7 @@ public final class InitialInboundConnection implements InboundConnection,
   private final String cleanedAddress;
   private final Handshake handshake;
 
-  InitialInboundConnection(MinecraftConnection connection, String cleanedAddress,
-      Handshake handshake) {
+  InitialInboundConnection(MinecraftConnection connection, String cleanedAddress, Handshake handshake) {
     this.connection = connection;
     this.cleanedAddress = cleanedAddress;
     this.handshake = handshake;
@@ -76,24 +72,32 @@ public final class InitialInboundConnection implements InboundConnection,
 
   /**
    * Disconnects the connection from the server.
+   *
    * @param reason the reason for disconnecting
    */
   public void disconnect(Component reason) {
+    // ElytraProxy Start: Removed as unnecessary
+    /*
     Component translated = GlobalTranslator.render(reason, ClosestLocaleMatcher.INSTANCE
         .lookupClosest(Locale.getDefault()));
+    */
 
     logger.info("{} has disconnected: {}", this,
-        LegacyComponentSerializer.legacySection().serialize(translated));
-    connection.closeWith(Disconnect.create(translated, getProtocolVersion()));
+        LegacyComponentSerializer.legacySection().serialize(reason/*translated*/));
+    connection.closeWith(Disconnect.create(reason/*translated*/, getProtocolVersion()));
   }
 
   /**
    * Disconnects the connection from the server silently.
+   *
    * @param reason the reason for disconnecting
    */
   public void disconnectQuietly(Component reason) {
+    /*
     Component translated = GlobalTranslator.render(reason, ClosestLocaleMatcher.INSTANCE
         .lookupClosest(Locale.getDefault()));
-    connection.closeWith(Disconnect.create(translated, getProtocolVersion()));
+    */
+    connection.closeWith(Disconnect.create(reason/*translated*/, getProtocolVersion()));
   }
+  // ElytraProxy End
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/LoginSessionHandler.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/LoginSessionHandler.java
index 942c9911..cfc29ba5 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/LoginSessionHandler.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/LoginSessionHandler.java
@@ -44,7 +44,6 @@ import com.velocitypowered.proxy.config.VelocityConfiguration;
 import com.velocitypowered.proxy.connection.MinecraftConnection;
 import com.velocitypowered.proxy.connection.MinecraftSessionHandler;
 import com.velocitypowered.proxy.protocol.StateRegistry;
-import com.velocitypowered.proxy.protocol.packet.Disconnect;
 import com.velocitypowered.proxy.protocol.packet.EncryptionRequest;
 import com.velocitypowered.proxy.protocol.packet.EncryptionResponse;
 import com.velocitypowered.proxy.protocol.packet.ServerLogin;
@@ -63,8 +62,6 @@ import java.util.concurrent.ExecutionException;
 import java.util.concurrent.ThreadLocalRandom;
 import net.elytrium.elytraproxy.config.Settings;
 import net.kyori.adventure.text.Component;
-import net.kyori.adventure.text.format.NamedTextColor;
-import net.kyori.adventure.translation.GlobalTranslator;
 import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -85,8 +82,7 @@ public class LoginSessionHandler implements MinecraftSessionHandler {
   private byte[] verify = EMPTY_BYTE_ARRAY;
   private @MonotonicNonNull ConnectedPlayer connectedPlayer;
 
-  LoginSessionHandler(VelocityServer server, MinecraftConnection mcConnection,
-      InitialInboundConnection inbound) {
+  LoginSessionHandler(VelocityServer server, MinecraftConnection mcConnection, InitialInboundConnection inbound) {
     this.server = Preconditions.checkNotNull(server, "server");
     this.mcConnection = Preconditions.checkNotNull(mcConnection, "mcConnection");
     this.inbound = Preconditions.checkNotNull(inbound, "inbound");
@@ -152,7 +148,6 @@ public class LoginSessionHandler implements MinecraftSessionHandler {
                 GameProfile.class), true);
           } else if (profileResponse.getStatusCode() == 204) {
             // Apparently an offline-mode user logged onto this online-mode proxy.
-            // ElytraProxy
             inbound.disconnect(
                 LegacyComponentSerializer
                     .legacyAmpersand()
@@ -250,7 +245,7 @@ public class LoginSessionHandler implements MinecraftSessionHandler {
       ConnectedPlayer player = new ConnectedPlayer(server, profileEvent.getGameProfile(),
           mcConnection, inbound.getVirtualHost().orElse(null), onlineMode);
       this.connectedPlayer = player;
-      // ElytraProxy Start: BotFilter and other
+      // ElytraProxy Start
       if (!server.canRegisterConnection(player)) {
         player.disconnect0(
             LegacyComponentSerializer
@@ -274,8 +269,7 @@ public class LoginSessionHandler implements MinecraftSessionHandler {
       logger.info("{} has connected", player);
       server.getElytraProxy().getStatistics().addConnectionPerSecond();
       if (Settings.IMP.MAIN_SETTINGS.MAINTENANCE.ENABLED
-          && !Settings.IMP.MAIN_SETTINGS.MAINTENANCE
-              .IGNORED_PLAYERS.contains(player.getUsername())) {
+          && !Settings.IMP.MAIN_SETTINGS.MAINTENANCE.IGNORED_PLAYERS.contains(player.getUsername())) {
         player.disconnect0(
             LegacyComponentSerializer
                 .legacyAmpersand()
@@ -285,8 +279,7 @@ public class LoginSessionHandler implements MinecraftSessionHandler {
                 ), true);
         return;
       }
-      if (Settings.IMP.MAIN_SETTINGS.BANNED_PROTOCOLS
-          .contains(mcConnection.getProtocolVersion().getProtocol())) {
+      if (Settings.IMP.MAIN_SETTINGS.BANNED_PROTOCOLS.contains(mcConnection.getProtocolVersion().getProtocol())) {
         player.disconnect0(
             LegacyComponentSerializer
                 .legacyAmpersand()
@@ -382,38 +375,38 @@ public class LoginSessionHandler implements MinecraftSessionHandler {
             player.setPermissionFunction(function);
           }
           return server.getEventManager().fire(new LoginEvent(player))
-        .thenAcceptAsync(event -> {
-          if (mcConnection.isClosed()) {
-            // The player was disconnected
-            server.getEventManager().fireAndForget(new DisconnectEvent(player,
-                LoginStatus.CANCELLED_BY_USER_BEFORE_COMPLETE));
-            return;
-          }
-
-          Optional<Component> reason = event.getResult().getReasonComponent();
-          if (reason.isPresent()) {
-            player.disconnect0(reason.get(), true);
-          } else {
-            if (!server.registerConnection(player)) {
-              player.disconnect0(
-                  LegacyComponentSerializer
-                      .legacyAmpersand()
-                      .deserialize(Settings.IMP.MESSAGES.VELOCITY.ERROR.ALREADY_CONNECTED_PROXY
-                          .replace("{NL}", "\n")
-                          .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
-                      ), true);
-              return;
-            }
-
-            mcConnection.setSessionHandler(new InitialConnectSessionHandler(player));
-            server.getEventManager().fire(new PostLoginEvent(player))
-                .thenCompose((ignored) -> connectToInitialServer(player))
-                .exceptionally((ex) -> {
-                  logger.error("Exception while connecting {} to initial server", player, ex);
-                  return null;
-                });
-          }
-        }, mcConnection.eventLoop());
+              .thenAcceptAsync(event -> {
+                if (mcConnection.isClosed()) {
+                  // The player was disconnected
+                  server.getEventManager().fireAndForget(new DisconnectEvent(player,
+                      LoginStatus.CANCELLED_BY_USER_BEFORE_COMPLETE));
+                  return;
+                }
+
+                Optional<Component> reason = event.getResult().getReasonComponent();
+                if (reason.isPresent()) {
+                  player.disconnect0(reason.get(), true);
+                } else {
+                  if (!server.registerConnection(player)) {
+                    player.disconnect0(
+                        LegacyComponentSerializer
+                            .legacyAmpersand()
+                            .deserialize(Settings.IMP.MESSAGES.VELOCITY.ERROR.ALREADY_CONNECTED_PROXY
+                                .replace("{NL}", "\n")
+                                .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
+                            ), true);
+                    return;
+                  }
+
+                  mcConnection.setSessionHandler(new InitialConnectSessionHandler(player));
+                  server.getEventManager().fire(new PostLoginEvent(player))
+                      .thenCompose((ignored) -> connectToInitialServer(player))
+                      .exceptionally((ex) -> {
+                        logger.error("Exception while connecting {} to initial server", player, ex);
+                        return null;
+                      });
+                }
+              }, mcConnection.eventLoop());
         }, mcConnection.eventLoop())
         .exceptionally((ex) -> {
           logger.error("Exception while completing login initialisation phase for {}", player, ex);
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/StatusSessionHandler.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/StatusSessionHandler.java
index e5ea219d..e63d100c 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/client/StatusSessionHandler.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/client/StatusSessionHandler.java
@@ -59,8 +59,7 @@ public class StatusSessionHandler implements MinecraftSessionHandler {
   private final InboundConnection inbound;
   private boolean pingReceived = false;
 
-  StatusSessionHandler(VelocityServer server, MinecraftConnection connection,
-      InboundConnection inbound) {
+  StatusSessionHandler(VelocityServer server, MinecraftConnection connection, InboundConnection inbound) {
     this.server = server;
     this.connection = connection;
     this.inbound = inbound;
@@ -87,12 +86,13 @@ public class StatusSessionHandler implements MinecraftSessionHandler {
                     .replace('&', '§')
                     .replace("{NL}", "\n")
                     .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)),
-        new ServerPing.Players(Settings.IMP.MAIN_SETTINGS.MAINTENANCE.ENABLED
-            ? 0
-            : server.getPlayerCount(),
+        new ServerPing.Players(
             Settings.IMP.MAIN_SETTINGS.MAINTENANCE.ENABLED
-            ? 0
-            : configuration.getShowMaxPlayers(),
+                ? 0
+                : server.getPlayerCount(),
+            Settings.IMP.MAIN_SETTINGS.MAINTENANCE.ENABLED
+                ? 0
+                : configuration.getShowMaxPlayers(),
             ImmutableList.of()),
         Settings.IMP.MAIN_SETTINGS.MAINTENANCE.ENABLED
             ? server.getMaintenanceMotd()
@@ -182,7 +182,8 @@ public class StatusSessionHandler implements MinecraftSessionHandler {
       shownVersion = ProtocolVersion.MAINTENANCE;
     } else {
       shownVersion = ProtocolVersion.isSupported(connection.getProtocolVersion())
-        ? connection.getProtocolVersion() : ProtocolVersion.MAXIMUM_VERSION;
+          ? connection.getProtocolVersion()
+          : ProtocolVersion.MAXIMUM_VERSION;
     }
     PingPassthroughMode passthrough = configuration.getPingPassthrough();
 
@@ -242,7 +243,7 @@ public class StatusSessionHandler implements MinecraftSessionHandler {
               connection.write(new StatusResponse(json));
               server.getIpAttemptLimiter()
                   //BotFilter - global rate limiter
-                  .unthrottle(((InetSocketAddress)connection.getRemoteAddress()).getAddress());
+                  .unthrottle(((InetSocketAddress) connection.getRemoteAddress()).getAddress());
             },
             connection.eventLoop())
         .exceptionally((ex) -> {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeConnectionType.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeConnectionType.java
index 5e063b28..836548e7 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeConnectionType.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeConnectionType.java
@@ -36,8 +36,7 @@ public class LegacyForgeConnectionType extends ConnectionTypeImpl {
   }
 
   @Override
-  public GameProfile addGameProfileTokensIfRequired(GameProfile original,
-      PlayerInfoForwarding forwardingType) {
+  public GameProfile addGameProfileTokensIfRequired(GameProfile original, PlayerInfoForwarding forwardingType) {
     // We can't forward the FML token to the server when we are running in legacy forwarding mode,
     // since both use the "hostname" field in the handshake. We add a special property to the
     // profile instead, which will be ignored by non-Forge servers and can be intercepted by a
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeConstants.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeConstants.java
index 7dff8855..3c526c60 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeConstants.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeConstants.java
@@ -67,7 +67,7 @@ public class LegacyForgeConstants {
   /**
    * The payload for the reset packet.
    */
-  static final byte[] FORGE_LEGACY_HANDSHAKE_RESET_DATA = new byte[]{RESET_DATA_DISCRIMINATOR, 0};
+  static final byte[] FORGE_LEGACY_HANDSHAKE_RESET_DATA = new byte[] {RESET_DATA_DISCRIMINATOR, 0};
 
   private LegacyForgeConstants() {
     throw new AssertionError();
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeHandshakeBackendPhase.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeHandshakeBackendPhase.java
index ed435011..8c3ff28b 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeHandshakeBackendPhase.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeHandshakeBackendPhase.java
@@ -106,7 +106,8 @@ public enum LegacyForgeHandshakeBackendPhase implements BackendConnectionPhase {
     }
   };
 
-  @Nullable private final Integer packetToAdvanceOn;
+  @Nullable
+  private final Integer packetToAdvanceOn;
 
   /**
    * Creates an instance of the {@link LegacyForgeHandshakeBackendPhase}.
@@ -123,8 +124,7 @@ public enum LegacyForgeHandshakeBackendPhase implements BackendConnectionPhase {
 
   @Override
   public final boolean handle(VelocityServerConnection serverConnection,
-                              ConnectedPlayer player,
-                              PluginMessage message) {
+      ConnectedPlayer player, PluginMessage message) {
     if (message.getChannel().equals(LegacyForgeConstants.FORGE_LEGACY_HANDSHAKE_CHANNEL)) {
       // Get the phase and check if we need to start the next phase.
       LegacyForgeHandshakeBackendPhase newPhase = getNewPhase(serverConnection, message);
@@ -147,8 +147,7 @@ public enum LegacyForgeHandshakeBackendPhase implements BackendConnectionPhase {
   }
 
   @Override
-  public void onDepartForNewServer(VelocityServerConnection serverConnection,
-                                   ConnectedPlayer player) {
+  public void onDepartForNewServer(VelocityServerConnection serverConnection, ConnectedPlayer player) {
     // If the server we are departing is modded, we must always reset the client's handshake.
     player.getPhase().resetConnectionPhase(player);
   }
@@ -175,11 +174,11 @@ public enum LegacyForgeHandshakeBackendPhase implements BackendConnectionPhase {
    * Get the phase to act on, depending on the packet that has been sent.
    *
    * @param serverConnection The server Velocity is connecting to
-   * @param packet The packet
+   * @param packet           The packet
    * @return The phase to transition to, which may be the same as before.
    */
   private LegacyForgeHandshakeBackendPhase getNewPhase(VelocityServerConnection serverConnection,
-                                                       PluginMessage packet) {
+      PluginMessage packet) {
     if (packetToAdvanceOn != null
         && LegacyForgeUtil.getHandshakePacketDiscriminator(packet) == packetToAdvanceOn) {
       LegacyForgeHandshakeBackendPhase phaseToTransitionTo = nextPhase();
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeHandshakeClientPhase.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeHandshakeClientPhase.java
index 3bb1510f..333a6330 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeHandshakeClientPhase.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeHandshakeClientPhase.java
@@ -55,9 +55,7 @@ public enum LegacyForgeHandshakeClientPhase implements ClientConnectionPhase {
     }
 
     @Override
-    boolean onHandle(ConnectedPlayer player,
-        PluginMessage message,
-        MinecraftConnection backendConn) {
+    boolean onHandle(ConnectedPlayer player, PluginMessage message, MinecraftConnection backendConn) {
       // If we stay in this phase, we do nothing because it means the packet wasn't handled.
       // Returning false indicates this
       return false;
@@ -76,7 +74,6 @@ public enum LegacyForgeHandshakeClientPhase implements ClientConnectionPhase {
   },
 
 
-
   /**
    * The Mod list is sent to the server, captured by Velocity.
    * Transition to {@link #WAITING_SERVER_DATA} when an ACK is sent, which
@@ -89,9 +86,7 @@ public enum LegacyForgeHandshakeClientPhase implements ClientConnectionPhase {
     }
 
     @Override
-    boolean onHandle(ConnectedPlayer player,
-        PluginMessage message,
-        MinecraftConnection backendConn) {
+    boolean onHandle(ConnectedPlayer player, PluginMessage message, MinecraftConnection backendConn) {
       // Read the mod list if we haven't already.
       if (!player.getModInfo().isPresent()) {
         List<ModInfo.Mod> mods = LegacyForgeUtil.readModList(message);
@@ -163,9 +158,7 @@ public enum LegacyForgeHandshakeClientPhase implements ClientConnectionPhase {
     }
 
     @Override
-    boolean onHandle(ConnectedPlayer player,
-        PluginMessage message,
-        MinecraftConnection backendConn) {
+    boolean onHandle(ConnectedPlayer player, PluginMessage message, MinecraftConnection backendConn) {
       super.onHandle(player, message, backendConn);
 
       // just in case the timing is awful
@@ -180,7 +173,8 @@ public enum LegacyForgeHandshakeClientPhase implements ClientConnectionPhase {
     }
   };
 
-  @Nullable private final Integer packetToAdvanceOn;
+  @Nullable
+  private final Integer packetToAdvanceOn;
 
   /**
    * Creates an instance of the {@link LegacyForgeHandshakeClientPhase}.
@@ -196,9 +190,7 @@ public enum LegacyForgeHandshakeClientPhase implements ClientConnectionPhase {
   }
 
   @Override
-  public final boolean handle(ConnectedPlayer player,
-      PluginMessage message,
-      VelocityServerConnection server) {
+  public final boolean handle(ConnectedPlayer player, PluginMessage message, VelocityServerConnection server) {
     if (server != null) {
       MinecraftConnection backendConn = server.getConnection();
       if (backendConn != null
@@ -221,15 +213,12 @@ public enum LegacyForgeHandshakeClientPhase implements ClientConnectionPhase {
   /**
    * Handles the phase tasks.
    *
-   * @param player The player
-   * @param message The message to handle
+   * @param player      The player
+   * @param message     The message to handle
    * @param backendConn The backend connection to write to, if required.
-   *
    * @return true if handled, false otherwise.
    */
-  boolean onHandle(ConnectedPlayer player,
-      PluginMessage message,
-      MinecraftConnection backendConn) {
+  boolean onHandle(ConnectedPlayer player, PluginMessage message, MinecraftConnection backendConn) {
     // Send the packet on to the server.
     backendConn.write(message.retain());
 
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeUtil.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeUtil.java
index f541c789..8b0bd4b9 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeUtil.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/forge/legacy/LegacyForgeUtil.java
@@ -57,7 +57,7 @@ class LegacyForgeUtil {
   static List<ModInfo.Mod> readModList(PluginMessage message) {
     Preconditions.checkNotNull(message, "message");
     Preconditions.checkArgument(message.getChannel().equals(FORGE_LEGACY_HANDSHAKE_CHANNEL),
-            "message is not a FML HS plugin message");
+        "message is not a FML HS plugin message");
 
     ByteBuf contents = message.content().slice();
     byte discriminator = contents.readByte();
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/player/VelocityResourcePackInfo.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/player/VelocityResourcePackInfo.java
index 250e9b3a..e6b8330a 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/player/VelocityResourcePackInfo.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/player/VelocityResourcePackInfo.java
@@ -23,6 +23,7 @@ import net.kyori.adventure.text.Component;
 import org.checkerframework.checker.nullness.qual.Nullable;
 
 public final class VelocityResourcePackInfo implements ResourcePackInfo {
+
   private final String url;
   private final @Nullable byte[] hash;
   private final boolean shouldForce;
@@ -30,7 +31,7 @@ public final class VelocityResourcePackInfo implements ResourcePackInfo {
   private final Origin origin;
 
   private VelocityResourcePackInfo(String url, @Nullable byte[] hash, boolean shouldForce,
-                                  @Nullable Component prompt, Origin origin) {
+      @Nullable Component prompt, Origin origin) {
     this.url = url;
     this.hash = hash;
     this.shouldForce = shouldForce;
@@ -106,5 +107,4 @@ public final class VelocityResourcePackInfo implements ResourcePackInfo {
       this.origin = origin;
     }
   }
-
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/registry/DimensionData.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/registry/DimensionData.java
index 07b69bae..5872e978 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/registry/DimensionData.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/registry/DimensionData.java
@@ -23,6 +23,7 @@ import net.kyori.adventure.nbt.CompoundBinaryTag;
 import org.checkerframework.checker.nullness.qual.Nullable;
 
 public final class DimensionData {
+
   private static final String UNKNOWN_DIMENSION_ID = "velocity:unknown_dimension";
 
   private final String registryIdentifier;
@@ -48,26 +49,27 @@ public final class DimensionData {
 
   /**
    * Initializes a new {@link DimensionData} instance.
-   * @param registryIdentifier the identifier for the dimension from the registry.
-   * @param dimensionId the dimension ID contained in the registry (the "id" tag)
-   * @param isNatural indicates if the dimension use natural world generation (e.g. overworld)
-   * @param ambientLight the light level the client sees without external lighting
-   * @param isShrunk indicates if the world is shrunk, aka not the full 256 blocks (e.g. nether)
-   * @param isUltrawarm internal dimension warmth flag
-   * @param hasCeiling indicates if the dimension has a ceiling layer
-   * @param hasSkylight indicates if the dimension should display the sun
-   * @param isPiglinSafe indicates if piglins should naturally zombify in this dimension
-   * @param doBedsWork indicates if players should be able to sleep in beds in this dimension
-   * @param doRespawnAnchorsWork indicates if player respawn points can be used in this dimension
-   * @param hasRaids indicates if raids can be spawned in the dimension
-   * @param logicalHeight the natural max height for the given dimension
+   *
+   * @param registryIdentifier         the identifier for the dimension from the registry.
+   * @param dimensionId                the dimension ID contained in the registry (the "id" tag)
+   * @param isNatural                  indicates if the dimension use natural world generation (e.g. overworld)
+   * @param ambientLight               the light level the client sees without external lighting
+   * @param isShrunk                   indicates if the world is shrunk, aka not the full 256 blocks (e.g. nether)
+   * @param isUltrawarm                internal dimension warmth flag
+   * @param hasCeiling                 indicates if the dimension has a ceiling layer
+   * @param hasSkylight                indicates if the dimension should display the sun
+   * @param isPiglinSafe               indicates if piglins should naturally zombify in this dimension
+   * @param doBedsWork                 indicates if players should be able to sleep in beds in this dimension
+   * @param doRespawnAnchorsWork       indicates if player respawn points can be used in this dimension
+   * @param hasRaids                   indicates if raids can be spawned in the dimension
+   * @param logicalHeight              the natural max height for the given dimension
    * @param burningBehaviourIdentifier the identifier for how burning blocks work in the dimension
-   * @param fixedTime optional. If set to any game daytime value will deactivate time cycle
-   * @param createDragonFight optional. Internal flag used in the end dimension
-   * @param coordinateScale optional, unknown purpose
-   * @param effects optional, unknown purpose
-   * @param minY the world effective lowest build-level
-   * @param height the world height above zero
+   * @param fixedTime                  optional. If set to any game daytime value will deactivate time cycle
+   * @param createDragonFight          optional. Internal flag used in the end dimension
+   * @param coordinateScale            optional, unknown purpose
+   * @param effects                    optional, unknown purpose
+   * @param minY                       the world effective lowest build-level
+   * @param height                     the world height above zero
    */
   public DimensionData(String registryIdentifier,
       @Nullable Integer dimensionId,
@@ -193,11 +195,10 @@ public final class DimensionData {
    * and {@code dimensionId}.
    *
    * @param registryIdentifier the identifier for the dimension from the registry
-   * @param dimensionId optional, dimension ID
+   * @param dimensionId        optional, dimension ID
    * @return a new {@link DimensionData}
    */
-  public DimensionData annotateWith(String registryIdentifier,
-      @Nullable Integer dimensionId) {
+  public DimensionData annotateWith(String registryIdentifier, @Nullable Integer dimensionId) {
     return new DimensionData(registryIdentifier, dimensionId, isNatural, ambientLight, isShrunk,
         isUltrawarm, hasCeiling, hasSkylight, isPiglinSafe, doBedsWork, doRespawnAnchorsWork,
         hasRaids, logicalHeight, burningBehaviourIdentifier, fixedTime, createDragonFight,
@@ -216,8 +217,7 @@ public final class DimensionData {
    * @param version the protocol version
    * @return game dimension data
    */
-  public static DimensionData decodeBaseCompoundTag(CompoundBinaryTag details,
-      ProtocolVersion version) {
+  public static DimensionData decodeBaseCompoundTag(CompoundBinaryTag details, ProtocolVersion version) {
     boolean isNatural = details.getBoolean("natural");
     float ambientLight = details.getFloat("ambient_light");
     boolean isShrunk = details.getBoolean("shrunk");
@@ -241,10 +241,8 @@ public final class DimensionData {
     Integer minY = details.keySet().contains("min_y") ? details.getInt("min_y") : null;
     Integer height = details.keySet().contains("height") ? details.getInt("height") : null;
     if (version.compareTo(ProtocolVersion.MINECRAFT_1_17) >= 0) {
-      Preconditions.checkNotNull(height,
-              "DimensionData requires 'height' to be present for this version");
-      Preconditions.checkNotNull(minY,
-              "DimensionData requires 'minY' to be present for this version");
+      Preconditions.checkNotNull(height, "DimensionData requires 'height' to be present for this version");
+      Preconditions.checkNotNull(minY, "DimensionData requires 'minY' to be present for this version");
     }
     return new DimensionData(
         UNKNOWN_DIMENSION_ID, null, isNatural, ambientLight, isShrunk,
@@ -256,12 +254,12 @@ public final class DimensionData {
   /**
    * Parses a given CompoundTag to a DimensionData instance. Assumes the data is part of a
    * dimension registry.
-   * @param dimTag the compound from the registry to read
+   *
+   * @param dimTag  the compound from the registry to read
    * @param version the protocol version
    * @return game dimension data
    */
-  public static DimensionData decodeRegistryEntry(CompoundBinaryTag dimTag,
-      ProtocolVersion version) {
+  public static DimensionData decodeRegistryEntry(CompoundBinaryTag dimTag, ProtocolVersion version) {
     String registryIdentifier = dimTag.getString("name");
     CompoundBinaryTag details;
     Integer dimensionId = null;
@@ -278,6 +276,7 @@ public final class DimensionData {
 
   /**
    * Encodes the Dimension data as CompoundTag.
+   *
    * @param version the version to serialize as
    * @return compound containing the dimension data
    */
@@ -301,6 +300,7 @@ public final class DimensionData {
 
   /**
    * Serializes details of this dimension.
+   *
    * @return serialized details of this dimension
    */
   public CompoundBinaryTag serializeDimensionDetails() {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/registry/DimensionInfo.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/registry/DimensionInfo.java
index 8c7abd8c..bdb2a5e0 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/registry/DimensionInfo.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/registry/DimensionInfo.java
@@ -29,13 +29,13 @@ public final class DimensionInfo {
 
   /**
    * Initializes a new {@link DimensionInfo} instance.
+   *
    * @param registryIdentifier the identifier for the dimension from the registry
-   * @param levelName the level name as displayed in the F3 menu and logs
-   * @param isFlat if true will set world lighting below surface-level to not display fog
-   * @param isDebugType if true constrains the world to the very limited debug-type world
+   * @param levelName          the level name as displayed in the F3 menu and logs
+   * @param isFlat             if true will set world lighting below surface-level to not display fog
+   * @param isDebugType        if true constrains the world to the very limited debug-type world
    */
-  public DimensionInfo(String registryIdentifier, @Nullable String levelName,
-      boolean isFlat, boolean isDebugType) {
+  public DimensionInfo(String registryIdentifier, @Nullable String levelName, boolean isFlat, boolean isDebugType) {
     this.registryIdentifier = Preconditions.checkNotNull(
         registryIdentifier, "registryIdentifier cannot be null");
     Preconditions.checkArgument(registryIdentifier.length() > 0,
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/registry/DimensionRegistry.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/registry/DimensionRegistry.java
index 4e7fb52a..224d8d56 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/registry/DimensionRegistry.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/registry/DimensionRegistry.java
@@ -20,11 +20,9 @@ package com.velocitypowered.proxy.connection.registry;
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Maps;
-
 import com.velocitypowered.api.network.ProtocolVersion;
 import java.util.Map;
 import java.util.Set;
-
 import net.kyori.adventure.nbt.BinaryTag;
 import net.kyori.adventure.nbt.BinaryTagTypes;
 import net.kyori.adventure.nbt.CompoundBinaryTag;
@@ -44,11 +42,11 @@ public final class DimensionRegistry {
    * This WILL raise an IllegalArgumentException if the following is not met:
    * - At least one valid DimensionData instance is provided
    * - At least one valid world name is provided
+   *
    * @param registeredDimensions a populated {@link ImmutableSet} containing dimension data types
-   * @param levelNames a populated {@link ImmutableSet} of the level (world) names the server offers
+   * @param levelNames           a populated {@link ImmutableSet} of the level (world) names the server offers
    */
-  public DimensionRegistry(ImmutableSet<DimensionData> registeredDimensions,
-      ImmutableSet<String> levelNames) {
+  public DimensionRegistry(ImmutableSet<DimensionData> registeredDimensions, ImmutableSet<String> levelNames) {
     Preconditions.checkNotNull(registeredDimensions,
         "registeredDimensions cannot be null");
     Preconditions.checkNotNull(levelNames,
@@ -72,6 +70,7 @@ public final class DimensionRegistry {
 
   /**
    * Returns the internal dimension data type as used by the game.
+   *
    * @param dimensionIdentifier how the dimension is identified by the connection
    * @return game dimension data or null if not registered
    */
@@ -81,6 +80,7 @@ public final class DimensionRegistry {
 
   /**
    * Checks a {@link DimensionInfo} against this registry.
+   *
    * @param toValidate the {@link DimensionInfo} to validate
    * @return true: the dimension information is valid for this registry
    */
@@ -94,6 +94,7 @@ public final class DimensionRegistry {
 
   /**
    * Encodes the stored Dimension registry as CompoundTag.
+   *
    * @return the CompoundTag containing identifier:type mappings
    */
   public ListBinaryTag encodeRegistry(ProtocolVersion version) {
@@ -107,10 +108,10 @@ public final class DimensionRegistry {
 
   /**
    * Decodes a CompoundTag storing a dimension registry.
+   *
    * @param toParse CompoundTag containing a dimension registry
    */
-  public static ImmutableSet<DimensionData> fromGameData(ListBinaryTag toParse,
-      ProtocolVersion version) {
+  public static ImmutableSet<DimensionData> fromGameData(ListBinaryTag toParse, ProtocolVersion version) {
     Preconditions.checkNotNull(toParse, "ListTag cannot be null");
     ImmutableSet.Builder<DimensionData> mappings = ImmutableSet.builder();
     for (BinaryTag iter : toParse) {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/util/ConnectionMessages.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/util/ConnectionMessages.java
index 0ff0dc89..d3b99647 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/util/ConnectionMessages.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/util/ConnectionMessages.java
@@ -29,12 +29,14 @@ public class ConnectionMessages {
           .replace("{NL}", "\n")
           .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
       );
+
   public static final Component IN_PROGRESS = LegacyComponentSerializer
       .legacyAmpersand()
       .deserialize(Settings.IMP.MESSAGES.VELOCITY.ERROR.ALREADY_CONNECTING
           .replace("{NL}", "\n")
           .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
       );
+
   public static final Component INTERNAL_SERVER_CONNECTION_ERROR = LegacyComponentSerializer
       .legacyAmpersand()
       .deserialize(Settings.IMP.MESSAGES.VELOCITY.ERROR.INTERNAL_SERVER_CONNECTION_ERROR
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/util/ConnectionRequestResults.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/util/ConnectionRequestResults.java
index 9c8dbd5c..be09a7f6 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/util/ConnectionRequestResults.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/util/ConnectionRequestResults.java
@@ -38,20 +38,20 @@ public class ConnectionRequestResults {
 
   /**
    * Returns a plain result (one with a status but no reason).
+   *
    * @param status the status to use
    * @param server the server to use
    * @return the result
    */
-  public static Impl plainResult(
-      ConnectionRequestBuilder.Status status,
-      RegisteredServer server) {
+  public static Impl plainResult(ConnectionRequestBuilder.Status status, RegisteredServer server) {
     return new Impl(status, null, server, true);
   }
 
   /**
    * Returns a disconnect result with a reason.
+   *
    * @param component the reason for disconnecting from the server
-   * @param server the server to use
+   * @param server    the server to use
    * @return the result
    */
   public static Impl forDisconnect(Component component, RegisteredServer server) {
@@ -75,8 +75,7 @@ public class ConnectionRequestResults {
     private final RegisteredServer attemptedConnection;
     private final boolean safe;
 
-    Impl(Status status, @Nullable Component component,
-        RegisteredServer attemptedConnection, boolean safe) {
+    Impl(Status status, @Nullable Component component, RegisteredServer attemptedConnection, boolean safe) {
       this.status = status;
       this.component = component;
       this.attemptedConnection = attemptedConnection;
@@ -100,6 +99,7 @@ public class ConnectionRequestResults {
 
     /**
      * Returns whether or not it is safe to attempt a reconnect.
+     *
      * @return whether we can try to reconnect
      */
     public boolean isSafe() {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/connection/util/ConnectionTypeImpl.java b/proxy/src/main/java/com/velocitypowered/proxy/connection/util/ConnectionTypeImpl.java
index 38735283..cb28695a 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/connection/util/ConnectionTypeImpl.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/connection/util/ConnectionTypeImpl.java
@@ -31,8 +31,7 @@ public class ConnectionTypeImpl implements ConnectionType {
   private final ClientConnectionPhase initialClientPhase;
   private final BackendConnectionPhase initialBackendPhase;
 
-  public ConnectionTypeImpl(ClientConnectionPhase initialClientPhase,
-                            BackendConnectionPhase initialBackendPhase) {
+  public ConnectionTypeImpl(ClientConnectionPhase initialClientPhase, BackendConnectionPhase initialBackendPhase) {
     this.initialClientPhase = initialClientPhase;
     this.initialBackendPhase = initialBackendPhase;
   }
@@ -48,8 +47,7 @@ public class ConnectionTypeImpl implements ConnectionType {
   }
 
   @Override
-  public GameProfile addGameProfileTokensIfRequired(GameProfile original,
-                                                    PlayerInfoForwarding forwardingType) {
+  public GameProfile addGameProfileTokensIfRequired(GameProfile original, PlayerInfoForwarding forwardingType) {
     return original;
   }
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/console/VelocityConsole.java b/proxy/src/main/java/com/velocitypowered/proxy/console/VelocityConsole.java
index 0a59858a..38361f27 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/console/VelocityConsole.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/console/VelocityConsole.java
@@ -24,20 +24,13 @@ import com.velocitypowered.api.permission.PermissionFunction;
 import com.velocitypowered.api.permission.Tristate;
 import com.velocitypowered.api.proxy.ConsoleCommandSource;
 import com.velocitypowered.proxy.VelocityServer;
-import com.velocitypowered.proxy.util.ClosestLocaleMatcher;
 import java.util.List;
 import net.elytrium.elytraproxy.config.Settings;
-import java.util.Locale;
 import net.kyori.adventure.identity.Identity;
 import net.kyori.adventure.permission.PermissionChecker;
 import net.kyori.adventure.pointer.Pointers;
 import net.kyori.adventure.text.Component;
 import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
-import net.kyori.text.TextComponent;
-import net.kyori.text.format.TextColor;
-import net.kyori.adventure.text.format.NamedTextColor;
-import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
-import net.kyori.adventure.translation.GlobalTranslator;
 import net.minecrell.terminalconsole.SimpleTerminalConsole;
 import org.apache.logging.log4j.Level;
 import org.apache.logging.log4j.LogManager;
@@ -56,7 +49,7 @@ public final class VelocityConsole extends SimpleTerminalConsole implements Cons
   private final VelocityServer server;
   private PermissionFunction permissionFunction = ALWAYS_TRUE;
   private final @NotNull Pointers pointers = ConsoleCommandSource.super.pointers().toBuilder()
-          .withDynamic(PermissionChecker.POINTER, this::getPermissionChecker).build();
+      .withDynamic(PermissionChecker.POINTER, this::getPermissionChecker).build();
 
   public VelocityConsole(VelocityServer server) {
     this.server = server;
@@ -64,10 +57,14 @@ public final class VelocityConsole extends SimpleTerminalConsole implements Cons
 
   @Override
   public void sendMessage(@NonNull Identity identity, @NonNull Component message) {
+    // ElytraProxy Start: Removed as unnecessary
+    /*
     Component translated = GlobalTranslator.render(message, ClosestLocaleMatcher.INSTANCE
         .lookupClosest(Locale.getDefault()));
-    logger.info(LegacyComponentSerializer.legacySection().serialize(translated));
+    */
+    logger.info(LegacyComponentSerializer.legacySection().serialize(message/*translated*/));
   }
+  // ElytraProxy End
 
   @Override
   public @NonNull Tristate getPermissionValue(@NonNull String permission) {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/event/VelocityEventManager.java b/proxy/src/main/java/com/velocitypowered/proxy/event/VelocityEventManager.java
index 212acd16..edd7c0ca 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/event/VelocityEventManager.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/event/VelocityEventManager.java
@@ -247,8 +247,7 @@ public class VelocityEventManager implements EventManager {
     }
   }
 
-  private void collectMethods(final Class<?> targetClass,
-      final Map<String, MethodHandlerInfo> collected) {
+  private void collectMethods(final Class<?> targetClass, final Map<String, MethodHandlerInfo> collected) {
     for (final Method method : targetClass.getDeclaredMethods()) {
       final Subscribe subscribe = method.getAnnotation(Subscribe.class);
       if (subscribe == null) {
@@ -366,7 +365,7 @@ public class VelocityEventManager implements EventManager {
    * Registers the listener for a given plugin.
    *
    * @param pluginContainer registering plugin
-   * @param listener listener to register
+   * @param listener        listener to register
    */
   public void registerInternally(final PluginContainer pluginContainer, final Object listener) {
     final Class<?> targetClass = listener.getClass();
@@ -460,8 +459,7 @@ public class VelocityEventManager implements EventManager {
     return future;
   }
 
-  private <E> void fire(final @Nullable CompletableFuture<E> future,
-      final E event, final HandlersCache handlersCache) {
+  private <E> void fire(final @Nullable CompletableFuture<E> future, final E event, final HandlersCache handlersCache) {
     // In Velocity 1.1.0, all events were fired asynchronously. As Velocity 3.0.0 is intended to be
     // largely (albeit not 100%) compatible with 1.1.x, we also fire events async. This behavior
     // will go away in Velocity Polymer.
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/network/ConnectionManager.java b/proxy/src/main/java/com/velocitypowered/proxy/network/ConnectionManager.java
index 9bf9e78b..11cbc2db 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/network/ConnectionManager.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/network/ConnectionManager.java
@@ -51,8 +51,7 @@ import org.checkerframework.checker.nullness.qual.Nullable;
 
 public final class ConnectionManager {
 
-  private static final WriteBufferWaterMark SERVER_WRITE_MARK = new WriteBufferWaterMark(1 << 20,
-      1 << 21);
+  private static final WriteBufferWaterMark SERVER_WRITE_MARK = new WriteBufferWaterMark(1 << 20, 1 << 21);
   private static final Logger LOGGER = LogManager.getLogger(ConnectionManager.class);
   private final Map<InetSocketAddress, Endpoint> endpoints = new HashMap<>();
   private final TransportType transportType;
@@ -144,7 +143,7 @@ public final class ConnectionManager {
    * Binds a GS4 listener to the specified {@code hostname} and {@code port}.
    *
    * @param hostname the hostname to bind to
-   * @param port the port to bind to
+   * @param port     the port to bind to
    */
   public void queryBind(final String hostname, final int port) {
     InetSocketAddress address = new InetSocketAddress(hostname, port);
@@ -173,7 +172,6 @@ public final class ConnectionManager {
    * Creates a TCP {@link Bootstrap} using Velocity's event loops.
    *
    * @param group the event loop group to use. Use {@code null} for the default worker group.
-   *
    * @return a new {@link Bootstrap}
    */
   public Bootstrap createWorker(@Nullable EventLoopGroup group) {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/network/Endpoint.java b/proxy/src/main/java/com/velocitypowered/proxy/network/Endpoint.java
index af453e63..dbfd8128 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/network/Endpoint.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/network/Endpoint.java
@@ -25,6 +25,7 @@ import io.netty.channel.Channel;
  * Represents a listener endpoint.
  */
 public final class Endpoint {
+
   private final Channel channel;
   private final ListenerType type;
 
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/network/ServerChannelInitializer.java b/proxy/src/main/java/com/velocitypowered/proxy/network/ServerChannelInitializer.java
index ca1c8619..ed7a6520 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/network/ServerChannelInitializer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/network/ServerChannelInitializer.java
@@ -39,7 +39,6 @@ import io.netty.channel.Channel;
 import io.netty.channel.ChannelInitializer;
 import io.netty.handler.codec.haproxy.HAProxyMessageDecoder;
 import io.netty.handler.timeout.ReadTimeoutHandler;
-
 import java.net.InetSocketAddress;
 import java.util.concurrent.TimeUnit;
 
@@ -58,15 +57,15 @@ public class ServerChannelInitializer extends ChannelInitializer<Channel> {
     if (server.getElytraProxy() == null) {
       return;
     }
-    //BotFilter start - global rate limiter
+    // BotFilter backport Start: Global rate limiter
     boolean isProxyProtocol = this.server.getConfiguration().isProxyProtocol();
     if (!isProxyProtocol && !server.getIpAttemptLimiter()
-        .attempt(((InetSocketAddress)ch.remoteAddress()).getAddress())) {
+        .attempt(((InetSocketAddress) ch.remoteAddress()).getAddress())) {
       ch.close();
       server.getElytraProxy().getStatistics().addBlockedConnection();
       return;
     }
-    //BotFilter end
+    // BotFilter backport End
 
     ch.pipeline()
         .addLast(LEGACY_PING_DECODER, new LegacyPingDecoder())
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/network/ServerChannelInitializerHolder.java b/proxy/src/main/java/com/velocitypowered/proxy/network/ServerChannelInitializerHolder.java
index ab125cc8..87819a03 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/network/ServerChannelInitializerHolder.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/network/ServerChannelInitializerHolder.java
@@ -39,6 +39,7 @@ public class ServerChannelInitializerHolder implements Supplier<ChannelInitializ
 
   /**
    * Sets the channel initializer.
+   *
    * @param initializer the new initializer to use
    * @deprecated Internal implementation detail
    */
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/network/TransportType.java b/proxy/src/main/java/com/velocitypowered/proxy/network/TransportType.java
index 1082d1e9..91d5dedf 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/network/TransportType.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/network/TransportType.java
@@ -36,6 +36,7 @@ import java.util.concurrent.ThreadFactory;
 import java.util.function.BiFunction;
 
 enum TransportType {
+
   NIO("NIO", NioServerSocketChannel::new,
       NioSocketChannel::new,
       NioDatagramChannel::new,
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/plugin/VelocityPluginManager.java b/proxy/src/main/java/com/velocitypowered/proxy/plugin/VelocityPluginManager.java
index 682d5bc7..96cfae57 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/plugin/VelocityPluginManager.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/plugin/VelocityPluginManager.java
@@ -43,7 +43,6 @@ import java.nio.file.Path;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
-import java.util.HashMap;
 import java.util.HashSet;
 import java.util.IdentityHashMap;
 import java.util.LinkedHashMap;
@@ -74,6 +73,7 @@ public class VelocityPluginManager implements PluginManager {
 
   /**
    * Loads all plugins from the specified {@code directory}.
+   *
    * @param directory the directory to load from
    * @throws IOException if we could not open the directory
    */
@@ -138,8 +138,8 @@ public class VelocityPluginManager implements PluginManager {
         bind(CommandManager.class).toInstance(server.getCommandManager());
         for (PluginContainer container : pluginContainers.keySet()) {
           bind(PluginContainer.class)
-            .annotatedWith(Names.named(container.getDescription().getId()))
-            .toInstance(container);
+              .annotatedWith(Names.named(container.getDescription().getId()))
+              .toInstance(container);
         }
       }
     };
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/VelocityPluginDescription.java b/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/VelocityPluginDescription.java
index b799dbbf..8b06ab8f 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/VelocityPluginDescription.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/VelocityPluginDescription.java
@@ -44,14 +44,15 @@ public class VelocityPluginDescription implements PluginDescription {
 
   /**
    * Creates a new plugin description.
-   * @param id the ID
-   * @param name the name of the plugin
-   * @param version the plugin version
-   * @param description a description of the plugin
-   * @param url the website for the plugin
-   * @param authors the authors of this plugin
+   *
+   * @param id           the ID
+   * @param name         the name of the plugin
+   * @param version      the plugin version
+   * @param description  a description of the plugin
+   * @param url          the website for the plugin
+   * @param authors      the authors of this plugin
    * @param dependencies the dependencies for this plugin
-   * @param source the original source for the plugin
+   * @param source       the original source for the plugin
    */
   public VelocityPluginDescription(String id, @Nullable String name, @Nullable String version,
       @Nullable String description, @Nullable String url,
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/java/JavaPluginLoader.java b/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/java/JavaPluginLoader.java
index a3043a93..4b91799f 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/java/JavaPluginLoader.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/java/JavaPluginLoader.java
@@ -80,7 +80,7 @@ public class JavaPluginLoader implements PluginLoader {
 
     URL pluginJarUrl = source.getSource().get().toUri().toURL();
     PluginClassLoader loader = AccessController.doPrivileged(
-        (PrivilegedAction<PluginClassLoader>) () -> new PluginClassLoader(new URL[]{pluginJarUrl}));
+        (PrivilegedAction<PluginClassLoader>) () -> new PluginClassLoader(new URL[] {pluginJarUrl}));
     loader.addToClassloaders();
 
     JavaVelocityPluginDescriptionCandidate candidate =
@@ -122,7 +122,7 @@ public class JavaPluginLoader implements PluginLoader {
 
     if (instance == null) {
       throw new IllegalStateException(
-        "Got nothing from injector for plugin " + description.getId());
+          "Got nothing from injector for plugin " + description.getId());
     }
 
     ((VelocityPluginContainer) container).setInstance(instance);
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/java/JavaVelocityPluginDescriptionCandidate.java b/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/java/JavaVelocityPluginDescriptionCandidate.java
index 4e4aa306..e78ef806 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/java/JavaVelocityPluginDescriptionCandidate.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/java/JavaVelocityPluginDescriptionCandidate.java
@@ -32,8 +32,8 @@ class JavaVelocityPluginDescriptionCandidate extends VelocityPluginDescription {
 
   JavaVelocityPluginDescriptionCandidate(String id, @Nullable String name, @Nullable String version,
       @Nullable String description, @Nullable String url,
-      @Nullable List<String> authors, Collection<PluginDependency> dependencies, Path source,
-      String mainClass) {
+      @Nullable List<String> authors, Collection<PluginDependency> dependencies,
+      Path source, String mainClass) {
     super(id, name, version, description, url, authors, dependencies, source);
     this.mainClass = checkNotNull(mainClass);
   }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/java/VelocityPluginModule.java b/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/java/VelocityPluginModule.java
index 2e8bd6eb..46521c76 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/java/VelocityPluginModule.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/plugin/loader/java/VelocityPluginModule.java
@@ -36,7 +36,7 @@ class VelocityPluginModule implements Module {
   private final Path basePluginPath;
 
   VelocityPluginModule(ProxyServer server, JavaVelocityPluginDescription description,
-                       PluginContainer pluginContainer, Path basePluginPath) {
+      PluginContainer pluginContainer, Path basePluginPath) {
     this.server = server;
     this.description = description;
     this.pluginContainer = pluginContainer;
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/MinecraftPacket.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/MinecraftPacket.java
index 7b2184d9..15b0120a 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/MinecraftPacket.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/MinecraftPacket.java
@@ -24,7 +24,7 @@ import io.netty.buffer.ByteBuf;
 
 public interface MinecraftPacket {
 
-  //BotFilter start - add default to methods
+  // BotFilter backport Start: Add default to methods
   default void decode(ByteBuf buf, Direction direction, ProtocolVersion protocolVersion) {
     throw new UnsupportedOperationException();
   }
@@ -36,15 +36,13 @@ public interface MinecraftPacket {
   default boolean handle(MinecraftSessionHandler handler) {
     throw new UnsupportedOperationException();
   }
-  //BotFilter end
+  // BotFilter backport End
 
-  default int expectedMaxLength(ByteBuf buf, ProtocolUtils.Direction direction,
-      ProtocolVersion version) {
+  default int expectedMaxLength(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion version) {
     return -1;
   }
 
-  default int expectedMinLength(ByteBuf buf, ProtocolUtils.Direction direction,
-      ProtocolVersion version) {
+  default int expectedMinLength(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion version) {
     return 0;
   }
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/ProtocolUtils.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/ProtocolUtils.java
index 53daae29..bb4b3506 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/ProtocolUtils.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/ProtocolUtils.java
@@ -32,7 +32,6 @@ import io.netty.buffer.ByteBufUtil;
 import io.netty.handler.codec.CorruptedFrameException;
 import io.netty.handler.codec.DecoderException;
 import io.netty.handler.codec.EncoderException;
-
 import java.io.DataInput;
 import java.io.DataOutput;
 import java.io.IOException;
@@ -40,7 +39,6 @@ import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.UUID;
-
 import net.kyori.adventure.nbt.BinaryTagIO;
 import net.kyori.adventure.nbt.CompoundBinaryTag;
 import net.kyori.adventure.text.serializer.gson.GsonComponentSerializer;
@@ -73,13 +71,15 @@ public enum ProtocolUtils {
 
   /**
    * Reads a Minecraft-style VarInt from the specified {@code buf}.
+   *
    * @param buf the buffer to read from
    * @return the decoded VarInt
    */
   public static int readVarInt(ByteBuf buf) {
     int read = readVarIntSafely(buf);
     if (read == Integer.MIN_VALUE) {
-      throw MinecraftDecoder.DEBUG ? new CorruptedFrameException("Bad VarInt decoded")
+      throw MinecraftDecoder.DEBUG
+          ? new CorruptedFrameException("Bad VarInt decoded")
           : BAD_VARINT_CACHED;
     }
     return read;
@@ -89,6 +89,7 @@ public enum ProtocolUtils {
    * Reads a Minecraft-style VarInt from the specified {@code buf}. The difference between this
    * method and {@link #readVarInt(ByteBuf)} is that this function returns a sentinel value if the
    * varint is invalid.
+   *
    * @param buf the buffer to read from
    * @return the decoded VarInt, or {@code Integer.MIN_VALUE} if the varint is invalid
    */
@@ -107,6 +108,7 @@ public enum ProtocolUtils {
 
   /**
    * Returns the exact byte size of {@code value} if it were encoded as a VarInt.
+   *
    * @param value the value to encode
    * @return the byte size of {@code value} if encoded as a VarInt
    */
@@ -116,7 +118,8 @@ public enum ProtocolUtils {
 
   /**
    * Writes a Minecraft-style VarInt to the specified {@code buf}.
-   * @param buf the buffer to read from
+   *
+   * @param buf   the buffer to read from
    * @param value the integer to write
    */
   public static void writeVarInt(ByteBuf buf, int value) {
@@ -157,7 +160,8 @@ public enum ProtocolUtils {
   /**
    * Writes the specified {@code value} as a 21-bit Minecraft VarInt to the specified {@code buf}.
    * The upper 11 bits will be discarded.
-   * @param buf the buffer to read from
+   *
+   * @param buf   the buffer to read from
    * @param value the integer to write
    */
   public static void write21BitVarInt(ByteBuf buf, int value) {
@@ -173,6 +177,7 @@ public enum ProtocolUtils {
   /**
    * Reads a VarInt length-prefixed UTF-8 string from the {@code buf}, making sure to not go over
    * {@code cap} size.
+   *
    * @param buf the buffer to read from
    * @param cap the maximum size of the string, in UTF-8 character length
    * @return the decoded string
@@ -200,6 +205,7 @@ public enum ProtocolUtils {
 
   /**
    * Writes the specified {@code str} to the {@code buf} with a VarInt prefix.
+   *
    * @param buf the buffer to write to
    * @param str the string to write
    */
@@ -216,6 +222,7 @@ public enum ProtocolUtils {
   /**
    * Reads a VarInt length-prefixed byte array from the {@code buf}, making sure to not go over
    * {@code cap} size.
+   *
    * @param buf the buffer to read from
    * @param cap the maximum size of the string, in UTF-8 character length
    * @return the byte array
@@ -239,6 +246,7 @@ public enum ProtocolUtils {
 
   /**
    * Reads an VarInt-prefixed array of VarInt integers from the {@code buf}.
+   *
    * @param buf the buffer to read from
    * @return an array of integers
    */
@@ -254,6 +262,7 @@ public enum ProtocolUtils {
 
   /**
    * Reads an UUID from the {@code buf}.
+   *
    * @param buf the buffer to read from
    * @return the UUID from the buffer
    */
@@ -270,6 +279,7 @@ public enum ProtocolUtils {
 
   /**
    * Reads an UUID stored as an Integer Array from the {@code buf}.
+   *
    * @param buf the buffer to read from
    * @return the UUID from the buffer
    */
@@ -285,7 +295,8 @@ public enum ProtocolUtils {
 
   /**
    * Writes an UUID as an Integer Array to the {@code buf}.
-   * @param buf the buffer to write to
+   *
+   * @param buf  the buffer to write to
    * @param uuid the UUID to write
    */
   public static void writeUuidIntArray(ByteBuf buf, UUID uuid) {
@@ -297,7 +308,8 @@ public enum ProtocolUtils {
 
   /**
    * Reads a {@link net.kyori.adventure.nbt.CompoundBinaryTag} from the {@code buf}.
-   * @param buf the buffer to read from
+   *
+   * @param buf    the buffer to read from
    * @param reader the NBT reader to use
    * @return {@link net.kyori.adventure.nbt.CompoundBinaryTag} the CompoundTag from the buffer
    */
@@ -306,13 +318,14 @@ public enum ProtocolUtils {
       return reader.read((DataInput) new ByteBufInputStream(buf));
     } catch (IOException thrown) {
       throw new DecoderException(
-              "Unable to parse NBT CompoundTag, full error: " + thrown.getMessage());
+          "Unable to parse NBT CompoundTag, full error: " + thrown.getMessage());
     }
   }
 
   /**
    * Writes a CompoundTag to the {@code buf}.
-   * @param buf the buffer to write to
+   *
+   * @param buf         the buffer to write to
    * @param compoundTag the CompoundTag to write
    */
   public static void writeCompoundTag(ByteBuf buf, CompoundBinaryTag compoundTag) {
@@ -325,6 +338,7 @@ public enum ProtocolUtils {
 
   /**
    * Reads a String array from the {@code buf}.
+   *
    * @param buf the buffer to read from
    * @return the String array from the buffer
    */
@@ -339,7 +353,8 @@ public enum ProtocolUtils {
 
   /**
    * Writes a String Array to the {@code buf}.
-   * @param buf the buffer to write to
+   *
+   * @param buf         the buffer to write to
    * @param stringArray the array to write
    */
   public static void writeStringArray(ByteBuf buf, String[] stringArray) {
@@ -351,7 +366,8 @@ public enum ProtocolUtils {
 
   /**
    * Writes a list of {@link com.velocitypowered.api.util.GameProfile.Property} to the buffer.
-   * @param buf the buffer to write to
+   *
+   * @param buf        the buffer to write to
    * @param properties the properties to serialize
    */
   public static void writeProperties(ByteBuf buf, List<GameProfile.Property> properties) {
@@ -371,6 +387,7 @@ public enum ProtocolUtils {
 
   /**
    * Reads a list of {@link com.velocitypowered.api.util.GameProfile.Property} from the buffer.
+   *
    * @param buf the buffer to read from
    * @return the read properties
    */
@@ -433,8 +450,8 @@ public enum ProtocolUtils {
   /**
    * Writes an byte array for legacy version 1.7 to the specified {@code buf}
    *
-   * @param b array
-   * @param buf buf
+   * @param b             array
+   * @param buf           buf
    * @param allowExtended forge
    */
   public static void writeByteArray17(byte[] b, ByteBuf buf, boolean allowExtended) {
@@ -457,8 +474,8 @@ public enum ProtocolUtils {
   /**
    * Writes an {@link ByteBuf} for legacy version 1.7 to the specified {@code buf}
    *
-   * @param b array
-   * @param buf buf
+   * @param b             array
+   * @param buf           buf
    * @param allowExtended forge
    */
   public static void writeByteBuf17(ByteBuf b, ByteBuf buf, boolean allowExtended) {
@@ -497,7 +514,7 @@ public enum ProtocolUtils {
   /**
    * Writes a Minecraft-style extended short to the specified {@code buf}.
    *
-   * @param buf buf to write
+   * @param buf     buf to write
    * @param toWrite the extended short to write
    */
   public static void writeExtendedForgeShort(ByteBuf buf, int toWrite) {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/StateRegistry.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/StateRegistry.java
index 1d786691..69022934 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/StateRegistry.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/StateRegistry.java
@@ -151,7 +151,6 @@ public enum StateRegistry {
           map(0x1F, MINECRAFT_1_14, false),
           map(0x20, MINECRAFT_1_16, false),
           map(0x21, MINECRAFT_1_16_2, false));
-
       clientbound.register(BossBar.class, BossBar::new,
           map(0x0C, MINECRAFT_1_9, false),
           map(0x0D, MINECRAFT_1_15, false),
@@ -297,7 +296,9 @@ public enum StateRegistry {
       clientbound.register(LoginPluginMessage.class, LoginPluginMessage::new,
           map(0x04, MINECRAFT_1_13, false));
     }
-  }, BotFilter{};
+  }, BotFilter {
+
+  };
 
   public static final int STATUS_ID = 1;
   public static final int LOGIN_ID = 2;
@@ -323,7 +324,7 @@ public enum StateRegistry {
       this.versions = Collections.unmodifiableMap(mutableVersions);
     }
 
-    //BotFilter public
+    // BotFilter backport: Make public
     public ProtocolRegistry getProtocolRegistry(final ProtocolVersion version) {
       ProtocolRegistry registry = versions.get(version);
       if (registry == null) {
@@ -335,7 +336,7 @@ public enum StateRegistry {
       return registry;
     }
 
-    //BotFilter public
+    // BotFilter backport: Make public
     public <P extends MinecraftPacket> void register(Class<P> clazz, Supplier<P> packetSupplier,
         PacketMapping... mappings) {
       if (mappings.length == 0) {
@@ -354,11 +355,12 @@ public enum StateRegistry {
           }
           if (from.compareTo(lastValid) > 0) {
             throw new IllegalArgumentException(
-                    "Last mapping version cannot be higher than highest mapping version");
+                "Last mapping version cannot be higher than highest mapping version");
           }
         }
         ProtocolVersion to = current == next ? lastValid != null
-                ? lastValid : getLast(SUPPORTED_VERSIONS) : next.protocolVersion;
+            ? lastValid
+            : getLast(SUPPORTED_VERSIONS) : next.protocolVersion;
 
         if (from.compareTo(to) >= 0 && from != getLast(SUPPORTED_VERSIONS)) {
           throw new IllegalArgumentException(String.format(
@@ -450,8 +452,8 @@ public enum StateRegistry {
         final int id = this.packetClassToId.getInt(clazz);
         if (id == Integer.MIN_VALUE) {
           throw new IllegalArgumentException(String.format(
-                  "Unable to find id for packet of type %s in %s protocol %s",
-                  clazz.getName(), PacketRegistry.this.direction, this.version
+              "Unable to find id for packet of type %s in %s protocol %s",
+              clazz.getName(), PacketRegistry.this.direction, this.version
           ));
         }
         return id;
@@ -467,7 +469,7 @@ public enum StateRegistry {
     private final @Nullable ProtocolVersion lastValidProtocolVersion;
 
     PacketMapping(int id, ProtocolVersion protocolVersion,
-                  ProtocolVersion lastValidProtocolVersion, boolean packetDecoding) {
+        ProtocolVersion lastValidProtocolVersion, boolean packetDecoding) {
       this.id = id;
       this.protocolVersion = protocolVersion;
       this.lastValidProtocolVersion = lastValidProtocolVersion;
@@ -512,7 +514,7 @@ public enum StateRegistry {
    * @return PacketMapping with the provided arguments
    */
   @SuppressFBWarnings({"UPM_UNCALLED_PRIVATE_METHOD"})
-  //BotFilter public
+  // BotFilter backport: Make public
   public static PacketMapping map(int id, ProtocolVersion version, boolean encodeOnly) {
     return map(id, version, null, encodeOnly);
   }
@@ -520,16 +522,15 @@ public enum StateRegistry {
   /**
    * Creates a PacketMapping using the provided arguments.
    *
-   * @param id         Packet Id
-   * @param version    Protocol version
-   * @param encodeOnly When true packet decoding will be disabled
+   * @param id                       Packet Id
+   * @param version                  Protocol version
+   * @param encodeOnly               When true packet decoding will be disabled
    * @param lastValidProtocolVersion Last version this Mapping is valid at
    * @return PacketMapping with the provided arguments
    */
-  //BotFilter public
+  // BotFilter backport: Make public
   public static PacketMapping map(int id, ProtocolVersion version,
-          ProtocolVersion lastValidProtocolVersion, boolean encodeOnly) {
+      ProtocolVersion lastValidProtocolVersion, boolean encodeOnly) {
     return new PacketMapping(id, version, lastValidProtocolVersion, encodeOnly);
   }
-
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/VelocityConnectionEvent.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/VelocityConnectionEvent.java
index 6d4fe06b..4de63cf0 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/VelocityConnectionEvent.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/VelocityConnectionEvent.java
@@ -21,6 +21,7 @@ package com.velocitypowered.proxy.protocol;
  * Describes various events fired during the course of a connection.
  */
 public enum VelocityConnectionEvent {
+
   COMPRESSION_ENABLED,
   COMPRESSION_DISABLED,
   ENCRYPTION_ENABLED,
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/GS4QueryHandler.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/GS4QueryHandler.java
index 8a711ae6..68eaebde 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/GS4QueryHandler.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/GS4QueryHandler.java
@@ -54,9 +54,9 @@ public class GS4QueryHandler extends SimpleChannelInboundHandler<DatagramPacket>
   private static final short QUERY_MAGIC_SECOND = 0xFD;
   private static final byte QUERY_TYPE_HANDSHAKE = 0x09;
   private static final byte QUERY_TYPE_STAT = 0x00;
-  private static final byte[] QUERY_RESPONSE_FULL_PADDING = new byte[]{0x73, 0x70, 0x6C, 0x69, 0x74,
+  private static final byte[] QUERY_RESPONSE_FULL_PADDING = new byte[] {0x73, 0x70, 0x6C, 0x69, 0x74,
       0x6E, 0x75, 0x6D, 0x00, (byte) 0x80, 0x00};
-  private static final byte[] QUERY_RESPONSE_FULL_PADDING2 = new byte[]{0x01, 0x70, 0x6C, 0x61,
+  private static final byte[] QUERY_RESPONSE_FULL_PADDING2 = new byte[] {0x01, 0x70, 0x6C, 0x61,
       0x79, 0x65, 0x72, 0x5F, 0x00, 0x00};
 
   // Contents to add into basic stat response. See ResponseWriter class below
@@ -85,16 +85,18 @@ public class GS4QueryHandler extends SimpleChannelInboundHandler<DatagramPacket>
     return QueryResponse.builder()
         .hostname(PlainComponentSerializer.plain().serialize(
             Settings.IMP.MAIN_SETTINGS.MAINTENANCE.ENABLED
-            ? server.getMaintenanceMotd()
-            : server.getConfiguration().getMotd()))
+                ? server.getMaintenanceMotd()
+                : server.getConfiguration().getMotd()))
         .gameVersion("")
         .map(server.getConfiguration().getQueryMap())
-        .currentPlayers(Settings.IMP.MAIN_SETTINGS.MAINTENANCE.ENABLED
-            ? 0
-            : server.getPlayerCount())
-        .maxPlayers(Settings.IMP.MAIN_SETTINGS.MAINTENANCE.ENABLED
-            ? 0
-            : server.getConfiguration().getShowMaxPlayers())
+        .currentPlayers(
+            Settings.IMP.MAIN_SETTINGS.MAINTENANCE.ENABLED
+                ? 0
+                : server.getPlayerCount())
+        .maxPlayers(
+            Settings.IMP.MAIN_SETTINGS.MAINTENANCE.ENABLED
+                ? 0
+                : server.getConfiguration().getShowMaxPlayers())
         .proxyPort(server.getConfiguration().getBind().getPort())
         .proxyHost(server.getConfiguration().getBind().getHostString())
         .players(server.getAllPlayers().stream().filter(p -> p.getCurrentServer()
@@ -103,14 +105,16 @@ public class GS4QueryHandler extends SimpleChannelInboundHandler<DatagramPacket>
                 .contains(p.getCurrentServer().get().getServerInfo().getName()))
             .map(Player::getUsername)
             .collect(Collectors.toList()))
-        .proxyVersion((Settings.IMP.MAIN_SETTINGS.MAINTENANCE.ENABLED
-            ? Settings.IMP.MAIN_SETTINGS.MAINTENANCE.PING_VERSION
-            : Settings.IMP.MAIN_SETTINGS.PING_VERSION)
-                .replace('&', '§')
-                .replace("{NL}", "\n")
-                .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX))
+        .proxyVersion((
+            Settings.IMP.MAIN_SETTINGS.MAINTENANCE.ENABLED
+                ? Settings.IMP.MAIN_SETTINGS.MAINTENANCE.PING_VERSION
+                : Settings.IMP.MAIN_SETTINGS.PING_VERSION)
+                    .replace('&', '§')
+                    .replace("{NL}", "\n")
+                    .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX))
         .plugins(
-            server.getConfiguration().shouldQueryShowPlugins() ? getRealPluginInformation()
+            server.getConfiguration().shouldQueryShowPlugins()
+                ? getRealPluginInformation()
                 : Collections.emptyList())
         .build();
   }
@@ -282,7 +286,7 @@ public class GS4QueryHandler extends SimpleChannelInboundHandler<DatagramPacket>
       if (isBasic) {
         return;
       }
-      
+
       StringBuilder pluginsString = new StringBuilder();
       pluginsString.append(serverVersion).append(':').append(' ');
       Iterator<QueryResponse.PluginInformation> iterator = plugins.iterator();
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/MinecraftCompressDecoder.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/MinecraftCompressDecoder.java
index ccadf9d7..2c2bb3b1 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/MinecraftCompressDecoder.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/MinecraftCompressDecoder.java
@@ -35,7 +35,8 @@ public class MinecraftCompressDecoder extends MessageToMessageDecoder<ByteBuf> {
 
   private static final int UNCOMPRESSED_CAP =
       Boolean.getBoolean("velocity.increased-compression-cap")
-          ? HARD_MAXIMUM_UNCOMPRESSED_SIZE : VANILLA_MAXIMUM_UNCOMPRESSED_SIZE;
+          ? HARD_MAXIMUM_UNCOMPRESSED_SIZE
+          : VANILLA_MAXIMUM_UNCOMPRESSED_SIZE;
 
   private int threshold;
   private final VelocityCompressor compressor;
@@ -55,10 +56,9 @@ public class MinecraftCompressDecoder extends MessageToMessageDecoder<ByteBuf> {
     }
 
     checkFrame(claimedUncompressedSize >= threshold, "Uncompressed size %s is less than"
-            + " threshold %s", claimedUncompressedSize, threshold);
+        + " threshold %s", claimedUncompressedSize, threshold);
     checkFrame(claimedUncompressedSize <= UNCOMPRESSED_CAP,
-        "Uncompressed size %s exceeds hard threshold of %s", claimedUncompressedSize,
-        UNCOMPRESSED_CAP);
+        "Uncompressed size %s exceeds hard threshold of %s", claimedUncompressedSize, UNCOMPRESSED_CAP);
 
     ByteBuf compatibleIn = ensureCompatible(ctx.alloc(), compressor, in);
     ByteBuf uncompressed = preferredBuffer(ctx.alloc(), compressor, claimedUncompressedSize);
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/MinecraftDecoder.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/MinecraftDecoder.java
index 5243a679..7cfc90a5 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/MinecraftDecoder.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/MinecraftDecoder.java
@@ -46,8 +46,7 @@ public class MinecraftDecoder extends ChannelInboundHandlerAdapter {
    */
   public MinecraftDecoder(ProtocolUtils.Direction direction) {
     this.direction = Preconditions.checkNotNull(direction, "direction");
-    this.registry = direction.getProtocolRegistry(StateRegistry.HANDSHAKE,
-        ProtocolVersion.MINIMUM_VERSION);
+    this.registry = direction.getProtocolRegistry(StateRegistry.HANDSHAKE, ProtocolVersion.MINIMUM_VERSION);
     this.state = StateRegistry.HANDSHAKE;
   }
 
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/MinecraftEncoder.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/MinecraftEncoder.java
index 7ed59202..72f91ac2 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/MinecraftEncoder.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/netty/MinecraftEncoder.java
@@ -39,8 +39,7 @@ public class MinecraftEncoder extends MessageToByteEncoder<MinecraftPacket> {
    */
   public MinecraftEncoder(ProtocolUtils.Direction direction) {
     this.direction = Preconditions.checkNotNull(direction, "direction");
-    this.registry = direction
-        .getProtocolRegistry(StateRegistry.HANDSHAKE, ProtocolVersion.MINIMUM_VERSION);
+    this.registry = direction.getProtocolRegistry(StateRegistry.HANDSHAKE, ProtocolVersion.MINIMUM_VERSION);
     this.state = StateRegistry.HANDSHAKE;
   }
 
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/AvailableCommands.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/AvailableCommands.java
index 50424f5e..a682863e 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/AvailableCommands.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/AvailableCommands.java
@@ -54,6 +54,7 @@ import org.checkerframework.checker.nullness.qual.MonotonicNonNull;
 import org.checkerframework.checker.nullness.qual.Nullable;
 
 public class AvailableCommands implements MinecraftPacket {
+
   private static final Command<CommandSource> PLACEHOLDER_COMMAND = source -> 0;
 
   private static final byte NODE_TYPE_ROOT = 0x00;
@@ -69,6 +70,7 @@ public class AvailableCommands implements MinecraftPacket {
 
   /**
    * Returns the root node.
+   *
    * @return the root node
    */
   public RootCommandNode<CommandSource> getRootNode() {
@@ -164,12 +166,11 @@ public class AvailableCommands implements MinecraftPacket {
 
     if (node instanceof ArgumentCommandNode<?, ?>) {
       ProtocolUtils.writeString(buf, node.getName());
-      ArgumentPropertyRegistry.serialize(buf,
-              ((ArgumentCommandNode<CommandSource, ?>) node).getType());
+      ArgumentPropertyRegistry.serialize(buf, ((ArgumentCommandNode<CommandSource, ?>) node).getType());
 
       if (((ArgumentCommandNode<CommandSource, ?>) node).getCustomSuggestions() != null) {
         SuggestionProvider<CommandSource> provider = ((ArgumentCommandNode<CommandSource, ?>) node)
-                .getCustomSuggestions();
+            .getCustomSuggestions();
         String name = "minecraft:ask_server";
         if (provider instanceof ProtocolSuggestionProvider) {
           name = ((ProtocolSuggestionProvider) provider).name;
@@ -316,11 +317,9 @@ public class AvailableCommands implements MinecraftPacket {
 
       if (args != null) {
         if (args instanceof LiteralArgumentBuilder) {
-          helper.add("argsLabel",
-                  ((LiteralArgumentBuilder<CommandSource>) args).getLiteral());
+          helper.add("argsLabel", ((LiteralArgumentBuilder<CommandSource>) args).getLiteral());
         } else if (args instanceof RequiredArgumentBuilder) {
-          helper.add("argsName",
-                  ((RequiredArgumentBuilder<CommandSource, ?>) args).getName());
+          helper.add("argsName", ((RequiredArgumentBuilder<CommandSource, ?>) args).getName());
         }
       }
 
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/Chat.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/Chat.java
index 5c628337..4b0f7fe3 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/Chat.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/Chat.java
@@ -23,11 +23,10 @@ import com.velocitypowered.proxy.connection.MinecraftSessionHandler;
 import com.velocitypowered.proxy.protocol.MinecraftPacket;
 import com.velocitypowered.proxy.protocol.ProtocolUtils;
 import io.netty.buffer.ByteBuf;
+import java.util.UUID;
 import net.kyori.adventure.identity.Identity;
 import org.checkerframework.checker.nullness.qual.Nullable;
 
-import java.util.UUID;
-
 public class Chat implements MinecraftPacket {
 
   public static final byte CHAT_TYPE = (byte) 0;
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/Disconnect.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/Disconnect.java
index 82528e70..667306a6 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/Disconnect.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/Disconnect.java
@@ -72,8 +72,7 @@ public class Disconnect implements MinecraftPacket {
     return handler.handle(this);
   }
 
-  public static Disconnect create(net.kyori.adventure.text.Component component,
-      ProtocolVersion version) {
+  public static Disconnect create(net.kyori.adventure.text.Component component, ProtocolVersion version) {
     Preconditions.checkNotNull(component, "component");
     return new Disconnect(ProtocolUtils.getJsonChatSerializer(version).serialize(component));
   }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/Handshake.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/Handshake.java
index d2b425a7..6853c25b 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/Handshake.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/Handshake.java
@@ -21,7 +21,6 @@ import static com.velocitypowered.proxy.connection.forge.legacy.LegacyForgeConst
 
 import com.velocitypowered.api.network.ProtocolVersion;
 import com.velocitypowered.proxy.connection.MinecraftSessionHandler;
-import com.velocitypowered.proxy.connection.forge.legacy.LegacyForgeConstants;
 import com.velocitypowered.proxy.protocol.MinecraftPacket;
 import com.velocitypowered.proxy.protocol.ProtocolUtils;
 import io.netty.buffer.ByteBuf;
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/HeaderAndFooter.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/HeaderAndFooter.java
index 8001012a..00fab1d9 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/HeaderAndFooter.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/HeaderAndFooter.java
@@ -69,8 +69,7 @@ public class HeaderAndFooter implements MinecraftPacket {
     return handler.handle(this);
   }
 
-  public static HeaderAndFooter create(Component header,
-                                       Component footer, ProtocolVersion protocolVersion) {
+  public static HeaderAndFooter create(Component header, Component footer, ProtocolVersion protocolVersion) {
     GsonComponentSerializer serializer = ProtocolUtils.getJsonChatSerializer(protocolVersion);
     return new HeaderAndFooter(serializer.serialize(header), serializer.serialize(footer));
   }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/JoinGame.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/JoinGame.java
index 9899ef0c..940adda2 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/JoinGame.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/JoinGame.java
@@ -23,7 +23,8 @@ import com.velocitypowered.proxy.connection.MinecraftSessionHandler;
 import com.velocitypowered.proxy.connection.registry.DimensionData;
 import com.velocitypowered.proxy.connection.registry.DimensionInfo;
 import com.velocitypowered.proxy.connection.registry.DimensionRegistry;
-import com.velocitypowered.proxy.protocol.*;
+import com.velocitypowered.proxy.protocol.MinecraftPacket;
+import com.velocitypowered.proxy.protocol.ProtocolUtils;
 import io.netty.buffer.ByteBuf;
 import net.kyori.adventure.nbt.BinaryTagIO;
 import net.kyori.adventure.nbt.BinaryTagTypes;
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/LegacyDisconnect.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/LegacyDisconnect.java
index caf6150e..ca309619 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/LegacyDisconnect.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/LegacyDisconnect.java
@@ -40,12 +40,12 @@ public class LegacyDisconnect {
 
   /**
    * Converts a modern server list ping response into an legacy disconnect packet.
+   *
    * @param response the server ping to convert
-   * @param version the requesting clients' version
+   * @param version  the requesting clients' version
    * @return the disconnect packet
    */
-  public static LegacyDisconnect fromServerPing(ServerPing response,
-      LegacyMinecraftPingVersion version) {
+  public static LegacyDisconnect fromServerPing(ServerPing response, LegacyMinecraftPingVersion version) {
     Players players = response.getPlayers().orElse(FAKE_PLAYERS);
 
     switch (version) {
@@ -86,6 +86,7 @@ public class LegacyDisconnect {
 
   /**
    * Converts a {@link TextComponent} into a legacy disconnect packet.
+   *
    * @param component the component to convert
    * @return the disconnect packet
    */
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/PlayerListItem.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/PlayerListItem.java
index 5aa66706..a43fe848 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/PlayerListItem.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/PlayerListItem.java
@@ -164,8 +164,7 @@ public class PlayerListItem implements MinecraftPacket {
     return handler.handle(this);
   }
 
-  private void writeDisplayName(ByteBuf buf, @Nullable Component displayName,
-      ProtocolVersion version) {
+  private void writeDisplayName(ByteBuf buf, @Nullable Component displayName, ProtocolVersion version) {
     buf.writeBoolean(displayName != null);
     if (displayName != null) {
       ProtocolUtils.writeString(buf, ProtocolUtils.getJsonChatSerializer(version)
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/PluginMessage.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/PluginMessage.java
index 9faaae04..85a2bd22 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/PluginMessage.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/PluginMessage.java
@@ -36,8 +36,7 @@ public class PluginMessage extends DeferredByteBufHolder implements MinecraftPac
     super(null);
   }
 
-  public PluginMessage(String channel,
-      @MonotonicNonNull ByteBuf backing) {
+  public PluginMessage(String channel, @MonotonicNonNull ByteBuf backing) {
     super(backing);
     this.channel = channel;
   }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/TabCompleteResponse.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/TabCompleteResponse.java
index c983fed8..900e2662 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/TabCompleteResponse.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/TabCompleteResponse.java
@@ -132,8 +132,7 @@ public class TabCompleteResponse implements MinecraftPacket {
       this(text, null);
     }
 
-    public Offer(String text,
-        @Nullable Component tooltip) {
+    public Offer(String text, @Nullable Component tooltip) {
       this.text = text;
       this.tooltip = tooltip;
     }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ArgumentPropertyRegistry.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ArgumentPropertyRegistry.java
index 8f0b035a..a6d60d8f 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ArgumentPropertyRegistry.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ArgumentPropertyRegistry.java
@@ -36,9 +36,9 @@ import com.velocitypowered.proxy.protocol.ProtocolUtils;
 import io.netty.buffer.ByteBuf;
 import java.util.HashMap;
 import java.util.Map;
-import org.checkerframework.checker.nullness.qual.Nullable;
 
 public class ArgumentPropertyRegistry {
+
   private ArgumentPropertyRegistry() {
     throw new AssertionError();
   }
@@ -65,6 +65,7 @@ public class ArgumentPropertyRegistry {
 
   /**
    * Deserializes the {@link ArgumentType}.
+   *
    * @param buf the buffer to deserialize
    * @return the deserialized {@link ArgumentType}
    */
@@ -85,7 +86,8 @@ public class ArgumentPropertyRegistry {
 
   /**
    * Serializes the {@code type} into the provided {@code buf}.
-   * @param buf the buffer to serialize into
+   *
+   * @param buf  the buffer to serialize into
    * @param type the type to serialize
    */
   public static void serialize(ByteBuf buf, ArgumentType<?> type) {
@@ -103,8 +105,7 @@ public class ArgumentPropertyRegistry {
       ArgumentPropertySerializer serializer = byClass.get(type.getClass());
       String id = classToId.get(type.getClass());
       if (serializer == null || id == null) {
-        throw new IllegalArgumentException("Don't know how to serialize "
-            + type.getClass().getName());
+        throw new IllegalArgumentException("Don't know how to serialize " + type.getClass().getName());
       }
       ProtocolUtils.writeString(buf, id);
       serializer.serialize(type, buf);
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ArgumentPropertySerializer.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ArgumentPropertySerializer.java
index 0dbc66dc..30fcbe30 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ArgumentPropertySerializer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ArgumentPropertySerializer.java
@@ -21,6 +21,7 @@ import io.netty.buffer.ByteBuf;
 import org.checkerframework.checker.nullness.qual.Nullable;
 
 public interface ArgumentPropertySerializer<T> {
+
   @Nullable T deserialize(ByteBuf buf);
 
   void serialize(T object, ByteBuf buf);
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ByteArgumentPropertySerializer.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ByteArgumentPropertySerializer.java
index a6d24c64..68460ca4 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ByteArgumentPropertySerializer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ByteArgumentPropertySerializer.java
@@ -24,7 +24,6 @@ class ByteArgumentPropertySerializer implements ArgumentPropertySerializer<Byte>
   static final ByteArgumentPropertySerializer BYTE = new ByteArgumentPropertySerializer();
 
   private ByteArgumentPropertySerializer() {
-
   }
 
   @Override
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/EmptyArgumentPropertySerializer.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/EmptyArgumentPropertySerializer.java
index 4338381d..63b860c3 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/EmptyArgumentPropertySerializer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/EmptyArgumentPropertySerializer.java
@@ -25,8 +25,7 @@ import org.checkerframework.checker.nullness.qual.Nullable;
  */
 class EmptyArgumentPropertySerializer implements ArgumentPropertySerializer<Void> {
 
-  static final ArgumentPropertySerializer<Void> EMPTY =
-      new EmptyArgumentPropertySerializer();
+  static final ArgumentPropertySerializer<Void> EMPTY = new EmptyArgumentPropertySerializer();
 
   private EmptyArgumentPropertySerializer() {
   }
@@ -38,6 +37,5 @@ class EmptyArgumentPropertySerializer implements ArgumentPropertySerializer<Void
 
   @Override
   public void serialize(Void object, ByteBuf buf) {
-
   }
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/FloatArgumentPropertySerializer.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/FloatArgumentPropertySerializer.java
index 2f5b9bc9..e1ec3497 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/FloatArgumentPropertySerializer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/FloatArgumentPropertySerializer.java
@@ -29,7 +29,6 @@ class FloatArgumentPropertySerializer implements ArgumentPropertySerializer<Floa
   static final FloatArgumentPropertySerializer FLOAT = new FloatArgumentPropertySerializer();
 
   private FloatArgumentPropertySerializer() {
-
   }
 
   @Override
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/IntegerArgumentPropertySerializer.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/IntegerArgumentPropertySerializer.java
index 333d653f..e89ef882 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/IntegerArgumentPropertySerializer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/IntegerArgumentPropertySerializer.java
@@ -28,7 +28,6 @@ class IntegerArgumentPropertySerializer implements ArgumentPropertySerializer<In
   static final byte HAS_MAXIMUM = 0x02;
 
   private IntegerArgumentPropertySerializer() {
-
   }
 
   @Override
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/LongArgumentPropertySerializer.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/LongArgumentPropertySerializer.java
index f2b37ac3..e4cc2d4d 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/LongArgumentPropertySerializer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/LongArgumentPropertySerializer.java
@@ -29,7 +29,6 @@ class LongArgumentPropertySerializer implements ArgumentPropertySerializer<LongA
   static final LongArgumentPropertySerializer LONG = new LongArgumentPropertySerializer();
 
   private LongArgumentPropertySerializer() {
-
   }
 
   @Override
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ModArgumentProperty.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ModArgumentProperty.java
index cf6283b2..06971e9f 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ModArgumentProperty.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ModArgumentProperty.java
@@ -52,8 +52,7 @@ public class ModArgumentProperty implements ArgumentType<ByteBuf> {
   }
 
   @Override
-  public <S> CompletableFuture<Suggestions> listSuggestions(CommandContext<S> context,
-      SuggestionsBuilder builder) {
+  public <S> CompletableFuture<Suggestions> listSuggestions(CommandContext<S> context, SuggestionsBuilder builder) {
     throw new UnsupportedOperationException();
   }
 
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ModArgumentPropertySerializer.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ModArgumentPropertySerializer.java
index 58b65b98..19a9d458 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ModArgumentPropertySerializer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/ModArgumentPropertySerializer.java
@@ -23,10 +23,10 @@ import io.netty.buffer.Unpooled;
 import org.checkerframework.checker.nullness.qual.Nullable;
 
 class ModArgumentPropertySerializer implements ArgumentPropertySerializer<ModArgumentProperty> {
+
   static final ModArgumentPropertySerializer MOD = new ModArgumentPropertySerializer();
 
   private ModArgumentPropertySerializer() {
-
   }
 
   @Override
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/PassthroughProperty.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/PassthroughProperty.java
index 71b91d45..5cf97dc7 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/PassthroughProperty.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/PassthroughProperty.java
@@ -27,8 +27,7 @@ class PassthroughProperty<T> implements ArgumentType<T> {
   private final ArgumentPropertySerializer<T> serializer;
   private final @Nullable T result;
 
-  PassthroughProperty(String identifier, ArgumentPropertySerializer<T> serializer,
-      @Nullable T result) {
+  PassthroughProperty(String identifier, ArgumentPropertySerializer<T> serializer, @Nullable T result) {
     this.identifier = identifier;
     this.serializer = serializer;
     this.result = result;
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/StringArgumentPropertySerializer.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/StringArgumentPropertySerializer.java
index 790eee12..7da2c5da 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/StringArgumentPropertySerializer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/brigadier/StringArgumentPropertySerializer.java
@@ -26,11 +26,9 @@ import io.netty.buffer.ByteBuf;
  */
 class StringArgumentPropertySerializer implements ArgumentPropertySerializer<StringArgumentType> {
 
-  public static final ArgumentPropertySerializer<StringArgumentType> STRING =
-      new StringArgumentPropertySerializer();
+  public static final ArgumentPropertySerializer<StringArgumentType> STRING = new StringArgumentPropertySerializer();
 
   private StringArgumentPropertySerializer() {
-
   }
 
   @Override
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/legacyping/LegacyMinecraftPingVersion.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/legacyping/LegacyMinecraftPingVersion.java
index 40ce92df..99ea4fd7 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/legacyping/LegacyMinecraftPingVersion.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/legacyping/LegacyMinecraftPingVersion.java
@@ -18,6 +18,7 @@
 package com.velocitypowered.proxy.protocol.packet.legacyping;
 
 public enum LegacyMinecraftPingVersion {
+
   MINECRAFT_1_3,
   MINECRAFT_1_4,
   MINECRAFT_1_6
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/GenericTitlePacket.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/GenericTitlePacket.java
index 38c890c0..7da178b5 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/GenericTitlePacket.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/GenericTitlePacket.java
@@ -21,7 +21,6 @@ import com.velocitypowered.api.network.ProtocolVersion;
 import com.velocitypowered.proxy.protocol.MinecraftPacket;
 import com.velocitypowered.proxy.protocol.ProtocolUtils;
 import io.netty.buffer.ByteBuf;
-import org.checkerframework.checker.nullness.qual.Nullable;
 
 public abstract class GenericTitlePacket implements MinecraftPacket {
 
@@ -40,8 +39,7 @@ public abstract class GenericTitlePacket implements MinecraftPacket {
     }
 
     public int getAction(ProtocolVersion version) {
-      return version.compareTo(ProtocolVersion.MINECRAFT_1_11) < 0
-              ? action > 2 ? action - 1 : action : action;
+      return version.compareTo(ProtocolVersion.MINECRAFT_1_11) < 0 ? action > 2 ? action - 1 : action : action;
     }
   }
 
@@ -89,18 +87,16 @@ public abstract class GenericTitlePacket implements MinecraftPacket {
   }
 
 
-
   @Override
-  public final void decode(ByteBuf buf, ProtocolUtils.Direction direction,
-                           ProtocolVersion version) {
+  public final void decode(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion version) {
     throw new UnsupportedOperationException(); // encode only
   }
 
   /**
    * Creates a version and type dependent TitlePacket.
    *
-   * @param type       Action the packet should invoke
-   * @param version    Protocol version of the target player
+   * @param type    Action the packet should invoke
+   * @param version Protocol version of the target player
    * @return GenericTitlePacket instance that follows the invoker type/version
    */
   public static GenericTitlePacket constructTitlePacket(ActionType type, ProtocolVersion version) {
@@ -132,5 +128,4 @@ public abstract class GenericTitlePacket implements MinecraftPacket {
     packet.setAction(type);
     return packet;
   }
-
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/LegacyTitlePacket.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/LegacyTitlePacket.java
index 7b25325e..5d967d92 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/LegacyTitlePacket.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/LegacyTitlePacket.java
@@ -32,8 +32,7 @@ public class LegacyTitlePacket extends GenericTitlePacket {
 
   @Override
   public void encode(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion version) {
-    if (version.compareTo(ProtocolVersion.MINECRAFT_1_11) < 0
-            && getAction() == ActionType.SET_ACTION_BAR) {
+    if (version.compareTo(ProtocolVersion.MINECRAFT_1_11) < 0 && getAction() == ActionType.SET_ACTION_BAR) {
       throw new IllegalStateException("Action bars are only supported on 1.11 and newer");
     }
     ProtocolUtils.writeVarInt(buf, getAction().getAction(version));
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/ByteBufDataOutput.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/ByteBufDataOutput.java
index e7ff5d62..50945ae8 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/ByteBufDataOutput.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/ByteBufDataOutput.java
@@ -20,7 +20,6 @@ package com.velocitypowered.proxy.protocol.util;
 import com.google.common.io.ByteArrayDataOutput;
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufUtil;
-import java.io.DataOutput;
 import java.io.DataOutputStream;
 import java.io.IOException;
 import java.io.OutputStream;
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/DeferredByteBufHolder.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/DeferredByteBufHolder.java
index b6655bc2..75f5c570 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/DeferredByteBufHolder.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/DeferredByteBufHolder.java
@@ -31,8 +31,7 @@ public class DeferredByteBufHolder implements ByteBufHolder {
   @MonotonicNonNull
   private ByteBuf backing;
 
-  public DeferredByteBufHolder(
-      @MonotonicNonNull ByteBuf backing) {
+  public DeferredByteBufHolder(@MonotonicNonNull ByteBuf backing) {
     this.backing = backing;
   }
 
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/FaviconSerializer.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/FaviconSerializer.java
index b1447c87..f39bcd76 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/FaviconSerializer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/FaviconSerializer.java
@@ -31,7 +31,6 @@ public final class FaviconSerializer implements JsonSerializer<Favicon>, JsonDes
   public static final FaviconSerializer INSTANCE = new FaviconSerializer();
 
   private FaviconSerializer() {
-
   }
 
   @Override
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/GameProfileSerializer.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/GameProfileSerializer.java
index 96de2610..7afd5080 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/GameProfileSerializer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/GameProfileSerializer.java
@@ -34,15 +34,16 @@ public final class GameProfileSerializer implements JsonSerializer<GameProfile>,
     JsonDeserializer<GameProfile> {
 
   public static final GameProfileSerializer INSTANCE = new GameProfileSerializer();
-  private static final Type propertyList = new TypeToken<List<Property>>() {}.getType();
+  private static final Type propertyList = new TypeToken<List<Property>>() {
+
+  }.getType();
 
   private GameProfileSerializer() {
 
   }
 
   @Override
-  public GameProfile deserialize(JsonElement json, Type typeOfT,
-      JsonDeserializationContext context) {
+  public GameProfile deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) {
     JsonObject obj = json.getAsJsonObject();
     return new GameProfile(obj.get("id").getAsString(), obj.get("name").getAsString(),
         context.deserialize(obj.get("properties"), propertyList));
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/NettyPreconditions.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/NettyPreconditions.java
index 52bdb75d..8eaadefc 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/NettyPreconditions.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/NettyPreconditions.java
@@ -26,9 +26,9 @@ import io.netty.handler.codec.CorruptedFrameException;
  * Extends {@link com.google.common.base.Preconditions} for Netty's {@link CorruptedFrameException}.
  */
 public final class NettyPreconditions {
+
   private static final QuietDecoderException BAD = new QuietDecoderException(
-      "Invalid packet received. Launch Velocity with -Dvelocity.packet-decode-logging=true "
-          + "to see more.");
+      "Invalid packet received. Launch Velocity with -Dvelocity.packet-decode-logging=true to see more.");
 
   private NettyPreconditions() {
     throw new AssertionError();
@@ -36,7 +36,8 @@ public final class NettyPreconditions {
 
   /**
    * Throws {@link CorruptedFrameException} if {@code b} is false.
-   * @param b the expression to check
+   *
+   * @param b       the expression to check
    * @param message the message to include in the thrown {@link CorruptedFrameException}
    */
   public static void checkFrame(boolean b, String message) {
@@ -47,11 +48,12 @@ public final class NettyPreconditions {
 
   /**
    * Throws {@link CorruptedFrameException} if {@code b} is false.
-   * @param b the expression to check
+   *
+   * @param b       the expression to check
    * @param message the message to include in the thrown {@link CorruptedFrameException}, formatted
    *                like {@link com.google.common.base.Preconditions#checkArgument(boolean)} and
    *                friends
-   * @param arg1 the first argument to format the message with
+   * @param arg1    the first argument to format the message with
    */
   public static void checkFrame(boolean b, String message, Object arg1) {
     if (!b) {
@@ -65,12 +67,13 @@ public final class NettyPreconditions {
 
   /**
    * Throws {@link CorruptedFrameException} if {@code b} is false.
-   * @param b the expression to check
+   *
+   * @param b       the expression to check
    * @param message the message to include in the thrown {@link CorruptedFrameException}, formatted
    *                like {@link com.google.common.base.Preconditions#checkArgument(boolean)} and
    *                friends
-   * @param arg1 the first argument to format the message with
-   * @param arg2 the second argument to format the message with
+   * @param arg1    the first argument to format the message with
+   * @param arg2    the second argument to format the message with
    */
   public static void checkFrame(boolean b, String message, Object arg1, Object arg2) {
     if (!b) {
@@ -84,11 +87,12 @@ public final class NettyPreconditions {
 
   /**
    * Throws {@link CorruptedFrameException} if {@code b} is false.
-   * @param b the expression to check
+   *
+   * @param b       the expression to check
    * @param message the message to include in the thrown {@link CorruptedFrameException}, formatted
    *                like {@link com.google.common.base.Preconditions#checkArgument(boolean)} and
    *                friends
-   * @param args the arguments to format the message with-
+   * @param args    the arguments to format the message with-
    */
   public static void checkFrame(boolean b, String message, Object... args) {
     if (!b) {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/PluginMessageUtil.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/PluginMessageUtil.java
index 37d77cf2..fab0bfef 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/PluginMessageUtil.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/PluginMessageUtil.java
@@ -49,6 +49,7 @@ public final class PluginMessageUtil {
 
   /**
    * Determines whether or not this is a brand plugin message. This is shown on the client.
+   *
    * @param message the plugin message
    * @return whether or not this is a brand plugin message
    */
@@ -60,6 +61,7 @@ public final class PluginMessageUtil {
 
   /**
    * Determines whether or not this plugin message is being used to register plugin channels.
+   *
    * @param message the plugin message
    * @return whether we are registering plugin channels or not
    */
@@ -71,6 +73,7 @@ public final class PluginMessageUtil {
 
   /**
    * Determines whether or not this plugin message is being used to unregister plugin channels.
+   *
    * @param message the plugin message
    * @return whether we are unregistering plugin channels or not
    */
@@ -82,13 +85,14 @@ public final class PluginMessageUtil {
 
   /**
    * Fetches all the channels in a register or unregister plugin message.
+   *
    * @param message the message to get the channels from
    * @return the channels, as an immutable list
    */
   public static List<String> getChannels(PluginMessage message) {
     checkNotNull(message, "message");
     checkArgument(isRegister(message) || isUnregister(message), "Unknown channel type %s",
-            message.getChannel());
+        message.getChannel());
     if (!message.content().isReadable()) {
       // If we try to split this, we will get an one-element array with the empty string, which
       // has caused issues with 1.13+ compatibility. Just return an empty list.
@@ -100,8 +104,9 @@ public final class PluginMessageUtil {
 
   /**
    * Constructs a channel (un)register packet.
+   *
    * @param protocolVersion the client/server's protocol version
-   * @param channels the channels to register
+   * @param channels        the channels to register
    * @return the plugin message to send
    */
   public static PluginMessage constructChannelsPacket(ProtocolVersion protocolVersion,
@@ -109,7 +114,8 @@ public final class PluginMessageUtil {
     checkNotNull(channels, "channels");
     checkArgument(!channels.isEmpty(), "no channels specified");
     String channelName = protocolVersion.compareTo(ProtocolVersion.MINECRAFT_1_13) >= 0
-        ? REGISTER_CHANNEL : REGISTER_CHANNEL_LEGACY;
+        ? REGISTER_CHANNEL
+        : REGISTER_CHANNEL_LEGACY;
     ByteBuf contents = Unpooled.buffer();
     contents.writeCharSequence(String.join("\0", channels), StandardCharsets.UTF_8);
     return new PluginMessage(channelName, contents);
@@ -117,6 +123,7 @@ public final class PluginMessageUtil {
 
   /**
    * Rewrites the brand message to indicate the presence of Velocity.
+   *
    * @param message the plugin message
    * @param version the proxy version
    * @return the rewritten plugin message
@@ -129,7 +136,7 @@ public final class PluginMessageUtil {
 
     String currentBrand = readBrandMessage(message.content());
     String rewrittenBrand = Settings.IMP.MAIN_SETTINGS.BRAND
-            .replace("{ServerBrand}", currentBrand).replace("{ProxyBrand}", version.getName());
+        .replace("{ServerBrand}", currentBrand).replace("{ProxyBrand}", version.getName());
 
     ByteBuf rewrittenBuf = Unpooled.buffer();
     if (protocolVersion.compareTo(ProtocolVersion.MINECRAFT_1_8) >= 0) {
@@ -146,6 +153,7 @@ public final class PluginMessageUtil {
    * In order to accommodate their broken behavior, we'll first try to read in the 1.8 format, and
    * if that fails, treat it as a 1.7-format message (which has no prefixed length). (The message
    * Velocity sends will be in the correct format depending on the protocol.)
+   *
    * @param content the brand packet
    * @return the client brand
    */
@@ -161,6 +169,7 @@ public final class PluginMessageUtil {
 
   /**
    * Transform a plugin message channel from a "legacy" (<1.13) form to a modern one.
+   *
    * @param name the existing name
    * @return the new name
    */
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/VelocityLegacyHoverEventSerializer.java b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/VelocityLegacyHoverEventSerializer.java
index 9d706d3d..57f93dc1 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/VelocityLegacyHoverEventSerializer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/protocol/util/VelocityLegacyHoverEventSerializer.java
@@ -24,7 +24,6 @@ import net.kyori.adventure.nbt.CompoundBinaryTag;
 import net.kyori.adventure.nbt.TagStringIO;
 import net.kyori.adventure.nbt.api.BinaryTagHolder;
 import net.kyori.adventure.text.Component;
-import net.kyori.adventure.text.TextComponent;
 import net.kyori.adventure.text.event.HoverEvent;
 import net.kyori.adventure.text.event.HoverEvent.ShowEntity;
 import net.kyori.adventure.text.event.HoverEvent.ShowItem;
@@ -71,7 +70,8 @@ public class VelocityLegacyHoverEventSerializer implements LegacyHoverEventSeria
 
   @Override
   public HoverEvent.@NonNull ShowEntity deserializeShowEntity(@NonNull Component input,
-      Decoder<Component, String, ? extends RuntimeException> componentDecoder) throws IOException {
+      Decoder<Component, String, ? extends RuntimeException> componentDecoder)
+      throws IOException {
     String snbt = PlainComponentSerializer.plain().serialize(input);
     CompoundBinaryTag item = TagStringIO.get().asCompound(snbt);
 
@@ -111,7 +111,8 @@ public class VelocityLegacyHoverEventSerializer implements LegacyHoverEventSeria
 
   @Override
   public @NonNull Component serializeShowEntity(HoverEvent.@NonNull ShowEntity input,
-      Encoder<Component, String, ? extends RuntimeException> componentEncoder) throws IOException {
+      Encoder<Component, String, ? extends RuntimeException> componentEncoder)
+      throws IOException {
     CompoundBinaryTag.Builder tag = CompoundBinaryTag.builder()
         .putString("id", input.id().toString())
         .putString("type", input.type().asString());
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/scheduler/VelocityScheduler.java b/proxy/src/main/java/com/velocitypowered/proxy/scheduler/VelocityScheduler.java
index 8f33b355..4e658a32 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/scheduler/VelocityScheduler.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/scheduler/VelocityScheduler.java
@@ -24,7 +24,6 @@ import com.google.common.collect.ImmutableList;
 import com.google.common.collect.Multimap;
 import com.google.common.collect.Multimaps;
 import com.google.common.util.concurrent.ThreadFactoryBuilder;
-import com.velocitypowered.api.plugin.PluginContainer;
 import com.velocitypowered.api.plugin.PluginManager;
 import com.velocitypowered.api.scheduler.ScheduledTask;
 import com.velocitypowered.api.scheduler.Scheduler;
@@ -73,6 +72,7 @@ public class VelocityScheduler implements Scheduler {
 
   /**
    * Shuts down the Velocity scheduler.
+   *
    * @return {@code true} if all tasks finished, {@code false} otherwise
    * @throws InterruptedException if the current thread was interrupted
    */
@@ -208,7 +208,7 @@ public class VelocityScheduler implements Scheduler {
           } else {
             String friendlyPluginName = pluginManager.fromInstance(plugin)
                 .map(container -> container.getDescription().getName()
-                      .orElse(container.getDescription().getId()))
+                    .orElse(container.getDescription().getId()))
                 .orElse("UNKNOWN");
             Log.logger.error("Exception in task {} by plugin {}", runnable, friendlyPluginName,
                 e);
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/server/ServerMap.java b/proxy/src/main/java/com/velocitypowered/proxy/server/ServerMap.java
index 00fc2edd..327b1874 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/server/ServerMap.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/server/ServerMap.java
@@ -56,7 +56,7 @@ public class ServerMap {
 
   /**
    * Creates a raw implementation of a {@link RegisteredServer} without
-   *  tying it to the internal server map.
+   * tying it to the internal server map.
    *
    * @param serverInfo the server to create a registered server with
    * @return the {@link RegisteredServer} built from the {@link ServerInfo}
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/server/VelocityRegisteredServer.java b/proxy/src/main/java/com/velocitypowered/proxy/server/VelocityRegisteredServer.java
index af49cf1e..a794e366 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/server/VelocityRegisteredServer.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/server/VelocityRegisteredServer.java
@@ -88,7 +88,8 @@ public class VelocityRegisteredServer implements RegisteredServer, ForwardingAud
   /**
    * Pings the specified server using the specified event {@code loop}, claiming to be
    * {@code version}.
-   * @param loop the event loop to use
+   *
+   * @param loop    the event loop to use
    * @param version the version to report
    * @return the server list ping response
    */
@@ -146,7 +147,7 @@ public class VelocityRegisteredServer implements RegisteredServer, ForwardingAud
    * afterwards.
    *
    * @param identifier the channel ID to use
-   * @param data the data
+   * @param data       the data
    * @return whether or not the message was sent
    */
   public boolean sendPluginMessage(ChannelIdentifier identifier, ByteBuf data) {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/tablist/VelocityTabListLegacy.java b/proxy/src/main/java/com/velocitypowered/proxy/tablist/VelocityTabListLegacy.java
index 7e63e51d..f4fe1c5e 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/tablist/VelocityTabListLegacy.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/tablist/VelocityTabListLegacy.java
@@ -123,8 +123,7 @@ public class VelocityTabListLegacy extends VelocityTabList {
   }
 
   @Override
-  public TabListEntry buildEntry(GameProfile profile, @Nullable Component displayName, int latency,
-      int gameMode) {
+  public TabListEntry buildEntry(GameProfile profile, @Nullable Component displayName, int latency, int gameMode) {
     return new VelocityTabListEntryLegacy(this, profile, displayName, latency, gameMode);
   }
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/AddressUtil.java b/proxy/src/main/java/com/velocitypowered/proxy/util/AddressUtil.java
index 600aee59..24c61a7c 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/AddressUtil.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/AddressUtil.java
@@ -24,6 +24,7 @@ import java.net.InetSocketAddress;
 import java.net.URI;
 
 public final class AddressUtil {
+
   private static final int DEFAULT_MINECRAFT_PORT = 25565;
 
   private AddressUtil() {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/ClosestLocaleMatcher.java b/proxy/src/main/java/com/velocitypowered/proxy/util/ClosestLocaleMatcher.java
index f0381a15..ccaeee68 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/ClosestLocaleMatcher.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/ClosestLocaleMatcher.java
@@ -24,6 +24,7 @@ import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 
 public class ClosestLocaleMatcher {
+
   public static final ClosestLocaleMatcher INSTANCE = new ClosestLocaleMatcher();
 
   private final Map<String, Locale> byLanguage;
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/DurationUtils.java b/proxy/src/main/java/com/velocitypowered/proxy/util/DurationUtils.java
index 2307d686..fe7fca5e 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/DurationUtils.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/DurationUtils.java
@@ -23,6 +23,7 @@ import java.time.Duration;
  * Provides utility functions for working with durations.
  */
 public final class DurationUtils {
+
   private static final long ONE_TICK_IN_MILLISECONDS = 50;
 
   private DurationUtils() {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/EncryptionUtils.java b/proxy/src/main/java/com/velocitypowered/proxy/util/EncryptionUtils.java
index 3c555889..7886bb03 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/EncryptionUtils.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/EncryptionUtils.java
@@ -59,7 +59,7 @@ public enum EncryptionUtils {
    * Decrypts an RSA message.
    *
    * @param keyPair the key pair to use
-   * @param bytes the bytes of the encrypted message
+   * @param bytes   the bytes of the encrypted message
    * @return the decrypted message
    * @throws GeneralSecurityException if the message couldn't be decoded
    */
@@ -73,7 +73,7 @@ public enum EncryptionUtils {
    * Generates the server ID for the hasJoined endpoint.
    *
    * @param sharedSecret the shared secret between the client and the proxy
-   * @param key the RSA public key
+   * @param key          the RSA public key
    * @return the server ID
    */
   public static String generateServerId(byte[] sharedSecret, PublicKey key) {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/FileSystemUtils.java b/proxy/src/main/java/com/velocitypowered/proxy/util/FileSystemUtils.java
index 591308bc..079b5f44 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/FileSystemUtils.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/FileSystemUtils.java
@@ -39,9 +39,9 @@ public class FileSystemUtils {
    * Visits the resources at the given {@link Path} within the resource
    * path of the given {@link Class}.
    *
-   * @param target The target class of the resource path to scan
-   * @param consumer The consumer to visit the resolved path
-   * @param firstPathComponent First path component
+   * @param target                  The target class of the resource path to scan
+   * @param consumer                The consumer to visit the resolved path
+   * @param firstPathComponent      First path component
    * @param remainingPathComponents Remaining path components
    */
   @SuppressFBWarnings({"RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE"})
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/InformationUtils.java b/proxy/src/main/java/com/velocitypowered/proxy/util/InformationUtils.java
index 2199dfa1..ae4049dc 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/InformationUtils.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/InformationUtils.java
@@ -50,8 +50,7 @@ public enum InformationUtils {
    * @return {@link JsonArray} containing zero or more {@link JsonObject}
    */
   public static JsonArray collectPluginInfo(ProxyServer proxy) {
-    List<PluginContainer> allPlugins = ImmutableList.copyOf(
-            proxy.getPluginManager().getPlugins());
+    List<PluginContainer> allPlugins = ImmutableList.copyOf(proxy.getPluginManager().getPlugins());
     JsonArray plugins = new JsonArray();
 
     for (PluginContainer plugin : allPlugins) {
@@ -114,7 +113,7 @@ public enum InformationUtils {
   public static JsonObject collectForcedHosts(ProxyConfig config) {
     JsonObject forcedHosts = new JsonObject();
     Map<String, List<String>> allForcedHosts = ImmutableMap.copyOf(
-            config.getForcedHosts());
+        config.getForcedHosts());
     for (Map.Entry<String, List<String>> entry : allForcedHosts.entrySet()) {
       JsonArray host = new JsonArray();
       for (int i = 0; i < entry.getValue().size(); i++) {
@@ -136,8 +135,8 @@ public enum InformationUtils {
     if (address instanceof Inet4Address) {
       Inet4Address v4 = (Inet4Address) address;
       if (v4.isAnyLocalAddress() || v4.isLoopbackAddress()
-              || v4.isLinkLocalAddress()
-              || v4.isSiteLocalAddress()) {
+          || v4.isLinkLocalAddress()
+          || v4.isSiteLocalAddress()) {
         return address.getHostAddress();
       } else {
         byte[] addr = v4.getAddress();
@@ -146,8 +145,8 @@ public enum InformationUtils {
     } else if (address instanceof Inet6Address) {
       Inet6Address v6 = (Inet6Address) address;
       if (v6.isAnyLocalAddress() || v6.isLoopbackAddress()
-              || v6.isSiteLocalAddress()
-              || v6.isSiteLocalAddress()) {
+          || v6.isSiteLocalAddress()
+          || v6.isSiteLocalAddress()) {
         return address.getHostAddress();
       } else {
         String[] bits = v6.getHostAddress().split(":");
@@ -238,19 +237,17 @@ public enum InformationUtils {
   }
 
   private static JsonElement serializeObject(Object toSerialize, boolean withExcludes) {
-    return JsonParser.parseString(
-            withExcludes ? GSON_WITH_EXCLUDES.toJson(toSerialize) :
-            GSON_WITHOUT_EXCLUDES.toJson(toSerialize));
+    return JsonParser.parseString(withExcludes
+        ? GSON_WITH_EXCLUDES.toJson(toSerialize)
+        : GSON_WITHOUT_EXCLUDES.toJson(toSerialize));
   }
 
   private static final Gson GSON_WITH_EXCLUDES = new GsonBuilder()
-          .setPrettyPrinting()
-          .excludeFieldsWithoutExposeAnnotation()
-          .create();
+      .setPrettyPrinting()
+      .excludeFieldsWithoutExposeAnnotation()
+      .create();
 
   private static final Gson GSON_WITHOUT_EXCLUDES = new GsonBuilder()
-          .setPrettyPrinting()
-          .create();
-
-
+      .setPrettyPrinting()
+      .create();
 }
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/VelocityChannelRegistrar.java b/proxy/src/main/java/com/velocitypowered/proxy/util/VelocityChannelRegistrar.java
index 1ce6e98c..4362233b 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/VelocityChannelRegistrar.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/VelocityChannelRegistrar.java
@@ -107,6 +107,7 @@ public class VelocityChannelRegistrar implements ChannelRegistrar {
 
   /**
    * Returns all the channel names to register depending on the Minecraft protocol version.
+   *
    * @param protocolVersion the protocol version in use
    * @return the list of channels to register
    */
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/bossbar/AdventureBossBarManager.java b/proxy/src/main/java/com/velocitypowered/proxy/util/bossbar/AdventureBossBarManager.java
index 3dc8ea13..230dd249 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/bossbar/AdventureBossBarManager.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/bossbar/AdventureBossBarManager.java
@@ -39,6 +39,7 @@ import org.checkerframework.checker.nullness.qual.Nullable;
  * Manages all boss bars known to the proxy.
  */
 public class AdventureBossBarManager implements BossBar.Listener {
+
   private static final Enum2IntMap<Color> COLORS_TO_PROTOCOL =
       new Enum2IntMap.Builder<>(Color.class)
           .put(Color.PINK, 0)
@@ -49,6 +50,7 @@ public class AdventureBossBarManager implements BossBar.Listener {
           .put(Color.PURPLE, 5)
           .put(Color.WHITE, 6)
           .build();
+
   private static final Enum2IntMap<Overlay> OVERLAY_TO_PROTOCOL =
       new Enum2IntMap.Builder<>(Overlay.class)
           .put(Overlay.PROGRESS, 0)
@@ -57,12 +59,14 @@ public class AdventureBossBarManager implements BossBar.Listener {
           .put(Overlay.NOTCHED_12, 3)
           .put(Overlay.NOTCHED_20, 4)
           .build();
+
   private static final Enum2IntMap<Flag> FLAG_BITS_TO_PROTOCOL =
       new Enum2IntMap.Builder<>(Flag.class)
           .put(Flag.DARKEN_SCREEN, 0x1)
           .put(Flag.PLAY_BOSS_MUSIC, 0x2)
           .put(Flag.CREATE_WORLD_FOG, 0x4)
           .build();
+
   private final Map<BossBar, BossBarHolder> bars;
 
   public AdventureBossBarManager() {
@@ -94,8 +98,9 @@ public class AdventureBossBarManager implements BossBar.Listener {
   /**
    * Adds the specified player to the boss bar's viewers and spawns the boss bar, registering the
    * boss bar if needed.
+   *
    * @param player the intended viewer
-   * @param bar the boss bar to show
+   * @param bar    the boss bar to show
    */
   public void addBossBar(ConnectedPlayer player, BossBar bar) {
     BossBarHolder holder = this.getOrCreateHandler(bar);
@@ -106,8 +111,9 @@ public class AdventureBossBarManager implements BossBar.Listener {
 
   /**
    * Removes the specified player to the boss bar's viewers and despawns the boss bar.
+   *
    * @param player the intended viewer
-   * @param bar the boss bar to hide
+   * @param bar    the boss bar to hide
    */
   public void removeBossBar(ConnectedPlayer player, BossBar bar) {
     BossBarHolder holder = this.getHandler(bar);
@@ -117,16 +123,15 @@ public class AdventureBossBarManager implements BossBar.Listener {
   }
 
   @Override
-  public void bossBarNameChanged(@NonNull BossBar bar, @NonNull Component oldName,
-      @NonNull Component newName) {
+  public void bossBarNameChanged(@NonNull BossBar bar, @NonNull Component oldName, @NonNull Component newName) {
     BossBarHolder holder = this.getHandler(bar);
     if (holder == null) {
       return;
     }
     for (ConnectedPlayer player : holder.subscribers) {
-      Component translated = player.translateMessage(newName);
+      //Component translated = player.translateMessage(newName);
       com.velocitypowered.proxy.protocol.packet.BossBar packet = holder.createTitleUpdate(
-          translated, player.getProtocolVersion());
+          newName/*translated*/, player.getProtocolVersion());
       player.getConnection().write(packet);
     }
   }
@@ -145,8 +150,7 @@ public class AdventureBossBarManager implements BossBar.Listener {
   }
 
   @Override
-  public void bossBarColorChanged(@NonNull BossBar bar, @NonNull Color oldColor,
-      @NonNull Color newColor) {
+  public void bossBarColorChanged(@NonNull BossBar bar, @NonNull Color oldColor, @NonNull Color newColor) {
     BossBarHolder holder = this.getHandler(bar);
     if (holder == null) {
       return;
@@ -158,8 +162,7 @@ public class AdventureBossBarManager implements BossBar.Listener {
   }
 
   @Override
-  public void bossBarOverlayChanged(@NonNull BossBar bar, @NonNull Overlay oldOverlay,
-      @NonNull Overlay newOverlay) {
+  public void bossBarOverlayChanged(@NonNull BossBar bar, @NonNull Overlay oldOverlay, @NonNull Overlay newOverlay) {
     BossBarHolder holder = this.getHandler(bar);
     if (holder == null) {
       return;
@@ -172,8 +175,7 @@ public class AdventureBossBarManager implements BossBar.Listener {
   }
 
   @Override
-  public void bossBarFlagsChanged(@NonNull BossBar bar, @NonNull Set<Flag> added,
-      @NonNull Set<Flag> removed) {
+  public void bossBarFlagsChanged(@NonNull BossBar bar, @NonNull Set<Flag> added, @NonNull Set<Flag> removed) {
     BossBarHolder holder = this.getHandler(bar);
     if (holder == null) {
       return;
@@ -208,8 +210,9 @@ public class AdventureBossBarManager implements BossBar.Listener {
           .proxy.protocol.packet.BossBar();
       packet.setUuid(this.id);
       packet.setAction(com.velocitypowered.proxy.protocol.packet.BossBar.ADD);
+      // ElytraProxy: Removed as unnecessary
       packet.setName(ProtocolUtils.getJsonChatSerializer(player.getProtocolVersion())
-          .serialize(player.translateMessage(bar.name())));
+          .serialize(bar.name()/*player.translateMessage(bar.name())*/));
       packet.setColor(COLORS_TO_PROTOCOL.get(bar.color()));
       packet.setOverlay(OVERLAY_TO_PROTOCOL.get(bar.overlay()));
       packet.setPercent(bar.progress());
@@ -237,8 +240,7 @@ public class AdventureBossBarManager implements BossBar.Listener {
       return packet;
     }
 
-    com.velocitypowered.proxy.protocol.packet.BossBar createTitleUpdate(Component name,
-        ProtocolVersion version) {
+    com.velocitypowered.proxy.protocol.packet.BossBar createTitleUpdate(Component name, ProtocolVersion version) {
       com.velocitypowered.proxy.protocol.packet.BossBar packet = new com.velocitypowered
           .proxy.protocol.packet.BossBar();
       packet.setUuid(this.id);
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/collect/CappedSet.java b/proxy/src/main/java/com/velocitypowered/proxy/util/collect/CappedSet.java
index 8e54d775..f401ab59 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/collect/CappedSet.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/collect/CappedSet.java
@@ -38,8 +38,9 @@ public final class CappedSet<T> extends ForwardingSet<T> {
 
   /**
    * Creates a capped collection backed by a {@link HashSet}.
+   *
    * @param maxSize the maximum size of the collection
-   * @param <T> the type of elements in the collection
+   * @param <T>     the type of elements in the collection
    * @return the new collection
    */
   public static <T> Set<T> create(int maxSize) {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/collect/Enum2IntMap.java b/proxy/src/main/java/com/velocitypowered/proxy/util/collect/Enum2IntMap.java
index 27db5740..56297e0d 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/collect/Enum2IntMap.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/collect/Enum2IntMap.java
@@ -21,9 +21,11 @@ import java.util.EnumSet;
 
 /**
  * An immutable map of {@link Enum} entries to {@code int}s.
+ *
  * @param <E> the enum type
  */
 public final class Enum2IntMap<E extends Enum<E>> {
+
   private final int[] mappings;
 
   private Enum2IntMap(int[] mappings) {
@@ -46,7 +48,8 @@ public final class Enum2IntMap<E extends Enum<E>> {
 
     /**
      * Adds a mapping to the map.
-     * @param key the key to use
+     *
+     * @param key   the key to use
      * @param value the value to associate with the key
      * @return {@code this}, for chaining
      */
@@ -68,6 +71,7 @@ public final class Enum2IntMap<E extends Enum<E>> {
 
     /**
      * Fetches a mapping from the map.
+     *
      * @param key the key to use
      * @return the value in the map
      */
@@ -80,6 +84,7 @@ public final class Enum2IntMap<E extends Enum<E>> {
 
     /**
      * Builds the map.
+     *
      * @return the built map
      */
     public Enum2IntMap<E> build() {
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/concurrent/Once.java b/proxy/src/main/java/com/velocitypowered/proxy/util/concurrent/Once.java
index 20397f29..0e1fa419 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/concurrent/Once.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/concurrent/Once.java
@@ -24,6 +24,7 @@ package com.velocitypowered.proxy.util.concurrent;
  * semantics.
  */
 public final class Once {
+
   private static final int NOT_STARTED = 0;
   private static final int COMPLETED = 1;
 
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/ratelimit/Ratelimiter.java b/proxy/src/main/java/com/velocitypowered/proxy/util/ratelimit/Ratelimiter.java
index 677e0b56..628698bc 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/ratelimit/Ratelimiter.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/ratelimit/Ratelimiter.java
@@ -26,6 +26,7 @@ public interface Ratelimiter {
 
   /**
    * Determines whether or not to allow the connection.
+   *
    * @param address the address to rate limit
    * @return true if allowed, false if not
    */
diff --git a/proxy/src/main/java/com/velocitypowered/proxy/util/ratelimit/Ratelimiters.java b/proxy/src/main/java/com/velocitypowered/proxy/util/ratelimit/Ratelimiters.java
index 94c81d78..0a325cbb 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/util/ratelimit/Ratelimiters.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/util/ratelimit/Ratelimiters.java
@@ -20,6 +20,7 @@ package com.velocitypowered.proxy.util.ratelimit;
 import java.util.concurrent.TimeUnit;
 
 public final class Ratelimiters {
+
   private Ratelimiters() {
     throw new AssertionError();
   }
@@ -27,6 +28,6 @@ public final class Ratelimiters {
   //BotFilter - global rate limiter
   public static Ratelimiter createWithMilliseconds(long ms, int attempts) {
     return (ms <= 0 || attempts <= 0) ? NoopCacheRatelimiter.INSTANCE : new GuavaCacheRatelimiter(
-            ms, attempts,TimeUnit.MILLISECONDS);
+        ms, attempts, TimeUnit.MILLISECONDS);
   }
 }
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/ElytraProxy.java b/proxy/src/main/java/net/elytrium/elytraproxy/ElytraProxy.java
index a2dc13bf..8202baaf 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/ElytraProxy.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/ElytraProxy.java
@@ -35,6 +35,7 @@ import java.net.URLConnection;
 import java.nio.charset.StandardCharsets;
 import lombok.Getter;
 import lombok.ToString;
+import net.elytrium.elytraproxy.botfilter.captcha.CaptchaGeneration;
 import net.elytrium.elytraproxy.botfilter.protocol.cache.netty.MultiplePreparedPacketsEncoder;
 import net.elytrium.elytraproxy.botfilter.protocol.cache.netty.PreparedPacketEncoder;
 import net.elytrium.elytraproxy.botfilter.server.BotFilterSessionHandler;
@@ -56,6 +57,7 @@ import org.apache.logging.log4j.Logger;
 @SuppressFBWarnings({"RV_RETURN_VALUE_IGNORED",
     "OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE"})
 public class ElytraProxy {
+
   private final Logger logger = LogManager.getLogger("ElytraProxy");
   private Database database;
 
@@ -68,16 +70,17 @@ public class ElytraProxy {
   // BotFilter end
 
   public ElytraProxy(VelocityServer velocityServer) {
+    Settings.IMP.reload(new File("ElytraProxy", "config.yml"));
+    statistics = new Statistics();
+    statistics.startUpdating();
     // BotFilter start
     this.velocityServer = velocityServer;
     this.virtualServer = new VirtualServer(this);
     this.virtualServer.reload();
+    CaptchaGeneration.init();
     // BotFilter end
-    Settings.IMP.reload(new File("ElytraProxy", "config.yml"));
     registerCommand(velocityServer);
     //initDatabase(velocityServer);
-    statistics = new Statistics();
-    statistics.startUpdating();
     checkForUpdates();
     logger.info("ElytraProxy was loaded.");
   }
@@ -104,6 +107,7 @@ public class ElytraProxy {
     }
   }
   */
+
   /**
    * Initializes ElytraProxy commands.
    * Инициализирует команды ElytraProxy.
@@ -128,6 +132,10 @@ public class ElytraProxy {
 
   public void setupPipelineAndStartCheck(ConnectedPlayer player, LoginSessionHandler handler) {
     try {
+      if (!player.isOnlineMode() && velocityServer.getConfiguration().isOnlineMode()) {
+        return;
+      }
+
       BotFilterSessionHandler sessionHandler = new BotFilterSessionHandler(player, handler,
           virtualServer);
       bfLogger.info(sessionHandler.getPlayer().getUsername());
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/CaptchaGeneration.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/CaptchaGeneration.java
new file mode 100644
index 00000000..4b89bbad
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/CaptchaGeneration.java
@@ -0,0 +1,157 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.captcha;
+
+import java.awt.Color;
+import java.awt.Font;
+import java.awt.FontFormatException;
+import java.awt.GraphicsEnvironment;
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.concurrent.Executors;
+import java.util.concurrent.ThreadLocalRandom;
+import java.util.concurrent.ThreadPoolExecutor;
+import java.util.concurrent.atomic.AtomicInteger;
+import javax.imageio.ImageIO;
+import lombok.SneakyThrows;
+import lombok.experimental.UtilityClass;
+import net.elytrium.elytraproxy.botfilter.captcha.generator.CaptchaPainter;
+import net.elytrium.elytraproxy.botfilter.captcha.generator.map.CraftMapCanvas;
+import net.elytrium.elytraproxy.botfilter.captcha.generator.map.MapPalette;
+import net.elytrium.elytraproxy.botfilter.protocol.cache.CachedCaptcha;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.MapDataPacket;
+import net.elytrium.elytraproxy.config.Settings;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+
+/**
+ * @author Leymooo
+ * @author hevav
+ */
+@UtilityClass
+public class CaptchaGeneration {
+
+  private final Logger logger = LogManager.getLogger("ElytraProxy");
+  private final CaptchaPainter painter = new CaptchaPainter();
+  private final List<Font> fonts = new ArrayList<>();
+  private final CraftMapCanvas cachedBackgroundMap = new CraftMapCanvas();
+  private final AtomicInteger fontCounter = new AtomicInteger(0);
+  private final AtomicInteger colorCounter = new AtomicInteger(0);
+
+  public void init() {
+    try {
+      if (!Settings.IMP.ANTIBOT.CAPTCHA_GENERATOR.BACKPLATE_PATH.equals("")) {
+        cachedBackgroundMap.drawImage(0, 0,
+            ImageIO.read(new File(Settings.IMP.ANTIBOT.CAPTCHA_GENERATOR.BACKPLATE_PATH)));
+      }
+    } catch (IOException e) {
+      e.printStackTrace();
+    }
+
+    int fontSize = Settings.IMP.ANTIBOT.CAPTCHA_GENERATOR.FONT_SIZE;
+
+    fonts.clear();
+    if (Settings.IMP.ANTIBOT.CAPTCHA_GENERATOR.USE_STANDARD_FONTS) {
+      fonts.add(new Font(Font.SANS_SERIF, Font.PLAIN, fontSize));
+      fonts.add(new Font(Font.SERIF, Font.PLAIN, fontSize));
+      fonts.add(new Font(Font.MONOSPACED, Font.BOLD, fontSize));
+    }
+
+    GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
+
+    if (Settings.IMP.ANTIBOT.CAPTCHA_GENERATOR.FONTS_PATH != null) {
+      Settings.IMP.ANTIBOT.CAPTCHA_GENERATOR.FONTS_PATH.forEach(fontFile -> {
+        try {
+          if (!fontFile.equals("")) {
+            logger.info("Loading font " + fontFile);
+            Font font = Font.createFont(Font.TRUETYPE_FONT, new File(fontFile));
+            ge.registerFont(font);
+            fonts.add(font.deriveFont(Font.PLAIN).deriveFont((float) fontSize));
+          }
+        } catch (FontFormatException | IOException e) {
+          e.printStackTrace();
+        }
+      });
+    }
+
+    new Thread(CaptchaGeneration::generateImages).start();
+  }
+
+  @SneakyThrows
+  @SuppressWarnings("StatementWithEmptyBody")
+  public void generateImages() {
+    ThreadPoolExecutor ex =
+        (ThreadPoolExecutor) Executors.newFixedThreadPool(
+            Runtime.getRuntime().availableProcessors());
+    for (int i = 100; i <= 999; i++) {
+      ex.execute(CaptchaGeneration::genNewPacket);
+    }
+
+    long start = System.currentTimeMillis();
+    while (ex.getActiveCount() != 0) {
+      // Busy wait
+    }
+
+    logger.info("Captcha generated in " + (System.currentTimeMillis() - start) + " ms.");
+    ex.shutdownNow();
+    System.gc();
+  }
+
+  public void genNewPacket() {
+    String answer = randomAnswer();
+    final CraftMapCanvas map = new CraftMapCanvas(cachedBackgroundMap.getCanvas());
+    int fontNumber = fontCounter.getAndIncrement();
+    if (fontNumber >= fonts.size()) {
+      fontNumber = 0;
+      fontCounter.set(0);
+    }
+    BufferedImage image =
+        painter.draw(fonts.get(fontNumber), randomNotWhiteColor(), answer);
+    map.drawImage(0, 0, image);
+    MapDataPacket packet = new MapDataPacket(0, (byte) 0, map.getMapData());
+    CachedCaptcha.createCaptchaPacket(packet, answer);
+  }
+
+  private Color randomNotWhiteColor() {
+    MapPalette.Color[] colors = MapPalette.getColors();
+
+    int index = colorCounter.getAndIncrement();
+    if (index >= colors.length) {
+      index = 0;
+      colorCounter.set(0);
+    }
+
+    return colors[index].toJava();
+  }
+
+  private String randomAnswer() {
+    int length = Settings.IMP.ANTIBOT.CAPTCHA_GENERATOR.LENGTH;
+    String pattern = Settings.IMP.ANTIBOT.CAPTCHA_GENERATOR.PATTERN;
+
+    char[] text = new char[length];
+    for (int i = 0; i < length; i++) {
+      text[i] = pattern.charAt(ThreadLocalRandom.current().nextInt(pattern.length()));
+    }
+    return new String(text);
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/generator/CaptchaPainter.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/generator/CaptchaPainter.java
new file mode 100644
index 00000000..3b37bc7a
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/generator/CaptchaPainter.java
@@ -0,0 +1,220 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.captcha.generator;
+
+import java.awt.Color;
+import java.awt.Font;
+import java.awt.Graphics;
+import java.awt.Graphics2D;
+import java.awt.Rectangle;
+import java.awt.RenderingHints;
+import java.awt.font.GlyphVector;
+import java.awt.geom.AffineTransform;
+import java.awt.geom.Point2D;
+import java.awt.geom.Rectangle2D;
+import java.awt.image.BufferedImage;
+import java.awt.image.ConvolveOp;
+import java.awt.image.Kernel;
+import java.util.Random;
+import net.elytrium.elytraproxy.config.Settings;
+
+public class CaptchaPainter {
+
+  private static final int width = 128;
+  private static final int height = 128;
+  private final Color background = Color.WHITE;
+  private final Random rnd = new Random();
+
+  public BufferedImage draw(Font font, Color fGround, String text) {
+    if (font == null) {
+      throw new IllegalArgumentException("Font can not be null.");
+    }
+    if (fGround == null) {
+      throw new IllegalArgumentException("Foreground color can not be null.");
+    }
+    if (text == null || text.length() < 1) {
+      throw new IllegalArgumentException("No text given.");
+    }
+
+    BufferedImage img = createImage();
+
+    final Graphics g = img.getGraphics();
+    try {
+      final Graphics2D g2 = configureGraphics(g, font, fGround);
+      draw(g2, text);
+    } finally {
+      g.dispose();
+    }
+
+    img = postProcess(img);
+
+    return img;
+  }
+
+  protected void draw(Graphics2D g, String text) {
+    final GlyphVector vector = g.getFont().createGlyphVector(g.getFontRenderContext(), text);
+
+    transform(g, text, vector);
+
+    final Rectangle bounds = vector.getPixelBounds(null, 0, height);
+    final float bw = (float) bounds.getWidth();
+    final float bh = (float) bounds.getHeight();
+
+    final boolean outlineEnabled = Settings.IMP.ANTIBOT.CAPTCHA_GENERATOR.FONT_OUTLINE;
+
+    final float wr = width / bw
+        * (rnd.nextFloat() / 20 + (outlineEnabled ? 0.89f : 0.92f))
+        * 1;
+    final float hr = height / bh
+        * (rnd.nextFloat() / 20 + (outlineEnabled ? 0.68f : 0.75f))
+        * 1;
+    g.translate((width - bw * wr) / 2, (height - bh * hr) / 2);
+    g.scale(wr, hr);
+
+    final float bx = (float) bounds.getX();
+    final float by = (float) bounds.getY();
+    if (outlineEnabled) {
+      g.draw(vector.getOutline(Math.signum(rnd.nextFloat() - 0.5f) * 1
+          * width / 200 - bx, Math.signum(rnd.nextFloat() - 0.5f) * 1
+          * height / 70 + height - by));
+    }
+    g.drawGlyphVector(vector, -bx, height - by);
+  }
+
+  protected BufferedImage createImage() {
+    return new BufferedImage(width, height, BufferedImage.TYPE_3BYTE_BGR);
+  }
+
+  protected Graphics2D configureGraphics(Graphics g, Font font, Color fGround) {
+    if (!(g instanceof Graphics2D)) {
+      throw new IllegalStateException("Graphics (" + g
+          + ") that is not an instance of Graphics2D.");
+    }
+    final Graphics2D g2 = (Graphics2D) g;
+
+    configureGraphicsQuality(g2);
+
+    g2.setColor(fGround);
+    g2.setBackground(background);
+    g2.setFont(font);
+
+    g2.clearRect(0, 0, width, height);
+
+    return g2;
+  }
+
+  protected void configureGraphicsQuality(Graphics2D g2) {
+    g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,
+        RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
+    g2.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS,
+        RenderingHints.VALUE_FRACTIONALMETRICS_ON);
+    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
+        RenderingHints.VALUE_ANTIALIAS_ON);
+    g2.setRenderingHint(RenderingHints.KEY_COLOR_RENDERING,
+        RenderingHints.VALUE_COLOR_RENDER_QUALITY);
+    g2.setRenderingHint(RenderingHints.KEY_DITHERING,
+        RenderingHints.VALUE_DITHER_ENABLE);
+    g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
+        RenderingHints.VALUE_INTERPOLATION_BICUBIC);
+    g2.setRenderingHint(RenderingHints.KEY_ALPHA_INTERPOLATION,
+        RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY);
+    g2.setRenderingHint(RenderingHints.KEY_RENDERING,
+        RenderingHints.VALUE_RENDER_QUALITY);
+
+  }
+
+  protected void transform(Graphics2D g, String text, GlyphVector v) {
+    final int glyphNum = v.getNumGlyphs();
+
+    Point2D prePos = null;
+    Rectangle2D preBounds = null;
+
+    double rotateCur = (rnd.nextDouble() - 0.5) * Math.PI / 8;
+    double rotateStep = Math.signum(rotateCur)
+        * (rnd.nextDouble() * 3 * Math.PI / 8 / glyphNum);
+    final boolean rotateEnabled = Settings.IMP.ANTIBOT.CAPTCHA_GENERATOR.FONT_ROTATE;
+
+    for (int fi = 0; fi < glyphNum; fi++) {
+      if (rotateEnabled) {
+        final AffineTransform tr = AffineTransform
+            .getRotateInstance(rotateCur);
+        if (rnd.nextDouble() < 0.25) {
+          rotateStep *= -1;
+        }
+        rotateCur += rotateStep;
+        v.setGlyphTransform(fi, tr);
+      }
+      final Point2D pos = v.getGlyphPosition(fi);
+      final Rectangle2D bounds = v.getGlyphVisualBounds(fi).getBounds2D();
+      Point2D newPos;
+      if (prePos == null) {
+        newPos = new Point2D.Double(pos.getX() - bounds.getX(),
+            pos.getY());
+      } else {
+        newPos = new Point2D.Double(
+            preBounds.getMaxX()
+                + pos.getX()
+                - bounds.getX()
+                - Math.min(preBounds.getWidth(),
+                bounds.getWidth())
+                * (rnd.nextDouble() / 20 + (rotateEnabled ? 0.27
+                : 0.1)), pos.getY());
+      }
+      v.setGlyphPosition(fi, newPos);
+      prePos = newPos;
+      preBounds = v.getGlyphVisualBounds(fi).getBounds2D();
+    }
+  }
+
+  protected BufferedImage postProcess(BufferedImage img) {
+    if (Settings.IMP.ANTIBOT.CAPTCHA_GENERATOR.FONT_RIPPLE) {
+      final Rippler.AxisConfig vertical = new Rippler.AxisConfig(
+          rnd.nextDouble() * 2 * Math.PI, (1 + rnd.nextDouble() * 2)
+          * Math.PI, img.getHeight() / 10.0);
+      final Rippler.AxisConfig horizontal = new Rippler.AxisConfig(
+          rnd.nextDouble() * 2 * Math.PI, (2 + rnd.nextDouble() * 2)
+          * Math.PI, img.getWidth() / 100.0);
+      final Rippler op = new Rippler(vertical, horizontal);
+
+      img = op.filter(img, createImage());
+    }
+
+    if (Settings.IMP.ANTIBOT.CAPTCHA_GENERATOR.FONT_BLUR) {
+      final float[] blurArray = new float[9];
+      fillBlurArray(blurArray);
+      final ConvolveOp op = new ConvolveOp(new Kernel(3, 3, blurArray),
+          ConvolveOp.EDGE_NO_OP, null);
+
+      img = op.filter(img, createImage());
+    }
+    return img;
+  }
+
+  protected void fillBlurArray(float[] array) {
+    float sum = 0;
+    for (int fi = 0; fi < array.length; fi++) {
+      array[fi] = rnd.nextFloat();
+      sum += array[fi];
+    }
+    for (int fi = 0; fi < array.length; fi++) {
+      array[fi] /= sum;
+    }
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/generator/Rippler.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/generator/Rippler.java
new file mode 100644
index 00000000..2f14b2ff
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/generator/Rippler.java
@@ -0,0 +1,175 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.captcha.generator;
+
+import java.awt.image.BufferedImage;
+
+/**
+ * A filter to generate ripple (wave) effected images. Uses a transformed sinus
+ * wave for this. This class is thread safe.
+ *
+ * @author akiraly
+ */
+public class Rippler {
+
+  /**
+   * Class to respresent wave tranforming information for an axis.
+   */
+  public static class AxisConfig {
+
+    private final double start;
+
+    private final double length;
+
+    private final double amplitude;
+
+    /**
+     * Constructor.
+     *
+     * @param start     the starting x offset to generate wave values. Should be
+     *                  between 0 and 2 * {@link Math#PI}.
+     * @param length    the length of x to be used to generate wave values.
+     *                  Should be between 0 and 4 * {@link Math#PI}.
+     * @param amplitude the maximum y value, if it is too big, some
+     *                  important parts of the image (like the text) can "wave" out on the
+     *                  top or on the bottom of the image.
+     */
+    public AxisConfig(double start, double length, double amplitude) {
+      this.start = normalize(start, 2);
+      this.length = normalize(length, 4);
+      this.amplitude = amplitude;
+    }
+
+    /**
+     * Normalizes parameter to fall into [0, multi * {@link Math#PI}].
+     *
+     * @param a     to be normalized
+     * @param multi multiplicator used for end value
+     * @return normalized value
+     */
+    protected double normalize(double a, int multi) {
+      final double piMulti = multi * Math.PI;
+
+      a = Math.abs(a);
+      final double d = Math.floor(a / piMulti);
+
+      return a - d * piMulti;
+    }
+
+    /**
+     * @return wave part start value
+     */
+    public double getStart() {
+      return start;
+    }
+
+    /**
+     * @return wave part length
+     */
+    public double getLength() {
+      return length;
+    }
+
+    /**
+     * @return amplitude used to transform the wave part
+     */
+    public double getAmplitude() {
+      return amplitude;
+    }
+  }
+
+  private final AxisConfig vertical;
+
+  private final AxisConfig horizontal;
+
+  /**
+   * Constructor.
+   *
+   * @param vertical   config to calculate waving deltas from x axis (so to
+   *                   modify y values), not null
+   * @param horizontal config to calculate waving deltas from y axis (so to
+   *                   modify x values), not null
+   */
+  public Rippler(AxisConfig vertical, AxisConfig horizontal) {
+    this.vertical = vertical;
+    this.horizontal = horizontal;
+  }
+
+  /**
+   * Draws a rippled (waved) variant of source into destination.
+   *
+   * @param src  to be transformed, not null
+   * @param dest to hold the result, not null
+   * @return dest is returned
+   */
+  public BufferedImage filter(BufferedImage src, BufferedImage dest) {
+    final int width = src.getWidth();
+    final int height = src.getHeight();
+
+    final int[] verticalDelta = calcDeltaArray(vertical, width);
+
+    final int[] horizontalDelta = calcDeltaArray(horizontal, height);
+
+    for (int x = 0; x < width; x++) {
+      for (int y = 0; y < height; y++) {
+        final int ny = (y + verticalDelta[x] + height) % height;
+        final int nx = (x + horizontalDelta[ny] + width) % width;
+        dest.setRGB(nx, ny, src.getRGB(x, y));
+      }
+    }
+
+    return dest;
+  }
+
+  /**
+   * Calculates wave delta array.
+   *
+   * @param axisConfig config object to transform the wave, not null
+   * @param num        number of points needed, positive
+   * @return the calculated num length delta array
+   */
+  protected int[] calcDeltaArray(AxisConfig axisConfig, int num) {
+    final int[] delta = new int[num];
+
+    final double start = axisConfig.getStart();
+    final double period = axisConfig.getLength() / num;
+    final double amplitude = axisConfig.getAmplitude();
+
+    for (int fi = 0; fi < num; fi++) {
+      delta[fi] = (int) Math.round(amplitude * Math.sin(start + fi * period));
+    }
+
+    return delta;
+  }
+
+  /**
+   * @return vertical config, not null
+   */
+  public AxisConfig getVertical() {
+    return vertical;
+  }
+
+  /**
+   * @return horizontal config, not null
+   */
+  public AxisConfig getHorizontal() {
+    return horizontal;
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/generator/map/CraftMapCanvas.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/generator/map/CraftMapCanvas.java
new file mode 100644
index 00000000..d8c43a69
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/generator/map/CraftMapCanvas.java
@@ -0,0 +1,68 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.captcha.generator.map;
+
+import java.awt.image.BufferedImage;
+import java.util.Arrays;
+import lombok.Getter;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.MapDataPacket;
+
+@Getter
+public class CraftMapCanvas {
+
+  private final byte[] canvas;
+  private static final int MAP_SIZE = 16384; //128x128
+
+  public CraftMapCanvas() {
+    this.canvas = new byte[MAP_SIZE];
+    Arrays.fill(this.canvas, MapPalette.WHITE);
+  }
+
+  public CraftMapCanvas(byte[] canvas) {
+    final byte[] canvasBuf = new byte[MAP_SIZE];
+    System.arraycopy(canvas, 0, canvasBuf, 0, MAP_SIZE);
+    this.canvas = canvasBuf;
+  }
+
+  public void setPixel(int x, int y, byte color) {
+    if (x >= 0 && y >= 0 && x < 128 && y < 128) {
+      this.canvas[y * 128 + x] = color;
+    }
+  }
+
+  public void drawImage(int x, int y, BufferedImage image) {
+    int[] bytes = MapPalette.imageToBytes(image);
+    int width = image.getWidth(null);
+    int height = image.getHeight(null);
+
+    for (int x2 = 0; x2 < width; ++x2) {
+      for (int y2 = 0; y2 < height; ++y2) {
+        byte color = (byte) bytes[y2 * width + x2];
+        if (color != MapPalette.WHITE) {
+          this.setPixel(x + x2, y + y2, color);
+        }
+      }
+    }
+  }
+
+  public MapDataPacket.MapData getMapData() {
+    return new MapDataPacket.MapData(128, 128, 0, 0, this.canvas);
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/generator/map/MapPalette.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/generator/map/MapPalette.java
new file mode 100644
index 00000000..8190a5d4
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/captcha/generator/map/MapPalette.java
@@ -0,0 +1,183 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.captcha.generator.map;
+
+import java.awt.image.BufferedImage;
+import java.util.HashMap;
+import java.util.Map;
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+
+public final class MapPalette {
+
+  @Getter
+  private static final Color[] colors = new Color[] {
+      c(0, 0, 0), c(0, 0, 0), c(0, 0, 0), c(0, 0, 0),
+      c(89, 125, 39), c(109, 153, 48), c(127, 178, 56), c(67, 94, 29),
+      c(174, 164, 115), c(213, 201, 140), c(247, 233, 163), c(130, 123, 86),
+      c(140, 140, 140), c(171, 171, 171), c(199, 199, 199), c(105, 105, 105),
+      c(180, 0, 0), c(220, 0, 0), c(255, 0, 0), c(135, 0, 0),
+      c(112, 112, 180), c(138, 138, 220), c(160, 160, 255), c(84, 84, 135),
+      c(117, 117, 117), c(144, 144, 144), c(167, 167, 167), c(88, 88, 88),
+      c(0, 87, 0), c(0, 106, 0), c(0, 124, 0), c(0, 65, 0),
+      c(180, 180, 180), c(220, 220, 220), c(255, 255, 255), c(135, 135, 135),
+      c(115, 118, 129), c(141, 144, 158), c(164, 168, 184), c(86, 88, 97),
+      c(106, 76, 54), c(130, 94, 66), c(151, 109, 77), c(79, 57, 40),
+      c(79, 79, 79), c(96, 96, 96), c(112, 112, 112), c(59, 59, 59),
+      c(45, 45, 180), c(55, 55, 220), c(64, 64, 255), c(33, 33, 135),
+      c(100, 84, 50), c(123, 102, 62), c(143, 119, 72), c(75, 63, 38),
+      c(180, 177, 172), c(220, 217, 211), c(255, 252, 245), c(135, 133, 129),
+      c(152, 89, 36), c(186, 109, 44), c(216, 127, 51), c(114, 67, 27),
+      c(125, 53, 152), c(153, 65, 186), c(178, 76, 216), c(94, 40, 114),
+      c(72, 108, 152), c(88, 132, 186), c(102, 153, 216), c(54, 81, 114),
+      c(161, 161, 36), c(197, 197, 44), c(229, 229, 51), c(121, 121, 27),
+      c(89, 144, 17), c(109, 176, 21), c(127, 204, 25), c(67, 108, 13),
+      c(170, 89, 116), c(208, 109, 142), c(242, 127, 165), c(128, 67, 87),
+      c(53, 53, 53), c(65, 65, 65), c(76, 76, 76), c(40, 40, 40),
+      c(108, 108, 108), c(132, 132, 132), c(153, 153, 153), c(81, 81, 81),
+      c(53, 89, 108), c(65, 109, 132), c(76, 127, 153), c(40, 67, 81),
+      c(89, 44, 125), c(109, 54, 153), c(127, 63, 178), c(67, 33, 94),
+      c(36, 53, 125), c(44, 65, 153), c(51, 76, 178), c(27, 40, 94),
+      c(72, 53, 36), c(88, 65, 44), c(102, 76, 51), c(54, 40, 27),
+      c(72, 89, 36), c(88, 109, 44), c(102, 127, 51), c(54, 67, 27),
+      c(108, 36, 36), c(132, 44, 44), c(153, 51, 51), c(81, 27, 27),
+      c(17, 17, 17), c(21, 21, 21), c(25, 25, 25), c(13, 13, 13),
+      c(176, 168, 54), c(215, 205, 66), c(250, 238, 77), c(132, 126, 40),
+      c(64, 154, 150), c(79, 188, 183), c(92, 219, 213), c(48, 115, 112),
+      c(52, 90, 180), c(63, 110, 220), c(74, 128, 255), c(39, 67, 135),
+      c(0, 153, 40), c(0, 187, 50), c(0, 217, 58), c(0, 114, 30),
+      c(91, 60, 34), c(111, 74, 42), c(129, 86, 49), c(68, 45, 25),
+      c(79, 1, 0), c(96, 1, 0), c(112, 2, 0), c(59, 1, 0),
+  };
+
+  public static final byte WHITE = 34;
+
+  private static final Map<Color, Byte> colorToIndexMap = new HashMap<>();
+
+  private static Color c(int r, int g, int b) {
+    return new Color(r, g, b);
+  }
+
+  private static double getDistance(Color c1, Color c2) {
+    double rmean = (double) (c1.getRed() + c2.getRed()) / 2.0D;
+    double r = c1.getRed() - c2.getRed();
+    double g = c1.getGreen() - c2.getGreen();
+    int b = c1.getBlue() - c2.getBlue();
+    double weightR = 2.0D + rmean / 256.0D;
+    double weightG = 4.0D;
+    double weightB = 2.0D + (255.0D - rmean) / 256.0D;
+
+    return weightR * r * r + weightG * g * g + weightB * (double) b * (double) b;
+  }
+
+  /**
+   * Convert an Image to a byte[] using the palette.
+   *
+   * @param image The image to convert.
+   * @return A byte[] containing the pixels of the image.
+   */
+  public static int[] imageToBytes(final BufferedImage image) {
+    int[] result = image.getRGB(0, 0, image.getWidth(), image.getHeight(),
+        null, 0, image.getWidth());
+    for (int i = 0; i < result.length; ++i) {
+      result[i] = tryFastMatchColor(result[i]);
+    }
+    return result;
+  }
+
+  public static byte tryFastMatchColor(int rgb) {
+    if (getAlpha(rgb) < 128) {
+      return WHITE;
+    }
+
+    Color color = simplifyRGB(rgb);
+    Byte colorId = colorToIndexMap.get(color);
+    if (colorId != null) {
+      return colorId;
+    } else {
+      return matchColor(color);
+    }
+  }
+
+  /**
+   * Get the index of the closest matching color in the palette to the given
+   * color.
+   *
+   * @param color The Color to match.
+   * @return The index in the palette.
+   */
+  public static byte matchColor(Color color) {
+    int index = 0;
+    double best = -1.0D;
+
+    for (int i = 4; i < colors.length; ++i) {
+      double distance = getDistance(color, colors[i]);
+
+      if (distance < best || best == -1.0D) {
+        best = distance;
+        index = i;
+      }
+    }
+
+    byte matched = (byte) (index < 128 ? index : -129 + (index - 127));
+    colorToIndexMap.put(color, matched);
+
+    return matched;
+  }
+
+  private static Color simplifyRGB(int rgb) {
+    int r = ((rgb & 0xff0000) >>> 16) / 5 * 5;
+    int g = ((rgb & 0xff00) >>> 8) / 5 * 5;
+    int b = (rgb & 0xff) / 5 * 5;
+
+    return new Color(r, g, b);
+  }
+
+  private static int getAlpha(int rgb) {
+    return (rgb & 0xff000000) >>> 24;
+  }
+
+  @AllArgsConstructor
+  @Getter
+  public static class Color {
+    private final int red;
+    private final int green;
+    private final int blue;
+
+    @Override
+    public int hashCode() {
+      return (red << 16) | (green << 8) | (blue);
+    }
+
+    @Override
+    public boolean equals(Object otherColor) {
+      if (otherColor instanceof Color) {
+        Color checkColor = (Color) otherColor;
+        return checkColor.red == red && checkColor.blue == blue && checkColor.green == green;
+      } else {
+        return false;
+      }
+    }
+
+    public java.awt.Color toJava() {
+      return new java.awt.Color(red, green, blue);
+    }
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/BotFilterProtocol.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/BotFilterProtocol.java
index 24d2a5ad..ec03880a 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/BotFilterProtocol.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/BotFilterProtocol.java
@@ -19,37 +19,37 @@
 
 package net.elytrium.elytraproxy.botfilter.protocol;
 
-import static com.velocitypowered.api.network.ProtocolVersion.MINECRAFT_1_13;
-import static com.velocitypowered.api.network.ProtocolVersion.MINECRAFT_1_14;
-import static com.velocitypowered.api.network.ProtocolVersion.MINECRAFT_1_15;
-import static com.velocitypowered.api.network.ProtocolVersion.MINECRAFT_1_16;
-import static com.velocitypowered.api.network.ProtocolVersion.MINECRAFT_1_16_2;
-import static com.velocitypowered.api.network.ProtocolVersion.MINECRAFT_1_17;
-import static com.velocitypowered.api.network.ProtocolVersion.MINECRAFT_1_7_2;
-import static com.velocitypowered.api.network.ProtocolVersion.MINECRAFT_1_9;
 import static com.velocitypowered.proxy.protocol.StateRegistry.map;
 
 import com.velocitypowered.api.network.ProtocolVersion;
 import com.velocitypowered.proxy.protocol.StateRegistry;
+import com.velocitypowered.proxy.protocol.packet.Chat;
 import net.elytrium.elytraproxy.botfilter.protocol.packet.JoinGame;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.MapDataPacket;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.Player;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.PlayerAbilities;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.PlayerPosition;
 import net.elytrium.elytraproxy.botfilter.protocol.packet.PlayerPositionAndLook;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.SetExp;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.SetSlot;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.TeleportConfirm;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.UpdateViewPosition;
 import net.elytrium.elytraproxy.botfilter.protocol.packet.world.ChunkData;
 import net.elytrium.elytraproxy.botfilter.protocol.packet.world.UpdateLight;
-import net.elytrium.elytraproxy.botfilter.protocol.packet.UpdateViewPosition;
 
 public class BotFilterProtocol {
 
   public static void init() {
     StateRegistry.BotFilter.clientbound.register(
         JoinGame.class, JoinGame::new,
-        map(0x01, MINECRAFT_1_7_2, false),
-        map(0x23, MINECRAFT_1_9, false),
-        map(0x25, MINECRAFT_1_13, false),
-        map(0x25, MINECRAFT_1_14, false),
-        map(0x26, MINECRAFT_1_15, false),
-        map(0x25, MINECRAFT_1_16, false),
-        map(0x24, MINECRAFT_1_16_2, false),
-        map(0x26, MINECRAFT_1_17, false)
+        map(0x01, ProtocolVersion.MINECRAFT_1_7_2, false),
+        map(0x23, ProtocolVersion.MINECRAFT_1_9, false),
+        map(0x25, ProtocolVersion.MINECRAFT_1_13, false),
+        map(0x25, ProtocolVersion.MINECRAFT_1_14, false),
+        map(0x26, ProtocolVersion.MINECRAFT_1_15, false),
+        map(0x25, ProtocolVersion.MINECRAFT_1_16, false),
+        map(0x24, ProtocolVersion.MINECRAFT_1_16_2, false),
+        map(0x26, ProtocolVersion.MINECRAFT_1_17, false)
     );
     StateRegistry.BotFilter.clientbound.register(
         PlayerPositionAndLook.class, PlayerPositionAndLook::new,
@@ -61,8 +61,8 @@ public class BotFilterProtocol {
         map(0x36, ProtocolVersion.MINECRAFT_1_15, true),
         map(0x35, ProtocolVersion.MINECRAFT_1_16, true),
         map(0x34, ProtocolVersion.MINECRAFT_1_16_2, true),
-        map(0x38, ProtocolVersion.MINECRAFT_1_17, true));
-
+        map(0x38, ProtocolVersion.MINECRAFT_1_17, true)
+    );
     StateRegistry.BotFilter.clientbound.register(
         ChunkData.class, ChunkData::new,
         map(0x21, ProtocolVersion.MINECRAFT_1_7_2, true),
@@ -73,19 +73,117 @@ public class BotFilterProtocol {
         map(0x22, ProtocolVersion.MINECRAFT_1_15, true),
         map(0x21, ProtocolVersion.MINECRAFT_1_16, true),
         map(0x20, ProtocolVersion.MINECRAFT_1_16_2, true),
-        map(0x22, ProtocolVersion.MINECRAFT_1_17, true));
-
+        map(0x22, ProtocolVersion.MINECRAFT_1_17, true)
+    );
+    StateRegistry.BotFilter.clientbound.register(
+        SetSlot.class, SetSlot::new,
+        map(0x2F, ProtocolVersion.MINECRAFT_1_7_2, true),
+        map(0x2F, ProtocolVersion.MINECRAFT_1_8, true),
+        map(0x16, ProtocolVersion.MINECRAFT_1_9, true),
+        map(0x17, ProtocolVersion.MINECRAFT_1_13, true),
+        map(0x16, ProtocolVersion.MINECRAFT_1_14, true),
+        map(0x17, ProtocolVersion.MINECRAFT_1_15, true),
+        map(0x16, ProtocolVersion.MINECRAFT_1_16, true),
+        map(0x15, ProtocolVersion.MINECRAFT_1_16_2, true),
+        map(0x16, ProtocolVersion.MINECRAFT_1_17, true)
+    );
     StateRegistry.BotFilter.clientbound.register(
         UpdateLight.class, UpdateLight::new,
         map(0x24, ProtocolVersion.MINECRAFT_1_14, true),
         map(0x25, ProtocolVersion.MINECRAFT_1_15, true),
         map(0x24, ProtocolVersion.MINECRAFT_1_16, true),
         map(0x23, ProtocolVersion.MINECRAFT_1_16_2, true),
-        map(0x25, ProtocolVersion.MINECRAFT_1_17, true));
-
+        map(0x25, ProtocolVersion.MINECRAFT_1_17, true)
+    );
+    StateRegistry.BotFilter.clientbound.register(
+        MapDataPacket.class, MapDataPacket::new,
+        map(0x34, ProtocolVersion.MINECRAFT_1_7_2, true), //TODO: True 1.7 value
+        map(0x34, ProtocolVersion.MINECRAFT_1_8, true),
+        map(0x24, ProtocolVersion.MINECRAFT_1_9, true),
+        map(0x26, ProtocolVersion.MINECRAFT_1_13, true),
+        map(0x26, ProtocolVersion.MINECRAFT_1_14, true),
+        map(0x27, ProtocolVersion.MINECRAFT_1_15, true),
+        map(0x26, ProtocolVersion.MINECRAFT_1_16, true),
+        map(0x25, ProtocolVersion.MINECRAFT_1_16_2, true),
+        map(0x27, ProtocolVersion.MINECRAFT_1_17, true)
+    );
     StateRegistry.BotFilter.clientbound.register(
         UpdateViewPosition.class, UpdateViewPosition::new,
-        map(0x49, ProtocolVersion.MINECRAFT_1_17, true));
-
+        map(0x49, ProtocolVersion.MINECRAFT_1_17, true)
+    );
+    StateRegistry.BotFilter.clientbound.register(
+        PlayerAbilities.class, PlayerAbilities::new,
+        map(0x39, ProtocolVersion.MINECRAFT_1_7_2, false), //TODO: True 1.7 value
+        map(0x39, ProtocolVersion.MINECRAFT_1_8, false),
+        map(0x2B, ProtocolVersion.MINECRAFT_1_9, false),
+        map(0x2C, ProtocolVersion.MINECRAFT_1_12_1, false),
+        map(0x2E, ProtocolVersion.MINECRAFT_1_13, false),
+        map(0x31, ProtocolVersion.MINECRAFT_1_14, false),
+        map(0x32, ProtocolVersion.MINECRAFT_1_15, false),
+        map(0x31, ProtocolVersion.MINECRAFT_1_16, false),
+        map(0x30, ProtocolVersion.MINECRAFT_1_16_2, false),
+        map(0x32, ProtocolVersion.MINECRAFT_1_17, false)
+    );
+    StateRegistry.BotFilter.clientbound.register(
+        SetExp.class, SetExp::new,
+        map(0x2B, ProtocolVersion.MINECRAFT_1_7_2, false),
+        map(0x1F, ProtocolVersion.MINECRAFT_1_8, false),
+        map(0x3D, ProtocolVersion.MINECRAFT_1_9, false),
+        map(0x3F, ProtocolVersion.MINECRAFT_1_12, false),
+        map(0x40, ProtocolVersion.MINECRAFT_1_12_1, false),
+        map(0x43, ProtocolVersion.MINECRAFT_1_13, false),
+        map(0x47, ProtocolVersion.MINECRAFT_1_14, false),
+        map(0x48, ProtocolVersion.MINECRAFT_1_15, false),
+        map(0x51, ProtocolVersion.MINECRAFT_1_17, false)
+    );
+    StateRegistry.BotFilter.serverbound.register(
+        TeleportConfirm.class, TeleportConfirm::new,
+        map(0x00, ProtocolVersion.MINECRAFT_1_9, true)
+    );
+    StateRegistry.BotFilter.serverbound.register(
+        PlayerPositionAndLook.class, PlayerPositionAndLook::new,
+        map(0x06, ProtocolVersion.MINECRAFT_1_7_2, false), //TODO: True 1.7 value
+        map(0x06, ProtocolVersion.MINECRAFT_1_8, false),
+        map(0x0D, ProtocolVersion.MINECRAFT_1_9, false),
+        map(0x0F, ProtocolVersion.MINECRAFT_1_12, false),
+        map(0x0E, ProtocolVersion.MINECRAFT_1_12_1, false),
+        map(0x11, ProtocolVersion.MINECRAFT_1_13, false),
+        map(0x12, ProtocolVersion.MINECRAFT_1_14, false),
+        map(0x13, ProtocolVersion.MINECRAFT_1_16, false),
+        map(0x12, ProtocolVersion.MINECRAFT_1_17, false)
+    );
+    StateRegistry.BotFilter.serverbound.register(
+        PlayerPosition.class, PlayerPosition::new,
+        map(0x0B, ProtocolVersion.MINECRAFT_1_7_2, false), //TODO: True 1.7 value
+        map(0x04, ProtocolVersion.MINECRAFT_1_7_6, false), //TODO: True 1.7 value
+        map(0x04, ProtocolVersion.MINECRAFT_1_8, false),
+        map(0x0C, ProtocolVersion.MINECRAFT_1_9, false),
+        map(0x0E, ProtocolVersion.MINECRAFT_1_12, false),
+        map(0x0D, ProtocolVersion.MINECRAFT_1_12_1, false),
+        map(0x10, ProtocolVersion.MINECRAFT_1_13, false),
+        map(0x11, ProtocolVersion.MINECRAFT_1_14, false),
+        map(0x12, ProtocolVersion.MINECRAFT_1_16, false),
+        map(0x11, ProtocolVersion.MINECRAFT_1_17, false)
+    );
+    StateRegistry.BotFilter.serverbound.register(
+        Player.class, Player::new,
+        map(0x03, ProtocolVersion.MINECRAFT_1_7_2, false),
+        map(0x03, ProtocolVersion.MINECRAFT_1_8, false),
+        map(0x0F, ProtocolVersion.MINECRAFT_1_9, false),
+        map(0x0D, ProtocolVersion.MINECRAFT_1_12, false),
+        map(0x0C, ProtocolVersion.MINECRAFT_1_12_1, false),
+        map(0x0F, ProtocolVersion.MINECRAFT_1_13, false),
+        map(0x14, ProtocolVersion.MINECRAFT_1_14, false),
+        map(0x15, ProtocolVersion.MINECRAFT_1_16, false),
+        map(0x14, ProtocolVersion.MINECRAFT_1_17, false)
+    );
+    StateRegistry.BotFilter.serverbound.register(
+        Chat.class, Chat::new,
+        map(0x01, ProtocolVersion.MINECRAFT_1_7_2, false),
+        map(0x02, ProtocolVersion.MINECRAFT_1_9, false),
+        map(0x03, ProtocolVersion.MINECRAFT_1_12, false),
+        map(0x02, ProtocolVersion.MINECRAFT_1_12_1, false),
+        map(0x03, ProtocolVersion.MINECRAFT_1_14, false)
+    );
   }
 }
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/CachedCaptcha.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/CachedCaptcha.java
new file mode 100644
index 00000000..6c7b8d93
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/CachedCaptcha.java
@@ -0,0 +1,48 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.protocol.cache;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.concurrent.atomic.AtomicInteger;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.MapDataPacket;
+
+/**
+ * @author Leymooo
+ * @author hevav
+ */
+public class CachedCaptcha {
+
+  private static final List<CaptchaHandler> captchas = new ArrayList<>();
+  private static final AtomicInteger counterAtomic = new AtomicInteger(0);
+
+  public static void createCaptchaPacket(MapDataPacket map, String answer) {
+    captchas.add(new CaptchaHandler(map, answer));
+  }
+
+  public static CaptchaHandler randomCaptcha() {
+    int counter = counterAtomic.incrementAndGet();
+    if (counter >= captchas.size()) {
+      counter = 0;
+      counterAtomic.set(0);
+    }
+    return captchas.get(counter);
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/CaptchaHandler.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/CaptchaHandler.java
new file mode 100644
index 00000000..4adac6ab
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/CaptchaHandler.java
@@ -0,0 +1,33 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.protocol.cache;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.MapDataPacket;
+
+@NoArgsConstructor
+@AllArgsConstructor
+@Getter
+public class CaptchaHandler {
+  private MapDataPacket map;
+  private String answer;
+}
\ No newline at end of file
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/MultiplePreparedPackets.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/MultiplePreparedPackets.java
index 5c7a907c..6bd66bff 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/MultiplePreparedPackets.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/MultiplePreparedPackets.java
@@ -30,9 +30,9 @@ import java.util.Map;
 
 public class MultiplePreparedPackets {
 
-  private Map<ProtocolVersion, ByteBuf> multiplePayloadBuf = new EnumMap<ProtocolVersion, ByteBuf>(
+  private final Map<ProtocolVersion, ByteBuf> multiplePayloadBuf = new EnumMap<>(
       ProtocolVersion.class);
-  private PreparedPacket[] onlineModePackets;
+  private final PreparedPacket[] onlineModePackets;
 
   public MultiplePreparedPackets(PreparedPacket... preparedPackets) {
     for (PreparedPacket packet : preparedPackets) {
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/netty/PreparedPacketEncoder.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/netty/PreparedPacketEncoder.java
index da613aa7..93811e4d 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/netty/PreparedPacketEncoder.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/cache/netty/PreparedPacketEncoder.java
@@ -24,6 +24,7 @@ import com.google.common.collect.Table;
 import com.velocitypowered.api.network.ProtocolVersion;
 import com.velocitypowered.natives.encryption.JavaVelocityCipher;
 import com.velocitypowered.natives.util.Natives;
+import com.velocitypowered.proxy.protocol.ProtocolUtils;
 import io.netty.buffer.ByteBuf;
 import io.netty.channel.ChannelHandler.Sharable;
 import io.netty.channel.ChannelHandlerContext;
@@ -50,11 +51,12 @@ public class PreparedPacketEncoder extends MessageToMessageEncoder<PreparedPacke
   private final ProtocolVersion protocolVersion;
   private final boolean onlineMode;
 
-
   @Override
   protected void encode(ChannelHandlerContext ctx, PreparedPacket msg, List<Object> out)
       throws Exception {
     System.out.println("Processing prepared");
+    System.out.println("Sent prepared id "
+        + ProtocolUtils.readVarInt(msg.getBuffer(protocolVersion)));
     ByteBuf buf = msg.getBuffer(protocolVersion);
     out.add(buf);
   }
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/registry/Biome.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/registry/Biome.java
index fb35f4d1..f772e228 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/registry/Biome.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/registry/Biome.java
@@ -23,28 +23,35 @@ import javax.annotation.Nullable;
 import lombok.Data;
 import lombok.NonNull;
 import lombok.RequiredArgsConstructor;
+import net.elytrium.elytraproxy.botfilter.protocol.data.registry.Biome.Effects.MoodSound;
 import net.kyori.adventure.nbt.CompoundBinaryTag;
 import net.kyori.adventure.nbt.CompoundBinaryTag.Builder;
-import net.elytrium.elytraproxy.botfilter.protocol.data.registry.Biome.Effects.MoodSound;
 
 public class Biome {
 
-  public static final Biome PLAINTS = new Biome("minecraft:plains", 1,
+  public static final Biome PLAINS = new Biome("minecraft:plains", 1,
       new Element("rain", 0.125f, 0.8f, 0.05f, 0.4f, "plains",
           Effects.builder(7907327, 329011, 12638463, 415920)
-              .moodSound(MoodSound.of(6000, 2.0d, 8, "minecraft:ambient.cave")).build()));
+              .moodSound(MoodSound.of(6000, 2.0d, 8, "minecraft:ambient.cave"))
+              .build())
+  );
 
   public static final Biome SWAMP = new Biome("minecraft:swamp", 6,
       new Element("rain", -0.2F, 0.8f, 0.1F, 0.9F, "swamp",
           Effects.builder(7907327, 329011, 12638463, 415920).grassColorModifier("swamp")
               .foliageColor(6975545)
-              .moodSound(MoodSound.of(6000, 2.0d, 8, "minecraft:ambient.cave")).build()));
+              .moodSound(MoodSound.of(6000, 2.0d, 8, "minecraft:ambient.cave"))
+              .build())
+  );
 
   public static final Biome SWAMP_HILLS = new Biome("minecraft:swamp_hills", 134,
       new Element("rain", -0.1F, 0.8f, 0.3F, 0.9F, "swamp",
           Effects.builder(7907327, 329011, 12638463, 415920).grassColorModifier("swamp")
               .foliageColor(6975545)
-              .moodSound(MoodSound.of(6000, 2.0d, 8, "minecraft:ambient.cave")).build()));
+              .moodSound(MoodSound.of(6000, 2.0d, 8, "minecraft:ambient.cave"))
+              .build())
+  );
+
   public final String name;
   public final int id;
   public final Element element;
@@ -72,9 +79,8 @@ public class Biome {
     public final String category;
     public final Effects effects;
 
-    public Element(String precipitation, float depth, float temperature, float scale,
-        float downfall,
-        String category, Effects effects) {
+    public Element(String precipitation, float depth, float temperature,
+        float scale, float downfall, String category, Effects effects) {
       this.precipitation = precipitation;
       this.depth = depth;
       this.temperature = temperature;
@@ -106,13 +112,20 @@ public class Biome {
     private final int fogColor;
     private final int waterColor;
 
-    @Nullable private final Integer foliageColor;
-    @Nullable private final String grassColorModifier;
-    @Nullable private final Music music;
-    @Nullable private final String ambientSound;
-    @Nullable private final AdditionsSound additionsSound;
-    @Nullable private final MoodSound moodSound;
-    @Nullable private final Particle particle;
+    @Nullable
+    private final Integer foliageColor;
+    @Nullable
+    private final String grassColorModifier;
+    @Nullable
+    private final Music music;
+    @Nullable
+    private final String ambientSound;
+    @Nullable
+    private final AdditionsSound additionsSound;
+    @Nullable
+    private final MoodSound moodSound;
+    @Nullable
+    private final Particle particle;
 
     public CompoundBinaryTag encode() {
       Builder result = CompoundBinaryTag.builder();
@@ -145,8 +158,7 @@ public class Biome {
       return result.build();
     }
 
-    public static EffectsBuilder builder(int skyColor, int waterFogColor, int fogColor,
-        int waterColor) {
+    public static EffectsBuilder builder(int skyColor, int waterFogColor, int fogColor, int waterColor) {
       return new EffectsBuilder().skyColor(skyColor).waterFogColor(waterFogColor).fogColor(fogColor)
           .waterColor(waterColor);
     }
@@ -158,7 +170,8 @@ public class Biome {
       private final int tickDelay;
       private final double offset;
       private final int blockSearchExtent;
-      @NonNull private final String sound;
+      @NonNull
+      private final String sound;
 
       public CompoundBinaryTag encode() {
         return CompoundBinaryTag.builder()
@@ -174,7 +187,8 @@ public class Biome {
     public static class Music {
 
       private final boolean replaceCurrentMusic;
-      @NonNull private final String sound;
+      @NonNull
+      private final String sound;
       private final int maxDelay;
       private final int minDelay;
 
@@ -191,7 +205,8 @@ public class Biome {
     @RequiredArgsConstructor(staticName = "of")
     public static class AdditionsSound {
 
-      @NonNull private final String sound;
+      @NonNull
+      private final String sound;
       private final double tickChance;
 
       public CompoundBinaryTag encode() {
@@ -206,7 +221,8 @@ public class Biome {
     public static class Particle {
 
       private final float probability;
-      @NonNull private final ParticleOptions options;
+      @NonNull
+      private final ParticleOptions options;
 
       public CompoundBinaryTag encode() {
         return CompoundBinaryTag.builder()
@@ -218,7 +234,8 @@ public class Biome {
       @RequiredArgsConstructor
       public static class ParticleOptions {
 
-        @NonNull private final String type;
+        @NonNull
+        private final String type;
 
         public CompoundBinaryTag encode() {
           return CompoundBinaryTag.builder()
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/registry/Dimension.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/registry/Dimension.java
index c661943c..69ce35c9 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/registry/Dimension.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/registry/Dimension.java
@@ -30,9 +30,11 @@ import net.kyori.adventure.nbt.CompoundBinaryTag.Builder;
 @Data
 public class Dimension {
 
-  public static final Dimension OVERWORLD = new Dimension("minecraft:overworld", 0, false, true,
-      0.0f, null, false, "minecraft:infiniburn_overworld",
-      false, true, true, "minecraft:overworld", true, 0, 256, 256, 1.0f, false, false);
+  public static Dimension getDimension(String modernKey, int id) {
+    return new Dimension(modernKey, id, false, true,
+        0.0f, null, false, "minecraft:infiniburn_nether",
+        false, true, true, modernKey, true, 0, 256, 256, 1.0f, false, false);
+  }
 
   @NonNull
   private final String key;
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/storage/BlockStorage.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/storage/BlockStorage.java
index 8f207fa2..a79a9abc 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/storage/BlockStorage.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/storage/BlockStorage.java
@@ -22,9 +22,9 @@ package net.elytrium.elytraproxy.botfilter.protocol.data.storage;
 import com.velocitypowered.api.network.ProtocolVersion;
 import io.netty.buffer.ByteBuf;
 import lombok.NonNull;
-import org.jetbrains.annotations.NotNull;
 import net.elytrium.elytraproxy.botfilter.server.world.SimpleBlock;
 import net.elytrium.elytraproxy.botfilter.server.world.SimpleBlock.Version;
+import org.jetbrains.annotations.NotNull;
 
 public interface BlockStorage {
 
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/storage/BlockStorage17.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/storage/BlockStorage17.java
index 755d5a11..07ca4f7b 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/storage/BlockStorage17.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/storage/BlockStorage17.java
@@ -26,11 +26,11 @@ import java.util.Arrays;
 import lombok.AccessLevel;
 import lombok.NonNull;
 import lombok.RequiredArgsConstructor;
-import org.jetbrains.annotations.NotNull;
 import net.elytrium.elytraproxy.botfilter.protocol.util.mcprotocollib.NibbleArray3d;
 import net.elytrium.elytraproxy.botfilter.server.world.SimpleBlock;
 import net.elytrium.elytraproxy.botfilter.server.world.SimpleBlock.Version;
 import net.elytrium.elytraproxy.botfilter.server.world.chunk.SimpleChunk;
+import org.jetbrains.annotations.NotNull;
 
 @RequiredArgsConstructor(access = AccessLevel.PRIVATE)
 public class BlockStorage17 implements BlockStorage {
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/storage/BlockStorage19.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/storage/BlockStorage19.java
index 708be90c..a1184a5d 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/storage/BlockStorage19.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/data/storage/BlockStorage19.java
@@ -30,13 +30,13 @@ import java.util.Map;
 import lombok.AccessLevel;
 import lombok.AllArgsConstructor;
 import lombok.NonNull;
-import org.jetbrains.annotations.NotNull;
 import net.elytrium.elytraproxy.botfilter.protocol.util.CompactStorage;
 import net.elytrium.elytraproxy.botfilter.protocol.util.mcprotocollib.BitStorage116;
 import net.elytrium.elytraproxy.botfilter.protocol.util.mcprotocollib.BitStorage19;
 import net.elytrium.elytraproxy.botfilter.server.world.SimpleBlock;
 import net.elytrium.elytraproxy.botfilter.server.world.SimpleBlock.Version;
 import net.elytrium.elytraproxy.botfilter.server.world.chunk.SimpleChunk;
+import org.jetbrains.annotations.NotNull;
 
 @AllArgsConstructor(access = AccessLevel.PRIVATE)
 public class BlockStorage19 implements BlockStorage {
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/MapDataPacket.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/MapDataPacket.java
new file mode 100644
index 00000000..fe176882
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/MapDataPacket.java
@@ -0,0 +1,74 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.protocol.packet;
+
+import com.velocitypowered.api.network.ProtocolVersion;
+import com.velocitypowered.proxy.protocol.MinecraftPacket;
+import com.velocitypowered.proxy.protocol.ProtocolUtils;
+import io.netty.buffer.ByteBuf;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+@EqualsAndHashCode(callSuper = false)
+public class MapDataPacket implements MinecraftPacket {
+
+  private int mapId;
+  private byte scale;
+  private MapData data;
+
+  @Override
+  public void encode(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion version) {
+    ProtocolUtils.writeVarInt(buf, this.mapId);
+    buf.writeByte(this.scale);
+    if (version.isAfterOrEq(ProtocolVersion.MINECRAFT_1_9)
+        && version.isBefore(ProtocolVersion.MINECRAFT_1_17)) {
+      buf.writeBoolean(false);
+    }
+    if (version.isAfterOrEq(ProtocolVersion.MINECRAFT_1_14)) {
+      buf.writeBoolean(false);
+    }
+    if (version.isAfterOrEq(ProtocolVersion.MINECRAFT_1_17)) {
+      buf.writeBoolean(false);
+    } else {
+      ProtocolUtils.writeVarInt(buf, 0);
+    }
+    buf.writeByte(data.getColumns());
+    buf.writeByte(data.getRows());
+    buf.writeByte(data.getX());
+    buf.writeByte(data.getY());
+    ProtocolUtils.writeByteArray(buf, data.getData());
+  }
+
+  @AllArgsConstructor
+  @Getter
+  public static class MapData {
+    private final int columns;
+    private final int rows;
+    private final int x;
+    private final int y;
+    private final byte[] data;
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/Player.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/Player.java
new file mode 100644
index 00000000..5ddf53c0
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/Player.java
@@ -0,0 +1,50 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.protocol.packet;
+
+import com.velocitypowered.api.network.ProtocolVersion;
+import com.velocitypowered.proxy.connection.MinecraftSessionHandler;
+import com.velocitypowered.proxy.protocol.MinecraftPacket;
+import com.velocitypowered.proxy.protocol.ProtocolUtils;
+import io.netty.buffer.ByteBuf;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+@EqualsAndHashCode(callSuper = false)
+public class Player implements MinecraftPacket {
+
+  private boolean onGround;
+
+  @Override
+  public void decode(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion protocolVersion) {
+    this.onGround = buf.readBoolean();
+  }
+
+  @Override
+  public boolean handle(MinecraftSessionHandler handler) {
+    handler.handle(this);
+    return false;
+  }
+}
\ No newline at end of file
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/PlayerAbilities.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/PlayerAbilities.java
new file mode 100644
index 00000000..7d62902b
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/PlayerAbilities.java
@@ -0,0 +1,53 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.protocol.packet;
+
+import com.velocitypowered.api.network.ProtocolVersion;
+import com.velocitypowered.proxy.connection.MinecraftSessionHandler;
+import com.velocitypowered.proxy.protocol.MinecraftPacket;
+import com.velocitypowered.proxy.protocol.ProtocolUtils;
+import io.netty.buffer.ByteBuf;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+@EqualsAndHashCode(callSuper = false)
+public class PlayerAbilities implements MinecraftPacket {
+
+  byte flags;
+  float speed;
+  float field;
+
+  @Override
+  public void encode(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion protocolVersion) {
+    buf.writeByte(this.flags);
+    buf.writeFloat(this.speed);
+    buf.writeFloat(this.field);
+  }
+
+  @Override
+  public boolean handle(MinecraftSessionHandler handler) {
+    return false;
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/PlayerPosition.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/PlayerPosition.java
new file mode 100644
index 00000000..319546d7
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/PlayerPosition.java
@@ -0,0 +1,55 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.protocol.packet;
+
+import com.velocitypowered.api.network.ProtocolVersion;
+import com.velocitypowered.proxy.connection.MinecraftSessionHandler;
+import com.velocitypowered.proxy.protocol.MinecraftPacket;
+import com.velocitypowered.proxy.protocol.ProtocolUtils;
+import io.netty.buffer.ByteBuf;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+@EqualsAndHashCode(callSuper = false)
+public class PlayerPosition implements MinecraftPacket {
+
+  private double x;
+  private double y;
+  private double z;
+  private boolean onGround;
+
+  @Override
+  public void decode(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion protocolVersion) {
+    this.x = buf.readDouble();
+    this.y = buf.readDouble();
+    this.z = buf.readDouble();
+    this.onGround = buf.readBoolean();
+  }
+
+  @Override
+  public boolean handle(MinecraftSessionHandler handler) {
+    return handler.handle(this);
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/SetExp.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/SetExp.java
new file mode 100644
index 00000000..58970602
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/SetExp.java
@@ -0,0 +1,59 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.protocol.packet;
+
+import com.velocitypowered.api.network.ProtocolVersion;
+import com.velocitypowered.proxy.connection.MinecraftSessionHandler;
+import com.velocitypowered.proxy.protocol.MinecraftPacket;
+import com.velocitypowered.proxy.protocol.ProtocolUtils;
+import io.netty.buffer.ByteBuf;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+@EqualsAndHashCode(callSuper = false)
+public class SetExp implements MinecraftPacket {
+
+  float expBar;
+  int level;
+  int totalExp;
+
+  @Override
+  public void encode(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion protocolVersion) {
+    if (protocolVersion.isAfterOrEq(ProtocolVersion.MINECRAFT_1_8)) {
+      buf.writeFloat(this.expBar);
+      ProtocolUtils.writeVarInt(buf, this.level);
+      ProtocolUtils.writeVarInt(buf, this.totalExp);
+    } else {
+      buf.writeByte((int) this.expBar); // or? buf.writeFloat(this.expBar);
+      buf.writeByte(this.level); // or? buf.writeShort(this.level);
+      buf.writeShort(this.totalExp);
+    }
+  }
+
+  @Override
+  public boolean handle(MinecraftSessionHandler handler) {
+    return true;
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/SetSlot.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/SetSlot.java
new file mode 100644
index 00000000..a690bc17
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/SetSlot.java
@@ -0,0 +1,95 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.protocol.packet;
+
+import com.velocitypowered.api.network.ProtocolVersion;
+import com.velocitypowered.proxy.protocol.MinecraftPacket;
+import com.velocitypowered.proxy.protocol.ProtocolUtils;
+import io.netty.buffer.ByteBuf;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+import net.kyori.adventure.nbt.CompoundBinaryTag;
+import net.kyori.adventure.nbt.IntBinaryTag;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+@EqualsAndHashCode(callSuper = false)
+public class SetSlot implements MinecraftPacket {
+
+  private int windowId;
+  private int slot;
+  private int item;
+  private int count;
+  private int data;
+
+  @Override
+  public void encode(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion version) {
+    buf.writeByte(this.windowId);
+    buf.writeShort(this.slot);
+    int id = this.item == 358 ? getCaptchaId(version) : this.item;
+    boolean present = id > 0;
+
+    if (version.isAfterOrEq(ProtocolVersion.MINECRAFT_1_13_2)) {
+      buf.writeBoolean(present);
+    }
+
+    if (!present && version.isBefore(ProtocolVersion.MINECRAFT_1_13_2)) {
+      buf.writeShort(-1);
+    }
+
+    if (present) {
+      if (version.isBefore(ProtocolVersion.MINECRAFT_1_13_2)) {
+        buf.writeShort(id);
+      } else {
+        ProtocolUtils.writeVarInt(buf, id);
+      }
+      buf.writeByte(this.count);
+      if (version.isBefore(ProtocolVersion.MINECRAFT_1_13)) {
+        buf.writeShort(this.data);
+      }
+
+      if (version.isBefore(ProtocolVersion.MINECRAFT_1_17)) {
+        buf.writeByte(0); //No Nbt
+      } else {
+        CompoundBinaryTag nbt = CompoundBinaryTag.builder().put("map", IntBinaryTag.of(0)).build();
+        ProtocolUtils.writeCompoundTag(buf, nbt);
+      }
+    }
+  }
+
+  private int getCaptchaId(ProtocolVersion version) {
+    if (version.isBeforeOrEq(ProtocolVersion.MINECRAFT_1_12_2)) {
+      return 358;
+    } else if (version.equals(ProtocolVersion.MINECRAFT_1_13)) {
+      return 608;
+    } else if (version.isBeforeOrEq(ProtocolVersion.MINECRAFT_1_13_2)) {
+      return 613;
+    } else if (version.isBeforeOrEq(ProtocolVersion.MINECRAFT_1_15_2)) {
+      return 671;
+    } else if (version.isBeforeOrEq(ProtocolVersion.MINECRAFT_1_16_4)) {
+      return 733;
+    } else {
+      return 847;
+    }
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/TeleportConfirm.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/TeleportConfirm.java
new file mode 100644
index 00000000..79b8ea83
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/TeleportConfirm.java
@@ -0,0 +1,49 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.protocol.packet;
+
+import com.velocitypowered.api.network.ProtocolVersion;
+import com.velocitypowered.proxy.connection.MinecraftSessionHandler;
+import com.velocitypowered.proxy.protocol.MinecraftPacket;
+import com.velocitypowered.proxy.protocol.ProtocolUtils;
+import io.netty.buffer.ByteBuf;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+@EqualsAndHashCode(callSuper = false)
+public class TeleportConfirm implements MinecraftPacket {
+
+  int teleportId;
+
+  @Override
+  public void decode(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion protocolVersion) {
+    teleportId = ProtocolUtils.readVarInt(buf);
+  }
+
+  @Override
+  public boolean handle(MinecraftSessionHandler handler) {
+    return handler.handle(this);
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/world/ChunkData.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/world/ChunkData.java
index 3b4b1af0..806f8d7c 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/world/ChunkData.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/world/ChunkData.java
@@ -37,7 +37,6 @@ import java.util.Map.Entry;
 import java.util.zip.Deflater;
 import lombok.Getter;
 import net.elytrium.elytraproxy.botfilter.protocol.data.registry.Biome;
-import net.kyori.adventure.nbt.CompoundBinaryTag;
 import net.elytrium.elytraproxy.botfilter.protocol.util.CompactStorage;
 import net.elytrium.elytraproxy.botfilter.protocol.util.NetworkSection;
 import net.elytrium.elytraproxy.botfilter.protocol.util.mcprotocollib.BitStorage116;
@@ -46,6 +45,7 @@ import net.elytrium.elytraproxy.botfilter.server.world.SimpleBlock;
 import net.elytrium.elytraproxy.botfilter.server.world.chunk.ChunkSnapshot;
 import net.elytrium.elytraproxy.botfilter.server.world.chunk.LightSection;
 import net.elytrium.elytraproxy.botfilter.server.world.chunk.SimpleChunk;
+import net.kyori.adventure.nbt.CompoundBinaryTag;
 
 public class ChunkData implements MinecraftPacket {
 
@@ -89,8 +89,8 @@ public class ChunkData implements MinecraftPacket {
     if (version.isBefore(ProtocolVersion.MINECRAFT_1_17)) {
       buf.writeBoolean(chunk.isFullChunk());
 
-      if (version.isAfterOrEq(ProtocolVersion.MINECRAFT_1_16) &&
-          version.isBefore(ProtocolVersion.MINECRAFT_1_16_2)) {
+      if (version.isAfterOrEq(ProtocolVersion.MINECRAFT_1_16)
+          && version.isBefore(ProtocolVersion.MINECRAFT_1_16_2)) {
         buf.writeBoolean(true); //ignore old data
       }
 
@@ -203,7 +203,7 @@ public class ChunkData implements MinecraftPacket {
   }
 
   private long[] create117Mask() {
-    BitSet bitSet = BitSet.valueOf(new long[]{mask});
+    BitSet bitSet = BitSet.valueOf(new long[] {mask});
     return bitSet.toLongArray();
   }
 
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/world/UpdateLight.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/world/UpdateLight.java
index e0083dca..aa4e35f6 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/world/UpdateLight.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/packet/world/UpdateLight.java
@@ -115,7 +115,7 @@ public class UpdateLight implements MinecraftPacket {
   }
 
   private static void write117Mask(ByteBuf buf, int mask) {
-    BitSet bitSet = BitSet.valueOf(new long[]{mask});
+    BitSet bitSet = BitSet.valueOf(new long[] {mask});
     long[] mk = bitSet.toLongArray();
     ProtocolUtils.writeVarInt(buf, mk.length);
     for (long m : mk) {
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/util/NetworkSection.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/util/NetworkSection.java
index f4fa8d89..96a33b4c 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/util/NetworkSection.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/protocol/util/NetworkSection.java
@@ -38,8 +38,7 @@ public class NetworkSection {
   private final SimpleSection section;
   private int blockCount = -1;
 
-  public NetworkSection(SimpleSection section, @NonNull NibbleArray3d blockLight,
-      NibbleArray3d skyLight) {
+  public NetworkSection(SimpleSection section, @NonNull NibbleArray3d blockLight, NibbleArray3d skyLight) {
     this.section = section;
     this.blockLight = blockLight;
     this.skyLight = skyLight;
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/BotFilterSessionHandler.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/BotFilterSessionHandler.java
index 97223ada..eb400ce2 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/BotFilterSessionHandler.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/BotFilterSessionHandler.java
@@ -19,18 +19,39 @@
 
 package net.elytrium.elytraproxy.botfilter.server;
 
-import com.velocitypowered.proxy.connection.MinecraftSessionHandler;
 import com.velocitypowered.proxy.connection.client.ConnectedPlayer;
 import com.velocitypowered.proxy.connection.client.LoginSessionHandler;
+import com.velocitypowered.proxy.protocol.packet.Chat;
+import io.netty.buffer.ByteBuf;
 import java.util.Objects;
-import lombok.Data;
+import lombok.Getter;
+import lombok.Setter;
+import net.elytrium.elytraproxy.botfilter.protocol.cache.PreparedPacket;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.SetExp;
+import net.elytrium.elytraproxy.config.Settings;
 
-@Data
-public class BotFilterSessionHandler implements MinecraftSessionHandler {
+@Getter
+public class BotFilterSessionHandler extends FallingCheckHandler {
+
+  public static final int TOTAL_TICKS = 100;
+  private static final long TOTAL_TIME = (TOTAL_TICKS * 50) - 100;
 
   private final ConnectedPlayer player;
   private final LoginSessionHandler originalHandler;
   private final VirtualServer virtualServer;
+  @Setter
+  private String captchaAnswer;
+  private int aticks = 0;
+  private long joinTime = System.currentTimeMillis();
+  private int attempts = Settings.IMP.ANTIBOT.CAPTCHA_ATTEMPTS;
+  private CheckState state = CheckState.ONLY_CAPTCHA/*CAPTCHA_ON_POSITION_FAILED*/;
+
+  public BotFilterSessionHandler(ConnectedPlayer player, LoginSessionHandler originalHandler, VirtualServer virtualServer) {
+    super(player.getProtocolVersion());
+    this.player = player;
+    this.originalHandler = originalHandler;
+    this.virtualServer = virtualServer;
+  }
 
   @Override
   public void disconnected() {
@@ -42,13 +63,106 @@ public class BotFilterSessionHandler implements MinecraftSessionHandler {
     virtualServer.disconnected(this);
   }
 
+  @Override
+  public boolean handle(Chat chat) {
+    String message = chat.getMessage();
+    if (message.length() > 256) {
+      return false;
+    } else if (message.equals(captchaAnswer)) {
+      finishCheck();
+    } else if (--attempts != 0) {
+      virtualServer.sendCaptcha(this);
+    } else {
+      virtualServer.getElytraProxy().getStatistics().addBlockedBots();
+      player.getConnection().closeWith(virtualServer.getPackets().getCaptchaFailed());
+    }
+    return true;
+  }
+
+  @Override
+  public void handleUnknown(ByteBuf packet) {
+    if (packet.readableBytes() > 2048) {
+      virtualServer.getElytraProxy().getStatistics().addBlockedBots();
+      player.getConnection().closeWith(virtualServer.getPackets().getFallingCheckFailed());
+    }
+  }
+
   private void finishCheck() {
+    if (System.currentTimeMillis() - joinTime < TOTAL_TIME && state != CheckState.ONLY_CAPTCHA) {
+      if (state == CheckState.CAPTCHA_POSITION && aticks < TOTAL_TICKS) {
+        player.getConnection().write(virtualServer.getPackets().getResetSlot());
+        state = CheckState.ONLY_POSITION;
+      } else {
+        if (state == CheckState.CAPTCHA_ON_POSITION_FAILED) {
+          changeStateToCaptcha();
+        } else {
+          virtualServer.getElytraProxy().getStatistics().addBlockedBots();
+          player.getConnection().closeWith(virtualServer.getPackets().getFallingCheckFailed());
+        }
+      }
+      return;
+    }
+    state = CheckState.SUCCESSFULLY;
+    System.out.println("Finishing check");
+    player.getConnection().write(virtualServer.getPackets().getSuccessfulChat());
     player.getConnection().setSessionHandler(originalHandler);
     originalHandler.initialize(player);
     //fakeServer.getBotFilter().restoreOriginalHandlers(user);
     //afterCheck.run();
   }
 
+  @Override
+  public void onMove() {
+    if (lastY == -1 || onGround) {
+      return;
+    }
+    if (state == CheckState.ONLY_CAPTCHA) {
+      if (lastY != y && waitingTeleportId == -1) {
+        resetPosition(true);
+      }
+      return;
+    }
+    if (formatDouble(lastY - y) != getSpeed(ticks)) {
+      virtualServer.getElytraProxy().getStatistics().addBlockedBots();
+      player.getConnection().closeWith(virtualServer.getPackets().getFallingCheckFailed());
+      return;
+    }
+    if (y <= 60 && state == CheckState.CAPTCHA_POSITION && waitingTeleportId == -1) {
+      resetPosition(false);
+    }
+    if (aticks >= TOTAL_TICKS && state != CheckState.CAPTCHA_POSITION) {
+      finishCheck();
+      return;
+    }
+    if (state == CheckState.CAPTCHA_ON_POSITION_FAILED || state == CheckState.ONLY_POSITION) {
+      PreparedPacket<SetExp> expBuf = virtualServer.getPackets().getExperience().get(aticks);
+      if (expBuf != null) {
+        System.out.println("Sent expBuf");
+        player.getConnection().write(expBuf);
+      }
+    }
+    ticks++;
+    aticks++;
+  }
+
+  private void resetPosition(boolean disableFall) {
+    if (disableFall) {
+      System.out.println("Sent noAbil");
+      player.getConnection().write(virtualServer.getPackets().getNoAbilities());
+    }
+    waitingTeleportId = 9876;
+    System.out.println("Sent posAndLook");
+    player.getConnection().write(virtualServer.getPackets().getCaptchaPosAndLook());
+  }
+
+  private void changeStateToCaptcha() {
+    state = CheckState.ONLY_CAPTCHA;
+    joinTime = System.currentTimeMillis() + 3500;
+    System.out.println("Sent chat captcha");
+    resetPosition(true);
+    virtualServer.sendCaptcha(this);
+  }
+
   @Override
   public boolean equals(Object o) {
     if (this == o) {
@@ -65,4 +179,13 @@ public class BotFilterSessionHandler implements MinecraftSessionHandler {
   public int hashCode() {
     return Objects.hash(player.getUsername());
   }
+
+  public enum CheckState {
+    ONLY_POSITION,
+    ONLY_CAPTCHA,
+    CAPTCHA_POSITION,
+    CAPTCHA_ON_POSITION_FAILED,
+    SUCCESSFULLY,
+    FAILED
+  }
 }
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/FallingCheckHandler.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/FallingCheckHandler.java
new file mode 100644
index 00000000..58655740
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/FallingCheckHandler.java
@@ -0,0 +1,116 @@
+/*
+ * This file is part of Velocity-BotFilter, licensed under the AGPLv3 License (AGPLv3).
+ *
+ * Copyright (C) 2021 Vjatšeslav Maspanov <Leymooo>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package net.elytrium.elytraproxy.botfilter.server;
+
+import com.velocitypowered.api.network.ProtocolVersion;
+import com.velocitypowered.proxy.connection.MinecraftSessionHandler;
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.Player;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.PlayerPosition;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.PlayerPositionAndLook;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.TeleportConfirm;
+
+@SuppressFBWarnings(value = "URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD",
+    justification = "ща пока x, z и teleportId не юзаются но скорее всего потом заюзаем")
+public class FallingCheckHandler implements MinecraftSessionHandler {
+
+  public double x = 0;
+  public double y = 0;
+  public double z = 0;
+  public boolean onGround = false;
+
+  public int teleportId = -1;
+
+  public int waitingTeleportId = 9876;
+
+  public double lastY = 0;
+  public int ticks = 0;
+
+  public final ProtocolVersion version;
+
+  public FallingCheckHandler(ProtocolVersion version) {
+    this.version = version;
+  }
+
+  @Override
+  public String toString() {
+    throw new UnsupportedOperationException("Not supported yet.");
+  }
+
+  @Override
+  public boolean handle(Player player) {
+    this.onGround = player.isOnGround();
+    return true;
+  }
+
+  @Override
+  public boolean handle(PlayerPosition pos) {
+    x = pos.getX();
+    lastY = y;
+    y = pos.getY();
+    z = pos.getZ();
+    onGround = pos.isOnGround();
+    onMove();
+    return true;
+  }
+
+
+  @Override
+  public boolean handle(PlayerPositionAndLook posRot) {
+    if (version.isBeforeOrEq(ProtocolVersion.MINECRAFT_1_8)
+        && posRot.getX() == 7 && posRot.getY() == 450 && posRot.getZ() == 7
+        && waitingTeleportId == 9876) {
+      ticks = 0;
+      y = -1;
+      lastY = -1;
+      waitingTeleportId = -1;
+    }
+    x = posRot.getX();
+    lastY = y;
+    y = posRot.getY();
+    z = posRot.getZ();
+    onGround = posRot.isOnGround();
+    onMove();
+    return true;
+  }
+
+  @Override
+  public boolean handle(TeleportConfirm confirm) {
+    if (confirm.getTeleportId() == waitingTeleportId) {
+      ticks = 0;
+      y = -1;
+      lastY = -1;
+      waitingTeleportId = -1;
+    }
+    return true;
+  }
+
+  public void onMove() {
+    throw new UnsupportedOperationException("Method is not overrided");
+  }
+
+  public static double getSpeed(int ticks) {
+    return formatDouble(-((Math.pow(0.98, ticks) - 1) * 3.92));
+  }
+
+  public static double formatDouble(double d) {
+    return Math.floor(d * 100) / 100;
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/ServerPackets.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/ServerPackets.java
index 6919e5e1..28b47eb9 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/ServerPackets.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/ServerPackets.java
@@ -22,7 +22,9 @@ package net.elytrium.elytraproxy.botfilter.server;
 import com.google.common.collect.ImmutableList;
 import com.velocitypowered.api.network.ProtocolVersion;
 import com.velocitypowered.proxy.connection.registry.DimensionInfo;
+import com.velocitypowered.proxy.protocol.ProtocolUtils;
 import com.velocitypowered.proxy.protocol.StateRegistry;
+import com.velocitypowered.proxy.protocol.packet.Chat;
 import com.velocitypowered.proxy.protocol.packet.Disconnect;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -35,35 +37,53 @@ import net.elytrium.elytraproxy.botfilter.protocol.data.registry.Biome;
 import net.elytrium.elytraproxy.botfilter.protocol.data.registry.Dimension;
 import net.elytrium.elytraproxy.botfilter.protocol.data.registry.DimensionRegistry;
 import net.elytrium.elytraproxy.botfilter.protocol.packet.JoinGame;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.PlayerAbilities;
 import net.elytrium.elytraproxy.botfilter.protocol.packet.PlayerPositionAndLook;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.SetExp;
+import net.elytrium.elytraproxy.botfilter.protocol.packet.SetSlot;
 import net.elytrium.elytraproxy.botfilter.protocol.packet.UpdateViewPosition;
 import net.elytrium.elytraproxy.botfilter.protocol.packet.world.ChunkData;
 import net.elytrium.elytraproxy.botfilter.protocol.packet.world.UpdateLight;
 import net.elytrium.elytraproxy.botfilter.server.world.VirtualWorld;
 import net.elytrium.elytraproxy.botfilter.server.world.chunk.SimpleChunk;
+import net.elytrium.elytraproxy.config.Settings;
 import net.kyori.adventure.text.Component;
 import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
 
+@SuppressWarnings("rawtypes")
 @Getter
 public class ServerPackets {
 
   private final PacketCompressor packetCompressor;
   private final VirtualServer virtualServer;
   private VirtualWorld virtualWorld;
-  //JoinGame + Chunks + Light + PlayerPosAndLook
   private MultiplePreparedPackets spawnPackets;
   private PreparedPacket<Disconnect> alreadyConnected;
+  private PreparedPacket<Disconnect> tooBigPacket;
+  private PreparedPacket<Disconnect> captchaFailed;
+  private PreparedPacket<Disconnect> fallingCheckFailed;
+  private PreparedPacket<SetSlot> setSlot;
+  private PreparedPacket<SetSlot> resetSlot;
+  private PreparedPacket<Chat> checkingChat;
+  private PreparedPacket<Chat> checkingCaptchaChat;
+  private PreparedPacket<Chat> successfulChat;
+  private PreparedPacket<PlayerPositionAndLook> captchaPosAndLook;
+  private PreparedPacket<PlayerAbilities> noAbilities;
+  private List<PreparedPacket<SetExp>> experience;
 
-  public ServerPackets(PacketCompressor packetCompressor,
-      VirtualServer virtualServer) {
+  public ServerPackets(PacketCompressor packetCompressor, VirtualServer virtualServer) {
     this.packetCompressor = packetCompressor;
     this.virtualServer = virtualServer;
   }
 
   public void createPackets() {
     releaseAll();
-    this.virtualWorld = new VirtualWorld(Dimension.OVERWORLD,
-        new DimensionInfo(Dimension.OVERWORLD.getKey(), Dimension.OVERWORLD.getKey(), true, false));
+    // TODO: Проверять валид ли ид
+    String key = Settings.IMP.ANTIBOT.BOTFILTER_DIMENSION.MODERN_KEY;
+    int dimensionId = Settings.IMP.ANTIBOT.BOTFILTER_DIMENSION.ID;
+    Dimension dimension = Dimension.getDimension(key, dimensionId);
+    this.virtualWorld = new VirtualWorld(dimension,
+        new DimensionInfo(key, key, true, false));
     virtualWorld.setSkyLight(0, 60, 0,
         (byte) 1); //1.7 workaround //TODO: Maybe broken with new light system realiztion
 
@@ -98,22 +118,45 @@ public class ServerPackets {
     preparedPackets.addAll(createUpdateLightPackets());
     preparedPackets.add(createPlayerPosAndLookPacket());
     spawnPackets = new MultiplePreparedPackets(preparedPackets.toArray(new PreparedPacket[0]));
-    alreadyConnected = createDisconnectPacket("&cAlready connected", StateRegistry.LOGIN);
+
+    experience = createExpPackets();
+    captchaPosAndLook = createPlayerPosAndLookPacket();
+
+    noAbilities = createAbilitiesPacket();
+    alreadyConnected = createDisconnectPacket("&cAlready connected");
+    tooBigPacket = createDisconnectPacket("&cToo big Packet");
+    captchaFailed = createDisconnectPacket(Settings.IMP.ANTIBOT.STRINGS.CAPTCHA_FAILED);
+    fallingCheckFailed = createDisconnectPacket(Settings.IMP.ANTIBOT.STRINGS.FALLING_CHECK_FAILED);
+    setSlot = createSetSlotPacket(0, 36, 358, 1, 0);
+    resetSlot = createSetSlotPacket(0, 36, -1, 0, 0);
     virtualWorld = null;
+
+    checkingChat = createChatPacket(Settings.IMP.ANTIBOT.STRINGS.CHECKING);
+    checkingCaptchaChat = createChatPacket(Settings.IMP.ANTIBOT.STRINGS.CHECKING_CAPTCHA);
+    successfulChat = createChatPacket(Settings.IMP.ANTIBOT.STRINGS.SUCCESSFUL);
+  }
+
+  private PreparedPacket<PlayerAbilities> createAbilitiesPacket() {
+    PreparedPacket<PlayerAbilities> packet = new PreparedPacket<>();
+    packet.prepare(new PlayerAbilities((byte) 6, 0f, 0f));
+    return packet;
   }
 
-  //TODO use Dimensions ids for < 1.16 version
   private PreparedPacket<JoinGame> createJoinGamePacket() {
+    String key = Settings.IMP.ANTIBOT.BOTFILTER_DIMENSION.MODERN_KEY;
+    int dimensionId = Settings.IMP.ANTIBOT.BOTFILTER_DIMENSION.ID;
+    Dimension dimension = Dimension.getDimension(key, dimensionId);
     DimensionRegistry dimensionRegistry = new DimensionRegistry();
     dimensionRegistry.addDimension(
-        Dimension.OVERWORLD, ImmutableList.of(Biome.PLAINTS, Biome.SWAMP, Biome.SWAMP_HILLS));
-    dimensionRegistry.setActiveDimension(Dimension.OVERWORLD);
+        dimension, ImmutableList.of(Biome.PLAINS, Biome.SWAMP, Biome.SWAMP_HILLS));
+    dimensionRegistry.setActiveDimension(dimension);
     dimensionRegistry.setActiveDimensionInfo(
-        new DimensionInfo("minecraft:overworld", "minecraft:overworld", false, false));
+        new DimensionInfo(key, key, false, false));
     PreparedPacket<JoinGame> joinGame = new PreparedPacket<>();
-    joinGame.prepare(JoinGame.builder().entityId(0).gamemode((short) 1).dimension(0).
-        partialHashedSeed(1).difficulty((short) 0).maxPlayers(1).levelType("flat").viewDistance(4)
-        .reducedDebugInfo(false).showRespawnScreen(true).hardcore(false)
+    joinGame.prepare(JoinGame.builder().entityId(0).gamemode((short) 2).dimension(dimensionId)
+        .partialHashedSeed(1).difficulty((short) 0).maxPlayers(1).levelType("flat").viewDistance(4)
+        .reducedDebugInfo(true).showRespawnScreen(true)
+        .hardcore(Settings.IMP.ANTIBOT.BOTFILTER_DIMENSION.HARDCORE_HEARTS)
         .dimensionRegistry(dimensionRegistry).build());
 
     return processCompression(joinGame);
@@ -133,6 +176,22 @@ public class ServerPackets {
     return packets;
   }
 
+  private List<PreparedPacket<SetExp>> createExpPackets() {
+    List<PreparedPacket<SetExp>> packets = new ArrayList<>();
+    int ticks = BotFilterSessionHandler.TOTAL_TICKS;
+    int interval = 2;
+    float expInterval = 1f / ((float) ticks / (float) interval);
+    SetExp setExp = new SetExp(0, 0, 0);
+    for (int i = 0; i < ticks; i = i + interval) {
+      setExp.setExpBar(setExp.getExpBar() + expInterval);
+      setExp.setLevel(setExp.getLevel() + 1);
+      PreparedPacket<SetExp> expPacket = new PreparedPacket<>();
+      expPacket.prepare(setExp);
+      packets.add(expPacket);
+    }
+    return packets;
+  }
+
   private PreparedPacket<ChunkData> createChunkDataPacket(SimpleChunk chunk) {
     PreparedPacket<ChunkData> chunkPacket = new PreparedPacket<>();
     chunkPacket.prepare(new ChunkData(chunk.getFullChunkSnapshot(),
@@ -140,6 +199,31 @@ public class ServerPackets {
     return processCompression(chunkPacket);
   }
 
+  private PreparedPacket<SetSlot> createSetSlotPacket(int windowId, int slot, int item, int count, int data) {
+    PreparedPacket<SetSlot> slotPacket = new PreparedPacket<>();
+    slotPacket.prepare(new SetSlot(windowId, slot, item, count, data));
+    return processCompression(slotPacket);
+  }
+
+  private PreparedPacket<Chat> createChatPacket(String text) {
+    PreparedPacket<Chat> chatPacket = new PreparedPacket<>();
+    chatPacket.prepare(new Chat(
+        ProtocolUtils.getJsonChatSerializer(ProtocolVersion.MINIMUM_VERSION).serialize(
+            LegacyComponentSerializer
+                .legacyAmpersand()
+                .deserialize(text)
+        ), Chat.CHAT_TYPE, null
+    ), ProtocolVersion.MINIMUM_VERSION, ProtocolVersion.MINECRAFT_1_15_2, StateRegistry.PLAY);
+    chatPacket.prepare(new Chat(
+        ProtocolUtils.getJsonChatSerializer(ProtocolVersion.MINECRAFT_1_16).serialize(
+            LegacyComponentSerializer
+                .legacyAmpersand()
+                .deserialize(text)
+        ), Chat.CHAT_TYPE, null
+    ), ProtocolVersion.MINECRAFT_1_16, ProtocolVersion.MAXIMUM_VERSION, StateRegistry.PLAY);
+    return processCompression(chatPacket);
+  }
+
   private List<PreparedPacket<UpdateLight>> createUpdateLightPackets() {
     List<PreparedPacket<UpdateLight>> packets = new ArrayList<>();
     for (SimpleChunk chunk : virtualWorld.getChunks()) {
@@ -162,19 +246,15 @@ public class ServerPackets {
     return processCompression(update);
   }
 
-  private PreparedPacket<Disconnect> createDisconnectPacket(String message,
-      StateRegistry protocol) {
+  private PreparedPacket<Disconnect> createDisconnectPacket(String message) {
     Component component = LegacyComponentSerializer.legacyAmpersand().deserialize(message);
     PreparedPacket<Disconnect> disconnect = new PreparedPacket<>();
     disconnect.prepare(Disconnect.create(component, ProtocolVersion.MINECRAFT_1_7_2),
-        ProtocolVersion.MINECRAFT_1_7_2, ProtocolVersion.MINECRAFT_1_15_2, protocol);
+        ProtocolVersion.MINECRAFT_1_7_2, ProtocolVersion.MINECRAFT_1_15_2, StateRegistry.LOGIN);
     disconnect.prepare(Disconnect.create(component, ProtocolVersion.MINECRAFT_1_16),
-        ProtocolVersion.MINECRAFT_1_16, protocol);
-    if (protocol == StateRegistry.LOGIN) {
-      disconnect.finish();
-      return disconnect;
-    }
-    return processCompression(disconnect);
+        ProtocolVersion.MINECRAFT_1_16, StateRegistry.LOGIN);
+    disconnect.finish();
+    return disconnect;
   }
 
   private <T extends PreparedPacket<?>> T processCompression(T preparedPacket) {
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/VirtualServer.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/VirtualServer.java
index d9b75a41..0c19ad27 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/VirtualServer.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/VirtualServer.java
@@ -20,20 +20,24 @@
 package net.elytrium.elytraproxy.botfilter.server;
 
 import com.velocitypowered.proxy.connection.MinecraftConnection;
+import com.velocitypowered.proxy.connection.MinecraftSessionHandler;
 import com.velocitypowered.proxy.connection.client.ConnectedPlayer;
 import com.velocitypowered.proxy.protocol.StateRegistry;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentMap;
 import lombok.Getter;
 import net.elytrium.elytraproxy.ElytraProxy;
+import net.elytrium.elytraproxy.botfilter.protocol.cache.CachedCaptcha;
+import net.elytrium.elytraproxy.botfilter.protocol.cache.CaptchaHandler;
 import net.elytrium.elytraproxy.botfilter.protocol.cache.PacketCompressor;
 
-public class VirtualServer {
+public class VirtualServer implements MinecraftSessionHandler {
 
   @Getter
   private final ElytraProxy elytraProxy;
   private final ConcurrentMap<String, BotFilterSessionHandler>
       activeConnections = new ConcurrentHashMap<>();
+  @Getter
   private final ServerPackets packets;
 
   public VirtualServer(ElytraProxy elytraProxy) {
@@ -61,9 +65,23 @@ public class VirtualServer {
     user.getOriginalHandler().completeLoginProtocol(player, false);
     connection.setState(StateRegistry.BotFilter);
     packets.getSpawnPackets().write(connection, player.isOnlineMode());
+    sendCaptcha(user);
     connection.flush();
   }
 
+  public void sendCaptcha(BotFilterSessionHandler handler) {
+    CaptchaHandler captchaHandler = CachedCaptcha.randomCaptcha();
+    String captchaAnswer = captchaHandler.getAnswer();
+    handler.setCaptchaAnswer(captchaAnswer);
+    MinecraftConnection connection = handler.getPlayer().getConnection();
+    System.out.println("Sent slot captcha");
+    connection.write(packets.getSetSlot());
+    System.out.println("Sent map captcha");
+    connection.write(captchaHandler.getMap());
+    System.out.println("Sent chat captcha");
+    connection.write(packets.getCheckingCaptchaChat());
+  }
+
   public void disconnected(BotFilterSessionHandler botFilterConnection) {
     activeConnections.remove(botFilterConnection.getPlayer().getUsername().toLowerCase());
   }
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/world/VirtualWorld.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/world/VirtualWorld.java
index e92d6019..b4c6a728 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/world/VirtualWorld.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/world/VirtualWorld.java
@@ -31,9 +31,9 @@ import lombok.Getter;
 import lombok.NonNull;
 import net.elytrium.elytraproxy.botfilter.protocol.data.registry.Biome;
 import net.elytrium.elytraproxy.botfilter.protocol.data.registry.Dimension;
+import net.elytrium.elytraproxy.botfilter.server.world.chunk.SimpleChunk;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
-import net.elytrium.elytraproxy.botfilter.server.world.chunk.SimpleChunk;
 
 public class VirtualWorld {
 
@@ -71,7 +71,7 @@ public class VirtualWorld {
   }
 
   public Biome getBiome(int x, int y, int z) {
-    return chunkAction(x, z, (c) -> c.getBiome(x, y, z), () -> Biome.PLAINTS);
+    return chunkAction(x, z, (c) -> c.getBiome(x, y, z), () -> Biome.PLAINS);
   }
 
   public byte getBlockLight(int x, int y, int z) {
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/world/chunk/SimpleChunk.java b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/world/chunk/SimpleChunk.java
index db6ca3a7..2986366f 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/world/chunk/SimpleChunk.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/botfilter/server/world/chunk/SimpleChunk.java
@@ -50,7 +50,7 @@ public class SimpleChunk {
     this.world = world;
     this.x = x;
     this.z = z;
-    Arrays.fill(biomes, Biome.PLAINTS);
+    Arrays.fill(biomes, Biome.PLAINS);
     //Arrays.fill(light, LightSection.DEFAULT);
   }
 
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/commands/ElytraProxyCommand.java b/proxy/src/main/java/net/elytrium/elytraproxy/commands/ElytraProxyCommand.java
index 4a622823..eba6bf48 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/commands/ElytraProxyCommand.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/commands/ElytraProxyCommand.java
@@ -75,22 +75,16 @@ public class ElytraProxyCommand implements SimpleCommand {
   }
 
   private void usage(CommandSource source) {
-    source.sendMessage(Identity.nil(), Component.text("§eThis server is using ElytraProxy"
-          + " that based on Velocity Proxy"));
-    source.sendMessage(Identity.nil(), Component.text("§eOriginal Velocity by astei"
-          + " and many-many contributors"));
-    source.sendMessage(Identity.nil(), Component.text("§eElytraProxy by Elytrium dev team"));
-    source.sendMessage(Identity.nil(), Component.text("§dMade With Love ❤"));
-    source.sendMessage(Identity.nil(), Component.text("§a"
-          + "https://github.com/Elytrium/ElytraProxy"));
+    source.sendMessage(Identity.nil(), Component.text("§eThis server is using ElytraProxy by Elytrium devs team"));
+    source.sendMessage(Identity.nil(), Component.text("§eOriginal Velocity by astei and many-many contributors"));
+    source.sendMessage(Identity.nil(), Component.text("§ahttps://github.com/Elytrium/ElytraProxy"));
     if (source.hasPermission("elytraproxy.command.reload")
         || source.hasPermission("elytraproxy.command.stats")
         || source.hasPermission("elytraproxy.command.commandspy")) {
       source.sendMessage(Identity.nil(), Component.text("§aCommands: "));
       source.sendMessage(Identity.nil(), Component.text("§6/elytraproxy reload §7-§f"
           + " reloads proxy server itself, without plugins"));
-      source.sendMessage(Identity.nil(), Component.text("§6/elytraproxy stats §7-§f"
-          + " enable action bar statistic"));
+      source.sendMessage(Identity.nil(), Component.text("§6/elytraproxy stats §7-§f enable action bar statistics"));
     }
   }
 
@@ -128,8 +122,7 @@ public class ElytraProxyCommand implements SimpleCommand {
 
     if (currentArgs.length == 1) {
       return commands.entrySet().stream()
-          .filter(e -> e.getKey().regionMatches(true, 0, currentArgs[0], 0,
-              currentArgs[0].length()))
+          .filter(e -> e.getKey().regionMatches(true, 0, currentArgs[0], 0, currentArgs[0].length()))
           .filter(e -> e.getValue().hasPermission(source, new String[0]))
           .map(Map.Entry::getKey)
           .collect(ImmutableList.toImmutableList());
@@ -176,7 +169,7 @@ public class ElytraProxyCommand implements SimpleCommand {
     public void execute(CommandSource source, String @NonNull [] args) {
       try {
         if (server.reloadConfiguration()) {
-          source.sendMessage(Identity.nil(),
+          source.sendMessage(
               LegacyComponentSerializer
                   .legacyAmpersand()
                   .deserialize(Settings.IMP.MESSAGES.VELOCITY.COMMAND.RELOAD_SUCCESS
@@ -184,7 +177,7 @@ public class ElytraProxyCommand implements SimpleCommand {
                       .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
                   ));
         } else {
-          source.sendMessage(Identity.nil(),
+          source.sendMessage(
               LegacyComponentSerializer
                   .legacyAmpersand()
                   .deserialize(Settings.IMP.MESSAGES.VELOCITY.COMMAND.RELOAD_FAILURE
@@ -194,7 +187,7 @@ public class ElytraProxyCommand implements SimpleCommand {
         }
       } catch (Exception e) {
         logger.error("Unable to reload configuration", e);
-        source.sendMessage(Identity.nil(),
+        source.sendMessage(
             LegacyComponentSerializer
                 .legacyAmpersand()
                 .deserialize(Settings.IMP.MESSAGES.VELOCITY.COMMAND.RELOAD_FAILURE
@@ -237,6 +230,7 @@ public class ElytraProxyCommand implements SimpleCommand {
                           .replace("{1}", String.valueOf(statistics.getConnectionsPerSecond()))
                           .replace("{2}", String.valueOf(statistics.getPingsPerSecond()))
                           .replace("{3}", String.valueOf(statistics.getTotalConnectionsPerSecond()))
+                          .replace("{4}", String.valueOf(player.getPing()))
                       ));
             }
           } catch (Exception e) {
@@ -282,10 +276,6 @@ public class ElytraProxyCommand implements SimpleCommand {
 
   private static class CommandSpy implements SubCommand {
 
-
-    private CommandSpy() {
-    }
-
     @Override
     public void execute(CommandSource source, String @NonNull [] args) {
       if (!(source instanceof Player)) {
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/commands/MessageCommand.java b/proxy/src/main/java/net/elytrium/elytraproxy/commands/MessageCommand.java
index c93d30cb..48a276c8 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/commands/MessageCommand.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/commands/MessageCommand.java
@@ -88,7 +88,8 @@ public class MessageCommand implements SimpleCommand {
     if (playerOptional.isPresent()) {
       Player player = playerOptional.get();
       String message = String.join(" ", Arrays.copyOfRange(args, 1, args.length - 1));
-      String author = (source instanceof Player) ? ((Player) source).getUsername()
+      String author = (source instanceof Player)
+          ? ((Player) source).getUsername()
           : Settings.IMP.MESSAGES.ELYTRAPROXY.IF_CONSOLE
               .replace("{NL}", "\n")
               .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX);
@@ -108,7 +109,7 @@ public class MessageCommand implements SimpleCommand {
       source.sendMessage(
           LegacyComponentSerializer
               .legacyAmpersand()
-              .deserialize("&cИгрок не найден, или находится не в сети"
+              .deserialize("&cИгрок не найден, или его нет в сети"
                   .replace("{NL}", "\n")
                   .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX)
               ));
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/commands/SendCommand.java b/proxy/src/main/java/net/elytrium/elytraproxy/commands/SendCommand.java
index b4480320..cd45e5c0 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/commands/SendCommand.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/commands/SendCommand.java
@@ -90,7 +90,8 @@ public class SendCommand implements SimpleCommand {
       return;
     }
 
-    String sender = (source instanceof Player) ? ((Player) source).getUsername()
+    String sender = (source instanceof Player)
+        ? ((Player) source).getUsername()
         : Settings.IMP.MESSAGES.ELYTRAPROXY.IF_CONSOLE
             .replace("{NL}", "\n")
             .replace("{PRFX}", Settings.IMP.MESSAGES.ELYTRAPROXY.PREFIX);
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/config/Config.java b/proxy/src/main/java/net/elytrium/elytraproxy/config/Config.java
index 9b5cedfd..5735fe5b 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/config/Config.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/config/Config.java
@@ -245,7 +245,7 @@ public class Config {
       StringBuilder m = new StringBuilder();
       for (Object obj : listValue) {
         m.append(
-          System.lineSeparator()).append(spacing).append("- ").append(toYamlString(obj, spacing));
+            System.lineSeparator()).append(spacing).append("- ").append(toYamlString(obj, spacing));
       }
       return m.toString();
     }
@@ -317,9 +317,7 @@ public class Config {
               instance = value;
               split = Arrays.copyOfRange(split, 1, split.length);
               continue;
-            } catch (NoSuchFieldException
-                    | NoSuchMethodException
-                    | InvocationTargetException ignore) {
+            } catch (NoSuchFieldException | NoSuchMethodException | InvocationTargetException ignore) {
               //
             }
             return null;
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/config/Settings.java b/proxy/src/main/java/net/elytrium/elytraproxy/config/Settings.java
index 2751d0bc..44b777a3 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/config/Settings.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/config/Settings.java
@@ -37,16 +37,13 @@ public class Settings extends Config {
     @Create
     public MESSAGES.ELYTRAPROXY ELYTRAPROXY;
 
-    @Create
-    public MESSAGES.VELOCITY VELOCITY;
-
     public static class ELYTRAPROXY {
       public String PREFIX = "&5&l[ElytraProxy]";
       public String ALERT_PREFIX = "&8[&4Alert&8]&f ";
       public String IF_CONSOLE = "CONSOLE";
       public String ALERT_MESSAGE_NEEDED = "{PRFX} &fYou must supply a message.";
       public String ALERT_SERVER_EMPTY = "{PRFX} &fServer is empty.";
-      public String STATS_FORMAT = "&c&lTotal Blocked: &6&l{0}&c&l | Connections Per Second: &6&l{1}&c&l | Pings Per Second: &6&l{2}&c&l | Total Connections Per Second: &6&l{3}";
+      public String STATS_FORMAT = "&c&lTotal Blocked: &6&l{0} &c&l| Connections Per Second: &6&l{1} &c&l| Pings Per Second: &6&l{2} &c&l| Total Connections Per Second: &6&l{3} &c&l| Ping: &6&l{4}";
       public String STATS_ENABLED = "{PRFX} &fNow you see statistics in your action bar.";
       public String STATS_DISABLED = "{PRFX} &fYou're no longer see statistics in your action bar.";
       public String FIND_USERNAME_NEEDED = "{PRFX} &fPlease follow this command by a user name.";
@@ -64,8 +61,8 @@ public class Settings extends Config {
       @Create
       public MESSAGES.ELYTRAPROXY.KICK KICK;
 
-      @Comment("Kick messages")
       public static class KICK {
+        @Comment("Kick messages")
         public String PROXY_SHUTTING_DOWN = "&cProxy shutting down.";
         public String PROTOCOL_BLOCKED = "&c1.7.x not supported";
         public String NICK_BLOCKED = "&cYour nickname contains forbidden phrases.";
@@ -79,15 +76,16 @@ public class Settings extends Config {
       */
     }
 
-    @Comment({
-        "You may found other languages translations here: ",
-        "https://github.com/VelocityPowered/Velocity/tree/dev/2.0.0/proxy/src/main/resources/com/velocitypowered/proxy/l10n"
-    })
+    @Create
+    public MESSAGES.VELOCITY VELOCITY;
+
     public static class VELOCITY {
+      @Comment({
+          "You may found other languages translations here: ",
+          "https://github.com/VelocityPowered/Velocity/tree/dev/3.0.0/proxy/src/main/resources/com/velocitypowered/proxy/l10n"
+      })
       @Create
       public MESSAGES.VELOCITY.ERROR ERROR;
-      @Create
-      public MESSAGES.VELOCITY.COMMAND COMMAND;
 
       public static class ERROR {
         public String ALREADY_CONNECTED = "&cYou are already connected to this server!";
@@ -107,6 +105,9 @@ public class Settings extends Config {
         public String EXTREMELY_OLD_CLIENT = "&cYour client is extremely old. Please update to a newer version of Minecraft.";
       }
 
+      @Create
+      public MESSAGES.VELOCITY.COMMAND COMMAND;
+
       public static class COMMAND {
         public String GENERIC_ERROR = "{PRFX} &fAn error occurred while running this command.";
         public String COMMAND_DOES_NOT_EXIST = "{PRFX} &fThis command does not exist.";
@@ -154,14 +155,11 @@ public class Settings extends Config {
     @Create
     public MAIN_SETTINGS.HOSTNAMES_MANAGER HOSTNAMES_MANAGER;
 
-    @Create
-    public MAIN_SETTINGS.MAINTENANCE MAINTENANCE;
-
-    @Comment({
-        "Allows you to reject connection to the server for all domains except yours and direct ip",
-        "Most likely does not work with SRV records"
-    })
     public static class HOSTNAMES_MANAGER {
+      @Comment({
+          "Allows you to reject connection to the server for all domains except yours and direct ip",
+          "Most likely does not work with SRV records"
+      })
       public boolean ENABLE = false;
       @Comment("If whitelist enabled, all hostnames (domains and ips) in list WON'T BE BLOCKED, but other hostnames WILL BE BLOCKED")
       public boolean WHITELIST = true;
@@ -171,15 +169,19 @@ public class Settings extends Config {
       @Comment("IP's in this list will be ignored in check.")
       public List<String> IGNORED_IPS = Arrays.asList("127.0.0.1", "your-haproxy-ip");
     }
+
     @Comment("Players who are on these servers will not be counted in ping request and in the query request.")
     public List<String> IGNORE_ONLINE_AT = Arrays.asList("auth");
 
+    @Create
+    public MAIN_SETTINGS.MAINTENANCE MAINTENANCE;
+
     public static class MAINTENANCE {
       public boolean ENABLED = false;
       public String PING_VERSION = "Maintenance";
       public String MOTD = "&cMaintenance, please wait.";
       public String DISCONNECT_REASON = "&cSorry, but now server is not available due to maintenance";
-      public List<String> IGNORED_PLAYERS = Arrays.asList("4anonymous4");
+      public List<String> IGNORED_PLAYERS = Arrays.asList("mdxd44");
     }
   }
 
@@ -190,6 +192,7 @@ public class Settings extends Config {
     public boolean ENABLE = true;
     public boolean CHECK_CLIENT_SETTINGS = true;
     public boolean CHECK_CLIENT_BRAND = true;
+    public int CAPTCHA_ATTEMPTS = 2;
     @Comment({
         "If the player's nickname contains something from this list, hes connection will be rejected",
         "In lowercase"
@@ -197,6 +200,55 @@ public class Settings extends Config {
     public List<String> BANNED_NICK_PATTERNS = Arrays.asList(
         "dropbot", "mcspam", "mcdrop", "mcrage", "mcstorm", "extremebot", "cipher", "biboran"
     );
+
+    @Create
+    public ANTIBOT.CAPTCHA_GENERATOR CAPTCHA_GENERATOR;
+
+    public static class CAPTCHA_GENERATOR {
+      @Comment("Path to the background image to draw on captcha (any format, 128x128), none if empty")
+      public String BACKPLATE_PATH = "";
+      @Comment("Path to the font files to draw on captcha (ttf), can be empty")
+      public List<String> FONTS_PATH = List.of("");
+      @Comment("Use standard fonts(SANS_SERIF/SERIF/MONOSPACED), use false only if you provide fonts path")
+      public boolean USE_STANDARD_FONTS = true;
+      public int FONT_SIZE = 50;
+      public boolean FONT_OUTLINE = true;
+      public boolean FONT_ROTATE = true;
+      public boolean FONT_RIPPLE = true;
+      public boolean FONT_BLUR = true;
+      public String PATTERN = "abcdefghijklmnopqrtuvwxyz1234567890";
+      public int LENGTH = 3;
+    }
+
+    @Create
+    public ANTIBOT.BOTFILTER_DIMENSION BOTFILTER_DIMENSION;
+
+    public static class BOTFILTER_DIMENSION {
+      @Comment({
+          "Normal dimension - 0",
+          "The end - 1",
+          "Nether - 2"
+      })
+      public int ID = 1;
+      @Comment({
+          "Normal dimension - minecraft:overworld",
+          "The end - minecraft:the_end",
+          "Nether - minecraft:nether"
+      })
+      public String MODERN_KEY = "minecraft:the_end";
+      public boolean HARDCORE_HEARTS = true;
+    }
+
+    @Create
+    public ANTIBOT.STRINGS STRINGS;
+
+    public static class STRINGS {
+      public String CHECKING = "подожди бля";
+      public String CHECKING_CAPTCHA = "введи капчу еблан";
+      public String SUCCESSFUL = "норм ебать";
+      public String CAPTCHA_FAILED = "капча бля не верно введена";
+      public String FALLING_CHECK_FAILED = "хуле не падаем ботяра";
+    }
   }
 
   /*
@@ -214,11 +266,10 @@ public class Settings extends Config {
 
   @Comment("Database settings")
   public static class DATABASE {
-    //@Comment("Тип датабазы. mysql или mysql))")
+    //@Comment("Тип базы данных, mysql или mysql))")
     //public String STORAGE_TYPE = "mysql";
     @Comment("Settings for MYSQL")
-    public String HOSTNAME = "127.0.0.1";
-    public int PORT = 3306;
+    public String HOSTNAME = "127.0.0.1:3306";
     public String USER = "user";
     public String PASSWORD = "password";
     public String DATABASE = "elytraproxy";
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/config/helpers/Configuration.java b/proxy/src/main/java/net/elytrium/elytraproxy/config/helpers/Configuration.java
index 00e952da..9ff95ec2 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/config/helpers/Configuration.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/config/helpers/Configuration.java
@@ -63,8 +63,8 @@ public final class Configuration {
       String key = (entry.getKey() == null) ? "null" : entry.getKey().toString();
 
       if (entry.getValue() instanceof Map) {
-        this.self.put(key, new Configuration((Map) entry.getValue(),
-            (defaults == null) ? null : defaults.getSection(key)));
+        this.self
+            .put(key, new Configuration((Map) entry.getValue(), (defaults == null) ? null : defaults.getSection(key)));
       } else {
         this.self.put(key, entry.getValue());
       }
@@ -110,22 +110,21 @@ public final class Configuration {
     return (val != null) ? (T) val : def;
   }
 
-  public Object get(String path) {
-    return get(path, getDefault(path));
-  }
-
   public boolean contains(String path) {
     return get(path, null) != null;
   }
 
+  public Object get(String path) {
+    return get(path, getDefault(path));
+  }
+
   public Object getDefault(String path) {
     return (defaults == null) ? null : defaults.get(path);
   }
 
   public void set(String path, Object value) {
     if (value instanceof Map) {
-      value = new Configuration((Map) value,
-          (defaults == null) ? null : defaults.getSection(path));
+      value = new Configuration((Map) value, (defaults == null) ? null : defaults.getSection(path));
     }
 
     Configuration section = getSectionFor(path);
@@ -143,9 +142,9 @@ public final class Configuration {
   /*------------------------------------------------------------------------*/
   public Configuration getSection(String path) {
     Object def = getDefault(path);
-    return (Configuration) get(path,
-        (def instanceof Configuration) ? def : new Configuration((
-            defaults == null) ? null : defaults.getSection(path)));
+    return (Configuration) get(path, (def instanceof Configuration)
+        ? def
+        : new Configuration((defaults == null) ? null : defaults.getSection(path)));
   }
 
   /**
@@ -338,6 +337,7 @@ public final class Configuration {
         result.add((Character) object);
       }
     }
+
     return result;
   }
 
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/config/helpers/ConfigurationProvider.java b/proxy/src/main/java/net/elytrium/elytraproxy/config/helpers/ConfigurationProvider.java
index f822dec9..c0a42787 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/config/helpers/ConfigurationProvider.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/config/helpers/ConfigurationProvider.java
@@ -43,8 +43,7 @@ import java.util.Map;
 
 public abstract class ConfigurationProvider {
 
-  private static final Map<Class<? extends ConfigurationProvider>,
-      ConfigurationProvider> providers = new HashMap<>();
+  private static final Map<Class<? extends ConfigurationProvider>, ConfigurationProvider> providers = new HashMap<>();
 
   static {
     try {
@@ -52,6 +51,12 @@ public abstract class ConfigurationProvider {
     } catch (NoClassDefFoundError ex) {
       // Ignore, no SnakeYAML
     }
+
+    try {
+      providers.put(JsonConfiguration.class, new JsonConfiguration());
+    } catch (NoClassDefFoundError ex) {
+      // Ignore, no Gson
+    }
   }
 
   public static ConfigurationProvider getProvider(Class<? extends ConfigurationProvider> provider) {
@@ -78,4 +83,4 @@ public abstract class ConfigurationProvider {
   public abstract Configuration load(String string);
 
   public abstract Configuration load(String string, Configuration defaults);
-}
+}
\ No newline at end of file
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/config/helpers/JsonConfiguration.java b/proxy/src/main/java/net/elytrium/elytraproxy/config/helpers/JsonConfiguration.java
new file mode 100644
index 00000000..90d42c71
--- /dev/null
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/config/helpers/JsonConfiguration.java
@@ -0,0 +1,131 @@
+/*
+ * This file is part of BungeeCord, licensed under the BSD License (BSD).
+ *
+ * Copyright (c) 2012 md_5
+ *
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ *     * Redistributions of source code must retain the above copyright notice,
+ *       this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright notice,
+ *       this list of conditions and the following disclaimer in the documentation
+ *       and/or other materials provided with the distribution.
+ *     * The name of the author may not be used to endorse or promote products derived
+ *       from this software without specific prior written permission.
+ *     * You may not use the software for commercial software hosting services without
+ *       written permission from the author.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+ * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+package net.elytrium.elytraproxy.config.helpers;
+
+import com.google.common.base.Charsets;
+import com.google.gson.Gson;
+import com.google.gson.GsonBuilder;
+import com.google.gson.JsonElement;
+import com.google.gson.JsonSerializationContext;
+import com.google.gson.JsonSerializer;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStreamWriter;
+import java.io.Reader;
+import java.io.Writer;
+import java.lang.reflect.Type;
+import java.util.LinkedHashMap;
+import java.util.Map;
+import lombok.AccessLevel;
+import lombok.NoArgsConstructor;
+
+@NoArgsConstructor(access = AccessLevel.PACKAGE)
+public class JsonConfiguration extends ConfigurationProvider {
+
+  private final Gson json = new GsonBuilder().serializeNulls().setPrettyPrinting()
+      .registerTypeAdapter(Configuration.class, new JsonSerializer<Configuration>() {
+        @Override
+        public JsonElement serialize(Configuration src, Type typeOfSrc, JsonSerializationContext context) {
+          return context.serialize(((Configuration) src).self);
+        }
+      }).create();
+
+  @Override
+  public void save(Configuration config, File file) throws IOException {
+    try (Writer writer = new OutputStreamWriter(new FileOutputStream(file), Charsets.UTF_8)) {
+      save(config, writer);
+    }
+  }
+
+  @Override
+  public void save(Configuration config, Writer writer) {
+    json.toJson(config.self, writer);
+  }
+
+  @Override
+  public Configuration load(File file) throws IOException {
+    return load(file, null);
+  }
+
+  @Override
+  public Configuration load(File file, Configuration defaults) throws IOException {
+    try (FileInputStream is = new FileInputStream(file)) {
+      return load(is, defaults);
+    }
+  }
+
+  @Override
+  public Configuration load(Reader reader) {
+    return load(reader, null);
+  }
+
+  @Override
+  @SuppressWarnings("unchecked")
+  public Configuration load(Reader reader, Configuration defaults) {
+    Map<String, Object> map = json.fromJson(reader, LinkedHashMap.class);
+    if (map == null) {
+      map = new LinkedHashMap<>();
+    }
+    return new Configuration(map, defaults);
+  }
+
+  @Override
+  public Configuration load(InputStream is) {
+    return load(is, null);
+  }
+
+  @Override
+  public Configuration load(InputStream is, Configuration defaults) {
+    return load(new InputStreamReader(is, Charsets.UTF_8), defaults);
+  }
+
+  @Override
+  public Configuration load(String string) {
+    return load(string, null);
+  }
+
+  @Override
+  @SuppressWarnings("unchecked")
+  public Configuration load(String string, Configuration defaults) {
+    Map<String, Object> map = json.fromJson(string, LinkedHashMap.class);
+    if (map == null) {
+      map = new LinkedHashMap<>();
+    }
+    return new Configuration(map, defaults);
+  }
+}
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/database/Database.java b/proxy/src/main/java/net/elytrium/elytraproxy/database/Database.java
index 09325f56..d5934464 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/database/Database.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/database/Database.java
@@ -28,9 +28,7 @@ public abstract class Database {
 
   public abstract void insertMap(String table, Map<String, Object> toInsert, boolean update);
 
-  public abstract void updateMap(String table,
-                                 Map<String, Object> whereUpdate,
-                                 Map<String, Object> toUpdate);
+  public abstract void updateMap(String table, Map<String, Object> whereUpdate, Map<String, Object> toUpdate);
 
   public abstract void deleteMap(String table, Map<String, Object> whereDelete);
 
diff --git a/proxy/src/main/java/net/elytrium/elytraproxy/database/MySqlDatabase.java b/proxy/src/main/java/net/elytrium/elytraproxy/database/MySqlDatabase.java
index 1c705b50..b3c43a25 100644
--- a/proxy/src/main/java/net/elytrium/elytraproxy/database/MySqlDatabase.java
+++ b/proxy/src/main/java/net/elytrium/elytraproxy/database/MySqlDatabase.java
@@ -38,16 +38,14 @@ public class MySqlDatabase extends Database {
 
   /**
    * Initializes and connects to MySQL Database.
-   * @param host Hostname to connect, with port
+   *
+   * @param host     Hostname to connect, with port
    * @param database Database name
-   * @param user Username
+   * @param user     Username
    * @param password Password of user
    * @throws SQLException Throws if connection was unsuccessful
    */
-  public MySqlDatabase(String host,
-                       String database,
-                       String user,
-                       String password) throws SQLException {
+  public MySqlDatabase(String host, String database, String user, String password) throws SQLException {
     String url = "jdbc:mysql://" + host + "/" + database
         + "?autoReconnect=true&cmaxReconnets=5&initialTimeout=1&useSSL=false";
 
@@ -87,9 +85,7 @@ public class MySqlDatabase extends Database {
   }
 
   @Override
-  public void updateMap(String table,
-                        Map<String, Object> whereUpdate,
-                        Map<String, Object> toUpdate) {
+  public void updateMap(String table, Map<String, Object> whereUpdate, Map<String, Object> toUpdate) {
     String where = entryFromStream(whereUpdate.entrySet().stream(), " AND ");
     String set = entryFromStream(toUpdate.entrySet().stream(), ", ");
 
@@ -171,11 +167,8 @@ public class MySqlDatabase extends Database {
   }
 
   private <T> Map<String, Object> serializeToMap(T from, Class<T> type)
-      throws NoSuchMethodException,
-      IllegalAccessException,
-      InvocationTargetException,
-      InstantiationException,
-      SQLException {
+      throws NoSuchMethodException, IllegalAccessException,
+      InvocationTargetException, InstantiationException, SQLException {
 
     Map<String, Object> map = new HashMap<>();
 
@@ -190,11 +183,8 @@ public class MySqlDatabase extends Database {
   }
 
   private <T> T serializeFromSet(ResultSet set, Class<T> type)
-      throws NoSuchMethodException,
-      IllegalAccessException,
-      InvocationTargetException,
-      InstantiationException,
-      SQLException {
+      throws NoSuchMethodException, IllegalAccessException,
+      InvocationTargetException, InstantiationException, SQLException {
 
     T result = type.getConstructor().newInstance();
 
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages.properties
deleted file mode 100644
index ee8e6cc2..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=You are already connected to this server!
-velocity.error.already-connected-proxy=You are already connected to this proxy!
-velocity.error.already-connecting=You are already trying to connect to a server!
-velocity.error.cant-connect=Unable to connect to {0}: {1}
-velocity.error.connecting-server-error=Unable to connect you to {0}. Please try again later.
-velocity.error.connected-server-error=Your connection to {0} encountered a problem.
-velocity.error.internal-server-connection-error=An internal server connection error occurred.
-velocity.error.logging-in-too-fast=You are logging in too fast, try again later.
-velocity.error.online-mode-only=You are not logged into your Minecraft account. If you are logged into your Minecraft account, try restarting your Minecraft client.
-velocity.error.player-connection-error=An internal error occurred in your connection.
-velocity.error.modern-forwarding-needs-new-client=This server is only compatible with Minecraft 1.13 and above.
-velocity.error.modern-forwarding-failed=Your server did not send a forwarding request to the proxy. Make sure the server is configured for Velocity forwarding.
-velocity.error.moved-to-new-server=You were kicked from {0}: {1}
-velocity.error.no-available-servers=There are no available servers to connect you to. Try again later or contact an admin.
-
-# Commands
-velocity.command.generic-error=An error occurred while running this command.
-velocity.command.command-does-not-exist=This command does not exist.
-
-velocity.command.players-only=Only players can run this command.
-velocity.command.server-does-not-exist=The specified server {0} does not exist.
-
-velocity.command.server-current-server=You are currently connected to {0}.
-velocity.command.server-too-many=There are too many servers set up. Use tab completion to view all servers available.
-velocity.command.server-available=Available servers:
-velocity.command.server-tooltip-player-online={0} player online
-velocity.command.server-tooltip-players-online={0} players online
-velocity.command.server-tooltip-current-server=Currently connected to this server
-velocity.command.server-tooltip-offer-connect-server=Click to connect to this server
-
-velocity.command.glist-player-singular={0} player is currently connected to the proxy.
-velocity.command.glist-player-plural={0} players are currently connected to the proxy.
-velocity.command.glist-view-all=To view all players on servers, use /glist all.
-
-velocity.command.reload-success=Velocity configuration successfully reloaded.
-velocity.command.reload-failure=Unable to reload your Velocity configuration. Check the console for more details.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} is licensed under the terms of the GNU General Public License v3.
-
-velocity.command.no-plugins=There are no plugins currently installed.
-velocity.command.plugins-list=Plugins: {0}
-velocity.command.plugin-tooltip-website=Website: {0}
-velocity.command.plugin-tooltip-author=Author: {0}
-velocity.command.plugin-tooltip-authors=Authors: {0}
-
-velocity.command.dump-uploading=Uploading gathered information...
-velocity.command.dump-send-error=An error occurred while communicating with the Velocity servers. The servers may be temporarily unavailable or there is an issue with your network settings. You can find more information in the log or console of your Velocity server.
-velocity.command.dump-success=Created an anonymised report containing useful information about this proxy. If a developer requested it, you may share the following link with them:
-velocity.command.dump-will-expire=This link will expire in a few days.
-velocity.command.dump-server-error=An error occurred on the Velocity servers and the dump could not be completed. Please contact the Velocity staff about this problem and provide the details about this error from the Velocity console or server log.
-velocity.command.dump-offline=Likely cause: Invalid system DNS settings or no internet connection
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_ar_SA.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_ar_SA.properties
deleted file mode 100644
index b0402a15..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_ar_SA.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=أنت بالفعل متصل بهذا السيرفر\!
-velocity.error.already-connected-proxy=أنت بالفعل متصل بهذا الوكيل\!
-velocity.error.already-connecting=أنت بالفعل تحاول الاتصال بأحد السيرفرات\!
-velocity.error.cant-connect=فشل الاتصال بـ{0}\: {1}
-velocity.error.connecting-server-error=فشل الاتصال بـ{0}، حاول في وقتٍ لاحق.
-velocity.error.connected-server-error=واجه اتصالك بـ{0} مشكلة.
-velocity.error.internal-server-connection-error=حدث خطأ في الاتصال بالسيرفر الداخلي.
-velocity.error.logging-in-too-fast=لقد حاولت تسجيل الدخول كثيرًا مؤخرًا، حاول في وقتٍ لاحق.
-velocity.error.online-mode-only=لم تقم بتسجيل الدخول بحساب ماينكرافت. إذا كنت مسجل بالفعل جرب إعادة تشغيل اللعبة.
-velocity.error.player-connection-error=حدث خطأ داخلي في الاتصال الخاص بك.
-velocity.error.modern-forwarding-needs-new-client=هذا السيرفر متوافق فقط مع ماينكرافت 1.13 و ما فوق.
-velocity.error.modern-forwarding-failed=السيرفر الخاص بك لم يرسل طلب إعادة توجيه إلى الوكيل. تأكد من إعداد الخادم لإعادة التوجيه بـVelocity.
-velocity.error.moved-to-new-server=لقد تم طردك من {0}\: {1}
-velocity.error.no-available-servers=لا توجد سيرفرات متاحة للاتصال. حاول مرة أخرى أو اتصل بالأدمِن.
-
-# Commands
-velocity.command.generic-error=حدث خطأ أثناء تنفيذ هذا الأمر.
-velocity.command.command-does-not-exist=هذا الأمر غير موجود.
-
-velocity.command.players-only=يمكن للاعبين فقط تشغيل هذا الأمر.
-velocity.command.server-does-not-exist=السيرفر المطلوب {0} غير موجود.
-
-velocity.command.server-current-server=أنت الآن متصل بـ{0}
-velocity.command.server-too-many=هناك العديد من السيرفرات المتاحة، استخدم البحث بزر tab لتصفح قائمة السيرفرات.
-velocity.command.server-available=السيرفرات المتاحة\:
-velocity.command.server-tooltip-player-online=لاعب واحد متصل
-velocity.command.server-tooltip-players-online={0} لاعبين متصلون
-velocity.command.server-tooltip-current-server=انت متصل حاليًا بهذا السيرفر
-velocity.command.server-tooltip-offer-connect-server=انقر للاتصال بهذا السيرفر
-
-velocity.command.glist-player-singular=هناك لاعب واحد متصل بالوكيل.
-velocity.command.glist-player-plural=هناك {0} لاعبين متصلون بالوكيل.
-velocity.command.glist-view-all=لعرض اللاعبين على جميع السيرفرات استخدم /glist all
-
-velocity.command.reload-success=تم إعادة تحميل إعدادات Velocity بنجاح.
-velocity.command.reload-failure=فشلت إعادة تحميل إعدادات Velocity. تفقد الـconsole للمزيد من التفاصيل.
-
-velocity.command.version-copyright=حقوق الطبع والنشر 2018-2021 {0}. {1} مرخصة بموجب شروط الإصدار الثالث لرخصة GNU العامة (GPLv3).
-
-velocity.command.no-plugins=لا توجد إضافات مثبتة على Velocity.
-velocity.command.plugins-list=الإضافات\: {0}
-velocity.command.plugin-tooltip-website=موقعها\: {0}
-velocity.command.plugin-tooltip-author=تصميم\: {0}
-velocity.command.plugin-tooltip-authors=تصميم\: {0}
-
-velocity.command.dump-uploading=جاري تجميع و رفع معلومات نظامك...
-velocity.command.dump-send-error=حدث خطأ أثناء الاتصال بسيرفر Velocity. قد يكون السيرفر غير متاح مؤقتاً أو هناك مشكلة في إعدادات الشبكة الخاصة بك. يمكنك العثور على مزيد من المعلومات في log أو console وكيل Velocity الخاص بك.
-velocity.command.dump-success=تم إنشاء تقرير مفصل يحتوي على معلومات مفيدة عن الوكيل الخاص بك. إذا طلبه المطور، يمكنك مشاركة الرابط التالي معه\:
-velocity.command.dump-will-expire=تنتهي صلاحية هذا الرابط خلال بضعة أيام.
-velocity.command.dump-server-error=حدث خطأ في سيرفر Velocity و تعذر إكمال مشاركة البيانات. الرجاء الاتصال بطاقم Velocity حيال هذه المشكلة وتقديم التفاصيل الخطأ من الـconsole أو log السيرفر.
-velocity.command.dump-offline=السبب المحتمل\: إعدادات الـDNS غير صالحة أو لا يوجد اتصال بالإنترنت
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_bg_BG.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_bg_BG.properties
deleted file mode 100644
index 32d2c70e..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_bg_BG.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=You are already connected to this server\!
-velocity.error.already-connected-proxy=You are already connected to this proxy\!
-velocity.error.already-connecting=You are already trying to connect to a server\!
-velocity.error.cant-connect=Unable to connect to {0}\: {1}
-velocity.error.connecting-server-error=Unable to connect you to {0}. Please try again later.
-velocity.error.connected-server-error=Your connection to {0} encountered a problem.
-velocity.error.internal-server-connection-error=An internal server connection error occurred.
-velocity.error.logging-in-too-fast=You are logging in too fast, try again later.
-velocity.error.online-mode-only=You are not logged into your Minecraft account. If you are logged into your Minecraft account, try restarting your Minecraft client.
-velocity.error.player-connection-error=An internal error occurred in your connection.
-velocity.error.modern-forwarding-needs-new-client=This server is only compatible with Minecraft 1.13 and above.
-velocity.error.modern-forwarding-failed=Your server did not send a forwarding request to the proxy. Make sure the server is configured for Velocity forwarding.
-velocity.error.moved-to-new-server=You were kicked from {0}\: {1}
-velocity.error.no-available-servers=There are no available servers to connect you to. Try again later or contact an admin.
-
-# Commands
-velocity.command.generic-error=An error occurred while running this command.
-velocity.command.command-does-not-exist=This command does not exist.
-
-velocity.command.players-only=Only players can run this command.
-velocity.command.server-does-not-exist=The specified server {0} does not exist.
-
-velocity.command.server-current-server=You are currently connected to {0}.
-velocity.command.server-too-many=There are too many servers set up. Use tab completion to view all servers available.
-velocity.command.server-available=Available servers\:
-velocity.command.server-tooltip-player-online={0} player online
-velocity.command.server-tooltip-players-online={0} players online
-velocity.command.server-tooltip-current-server=Currently connected to this server
-velocity.command.server-tooltip-offer-connect-server=Click to connect to this server
-
-velocity.command.glist-player-singular={0} player is currently connected to the proxy.
-velocity.command.glist-player-plural={0} players are currently connected to the proxy.
-velocity.command.glist-view-all=To view all players on servers, use /glist all.
-
-velocity.command.reload-success=Velocity configuration successfully reloaded.
-velocity.command.reload-failure=Unable to reload your Velocity configuration. Check the console for more details.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} is licensed under the terms of the GNU General Public License v3.
-
-velocity.command.no-plugins=There are no plugins currently installed.
-velocity.command.plugins-list=Plugins\: {0}
-velocity.command.plugin-tooltip-website=Website\: {0}
-velocity.command.plugin-tooltip-author=Author\: {0}
-velocity.command.plugin-tooltip-authors=Authors\: {0}
-
-velocity.command.dump-uploading=Uploading gathered information...
-velocity.command.dump-send-error=An error occurred while communicating with the Velocity servers. The servers may be temporarily unavailable or there is an issue with your network settings. You can find more information in the log or console of your Velocity server.
-velocity.command.dump-success=Created an anonymised report containing useful information about this proxy. If a developer requested it, you may share the following link with them\:
-velocity.command.dump-will-expire=This link will expire in a few days.
-velocity.command.dump-server-error=An error occurred on the Velocity servers and the dump could not be completed. Please contact the Velocity staff about this problem and provide the details about this error from the Velocity console or server log.
-velocity.command.dump-offline=Likely cause\: Invalid system DNS settings or no internet connection
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_cs_CZ.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_cs_CZ.properties
deleted file mode 100644
index ed93a674..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_cs_CZ.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=K tomuto serveru jsi již připojen\!
-velocity.error.already-connected-proxy=K tomuto proxy serveru jsi již připojen\!
-velocity.error.already-connecting=Již se pokoušíš o připojení k serveru\!
-velocity.error.cant-connect=Nepodařilo se připojit k serveru {0}\: {1}
-velocity.error.connecting-server-error=Nepodařilo se tě připojit k serveru {0}. Zkus to prosím později.
-velocity.error.connected-server-error=Nastala chyba ve tvém připojení k serveru {0}.
-velocity.error.internal-server-connection-error=V připojení k serveru se vyskytla interní chyba.
-velocity.error.logging-in-too-fast=Přihlašuješ se příliš rychle, počkej chvíli.
-velocity.error.online-mode-only=Nejsi připojen ke svému Minecraft účtu. Pokud ano, nastala chyba. Zkus restartovat hru.
-velocity.error.player-connection-error=Ve tvém připojení nastala chyba.
-velocity.error.modern-forwarding-needs-new-client=Tento server je kompatibilní pouze s verzí Minecraftu 1.13 a vyšší.
-velocity.error.modern-forwarding-failed=Tvůj server neodeslal přesměrovávací požadavek na proxy server. Ujisti se, že je server nastaven na Velocity přesměrování.
-velocity.error.moved-to-new-server=Byl jsi vyhozen ze serveru {0}\: {1}
-velocity.error.no-available-servers=Nejsou k dispozici žádné servery, ke kterým by ses mohl připojit. Zkus to později nebo kontaktuj správce.
-
-# Commands
-velocity.command.generic-error=Při vykonávání tohoto příkazu nastala chyba.
-velocity.command.command-does-not-exist=Tento příkaz neexistuje.
-
-velocity.command.players-only=Tento příkaz mohou vykonávat pouze hráči.
-velocity.command.server-does-not-exist=Zadaný server {0} neexistuje.
-
-velocity.command.server-current-server=Právě jsi připojen k serveru {0}.
-velocity.command.server-too-many=Je nastaveno příliš mnoho serverů. Klávesa tab ukáže všechny dostupné servery.
-velocity.command.server-available=Dostupné servery\:
-velocity.command.server-tooltip-player-online={0} hráč online
-velocity.command.server-tooltip-players-online=Počet hráčů online\: {0}
-velocity.command.server-tooltip-current-server=Právě jsi připojen k tomuto serveru
-velocity.command.server-tooltip-offer-connect-server=Kliknutím se připojíš k tomuto serveru
-
-velocity.command.glist-player-singular=K tomuto proxy serveru je připojen {0} hráč.
-velocity.command.glist-player-plural=Počet hráčů připojených k tomuto proxy serveru\: {0}
-velocity.command.glist-view-all=Ke zobrazení všech hráčů na všech serverech použij /glist all.
-
-velocity.command.reload-success=Konfigurace Velocity úspěšně načtena.
-velocity.command.reload-failure=Nebylo možné načíst konfiguraci Velocity. Podrobnosti jsou na konzoli.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} je licencovaný pod podmínkami GNU General Public License v3.
-
-velocity.command.no-plugins=V tuto chvíli nejsou nainstalovány žádné zásuvné moduly.
-velocity.command.plugins-list=Zásuvné moduly\: {0}
-velocity.command.plugin-tooltip-website=Webová stránka\: {0}
-velocity.command.plugin-tooltip-author=Autor\: {0}
-velocity.command.plugin-tooltip-authors=Autoři\: {0}
-
-velocity.command.dump-uploading=Nahrávání získaných informací...
-velocity.command.dump-send-error=Nastala chyba při komunikaci s Velocity servery. Servery mohou být dočasně nedostupné nebo je chyba v přístupu na internet. Podrobnosti jsou v logu a na konzoli Velocity serveru.
-velocity.command.dump-success=Byla vytvořena anonymizovaná zpráva obsahující užitečné informace o tomto serveru. Vyžádal-li si je vývojář, můžeš mu poslat nasledující odkaz\:
-velocity.command.dump-will-expire=Za několik dnů tento odkaz vyprší.
-velocity.command.dump-server-error=Na Velocity serverech se vyskytla chyba a výpis nebylo možné vytvořit. Prosím kontaktuj Velocity tým o tomto problému a poskytni mu o této chybě podrobnosti z Velocity konzole nebo z logu na serveru.
-velocity.command.dump-offline=Pravděpodobná příčina\: Neplatné systémové DNS nastavení nebo není připojení k internetu
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_da_DK.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_da_DK.properties
deleted file mode 100644
index d63e24b1..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_da_DK.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Du er allerede tilsluttet til den server\!
-velocity.error.already-connected-proxy=Du er allerede tilsluttet til proxyen\!
-velocity.error.already-connecting=Du forsøger allerede at oprette forbindelse til en server\!
-velocity.error.cant-connect=Kan ikke forbinde til {0}\: {1}
-velocity.error.connecting-server-error=Kan ikke forbinde dig til {0}. Prøv igen senere.
-velocity.error.connected-server-error=Din forbindelse til {0} stødte på et problem.
-velocity.error.internal-server-connection-error=Der opstod en intern server forbindelsesfejl.
-velocity.error.logging-in-too-fast=Du logger ind for hurtigt, prøv igen senere.
-velocity.error.online-mode-only=Du er ikke logget ind på din Minecraft-konto. Hvis du er logget ind på din Minecraft-konto, så prøv at genstarte din Minecraft-klient.
-velocity.error.player-connection-error=Der opstod en intern fejl i din forbindelse.
-velocity.error.modern-forwarding-needs-new-client=Denne server er kun kompatibel med Minecraft 1.13 og derover.
-velocity.error.modern-forwarding-failed=Din server sendte ikke en viderestillingsanmodning til proxyen. Sørg for, at serveren er konfigureret til Velocity forwarding.
-velocity.error.moved-to-new-server=Du blev smidt ud fra {0}\: {1}
-velocity.error.no-available-servers=Der er ingen tilgængelige servere at forbinde dig til. Prøv igen senere eller kontakt en administrator.
-
-# Commands
-velocity.command.generic-error=Der opstod en fejl under kørsel af denne kommando.
-velocity.command.command-does-not-exist=Denne kommando eksisterer ikke.
-
-velocity.command.players-only=Kun spillere kan køre denne kommando.
-velocity.command.server-does-not-exist=Den angivne server {0} findes ikke.
-
-velocity.command.server-current-server=Du er i øjeblikket forbundet til {0}.
-velocity.command.server-too-many=Der er sat for mange servere op. Brug tab færdiggørelse til at se alle tilgængelige servere.
-velocity.command.server-available=Tilgængelige servere\:
-velocity.command.server-tooltip-player-online={0} spiller online
-velocity.command.server-tooltip-players-online={0} spillere online
-velocity.command.server-tooltip-current-server=I øjeblikket forbundet til serveren
-velocity.command.server-tooltip-offer-connect-server=Klik for at forbinde til denne server
-
-velocity.command.glist-player-singular={0} spiller er i øjeblikket forbundet til proxyen.
-velocity.command.glist-player-plural={0} spillere er i øjeblikket forbundet til proxyen.
-velocity.command.glist-view-all=For at se alle spillere på servere, brug /glist all.
-
-velocity.command.reload-success=Velocity konfiguration blev indlæst.
-velocity.command.reload-failure=Kan ikke genindlæse din Velocity konfiguration. Tjek konsollen for flere detaljer.
-
-velocity.command.version-copyright=Ophavsret 2018-2021 {0}. {1} er licenseret under betingelserne i GNU General Public License v3.
-
-velocity.command.no-plugins=Der er ingen plugins installeret i øjeblikket.
-velocity.command.plugins-list=Plugins\: {0}
-velocity.command.plugin-tooltip-website=Hjemmeside\: {0}
-velocity.command.plugin-tooltip-author=Skaber\: {0}
-velocity.command.plugin-tooltip-authors=Skabere\: {0}
-
-velocity.command.dump-uploading=Uploader indsamlet information...
-velocity.command.dump-send-error=Der opstod en fejl under kommunikation med Velocity serverne. Serverne kan være midlertidigt utilgængelige, eller der er et problem med dine netværksindstillinger. Du kan finde mere information i loggen eller konsollen på din Velocity server.
-velocity.command.dump-success=Oprettet en anonymiseret rapport med nyttige oplysninger om denne proxy. Hvis en udvikler anmodede om det, kan du dele følgende link med dem\:
-velocity.command.dump-will-expire=Dette link udløber om et par dage.
-velocity.command.dump-server-error=Der opstod en fejl på Velocity serverne og dump kunne ikke fuldføres. Kontakt venligst Velocity personalet om dette problem og giv oplysninger om denne fejl fra Velocity konsollen eller server loggen.
-velocity.command.dump-offline=Sandsynlig årsag\: Ugyldig system DNS-indstillinger eller ingen internetforbindelse
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_de_DE.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_de_DE.properties
deleted file mode 100644
index 2094bb5f..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_de_DE.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Du bist bereits mit diesem Server verbunden\!
-velocity.error.already-connected-proxy=Du bist bereits mit diesem Proxy verbunden\!
-velocity.error.already-connecting=Du versuchst bereits eine Verbindung mit dem Server herzustellen\!
-velocity.error.cant-connect=Kein Verbindungsaufbau zu {0} möglich\: {1}
-velocity.error.connecting-server-error=Es ist derzeit nicht möglich eine Verbindung mit {0} herzustellen. Bitte versuche es später erneut.
-velocity.error.connected-server-error=Bei der Verbindung zu {0} ist ein Problem aufgetreten.
-velocity.error.internal-server-connection-error=Bei der Verbindung mit dem Server ist ein interner Fehler aufgetreten.
-velocity.error.logging-in-too-fast=Du meldest dich zu schnell an, versuche es später noch einmal.
-velocity.error.online-mode-only=Du bist nicht in deinem Minecraft Konto eingeloggt. Wenn du in deinem Minecraft Konto eingeloggt bist, versuche deinen Minecraft Client neu zu starten.
-velocity.error.player-connection-error=Bei deiner Verbindung ist ein interner Fehler aufgetreten.
-velocity.error.modern-forwarding-needs-new-client=Dieser Server ist nur mit der Minecraft Version 1.13 und höher kompatibel.
-velocity.error.modern-forwarding-failed=Dein Server hat keine Weiterleitungsanforderung an den Proxy gesendet. Stelle sicher, dass der Server für die Velocity Weiterleitung konfiguriert ist.
-velocity.error.moved-to-new-server=Du wurdest von {0} vom Server geworfen\: {1}
-velocity.error.no-available-servers=Es gibt keine verfügbaren Server mit denen du dich verbinden kannst. Versuche es später erneut oder kontaktiere einen Admin.
-
-# Commands
-velocity.command.generic-error=Beim Ausführen des Befehls ist ein Fehler aufgetreten.
-velocity.command.command-does-not-exist=Dieser Befehl existiert nicht.
-
-velocity.command.players-only=Nur Spieler können diesen Befehl ausführen.
-velocity.command.server-does-not-exist=Der angegebene Server {0} existiert nicht.
-
-velocity.command.server-current-server=Du bist derzeit mit {0} verbunden.
-velocity.command.server-too-many=Es sind zu viele Server eingerichtet. Verwende die Tabvervollständigung, um alle verfügbaren Server aufzulisten.
-velocity.command.server-available=Verfügbare Server\:
-velocity.command.server-tooltip-player-online={0} Spieler online
-velocity.command.server-tooltip-players-online={0} Spieler online
-velocity.command.server-tooltip-current-server=Du bist derzeit mit diesem Server verbunden
-velocity.command.server-tooltip-offer-connect-server=Klicke, um dich mit diesem Server zu verbinden
-
-velocity.command.glist-player-singular={0} Spieler ist derzeit mit dem Proxy verbunden.
-velocity.command.glist-player-plural={0} Spieler sind derzeit mit dem Proxy verbunden.
-velocity.command.glist-view-all=Um alle Spieler auf Servern aufzulisten, verwende /glist all.
-
-velocity.command.reload-success=Velocity-Konfiguration erfolgreich neu geladen.
-velocity.command.reload-failure=Die Velocity-Konfiguration konnte nicht neu geladen werden. Prüfe die Konsole für weitere Details.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} ist lizenziert unter den Bedingungen der GNU General Public License v3.
-
-velocity.command.no-plugins=Es sind derzeit keine Plugins installiert.
-velocity.command.plugins-list=Plugins\: {0}
-velocity.command.plugin-tooltip-website=Webseite\: {0}
-velocity.command.plugin-tooltip-author=Entwickler\: {0}
-velocity.command.plugin-tooltip-authors=Entwickler\: {0}
-
-velocity.command.dump-uploading=Erfasste Daten werden hochgeladen...
-velocity.command.dump-send-error=Bei der Kommunikation mit den Velocity-Servern ist ein Fehler aufgetreten. Diese Server sind möglicherweise vorübergehend nicht verfügbar oder es gibt ein Problem mit deinen Netzwerkeinstellungen. Weitere Informationen findest du in der Log-Datei oder in der Konsole deines Velocity-Servers.
-velocity.command.dump-success=Ein anonymisierter Bericht mit nützlichen Informationen über diesen Proxy wurde erstellt. Wenn ein Entwickler den Bericht angefordert hat, kannst über folgenden Link diesen mit ihm teilen\:
-velocity.command.dump-will-expire=Dieser Link wird in ein paar Tagen ablaufen.
-velocity.command.dump-server-error=Auf den Velocity-Servern ist ein Fehler aufgetreten und der Dump konnte nicht abgeschlossen werden. Bitte kontaktiere die Velocity-Mitarbeiter über das Problem mit Details zu diesem Fehler aus der Velocity-Konsole oder dem Serverprotokoll.
-velocity.command.dump-offline=Wahrscheinliche Ursache\: Ungültige System-DNS-Einstellungen oder keine Internetverbindung
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_es_ES.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_es_ES.properties
deleted file mode 100644
index 0cd5282c..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_es_ES.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=¡Ya estás conectado a este servidor\!
-velocity.error.already-connected-proxy=¡Ya estás conectado a este proxy\!
-velocity.error.already-connecting=¡Ya estás intentando conectarte a un servidor\!
-velocity.error.cant-connect=No se ha podido conectar a {0}\: {1}
-velocity.error.connecting-server-error=No hemos podido conectarte a {0}. Por favor, inténtalo de nuevo más tarde.
-velocity.error.connected-server-error=Tu conexión a {0} ha sufrido un problema.
-velocity.error.internal-server-connection-error=Se ha producido un error interno en la conexión al servidor.
-velocity.error.logging-in-too-fast=Estás iniciando sesión demasiado rápido, inténtalo de nuevo más tarde.
-velocity.error.online-mode-only=No has iniciado sesión con tu cuenta de Minecraft. Si crees que ya lo estás, intenta reiniciar tu cliente de Minecraft.
-velocity.error.player-connection-error=Se ha producido un error interno en tu conexión.
-velocity.error.modern-forwarding-needs-new-client=Este servidor solo es compatible con Minecraft 1.13 y superior.
-velocity.error.modern-forwarding-failed=El servidor no ha enviado una solicitud de reenvío al proxy. Asegúrate de que tu servidor está configurado para usar el método de reenvío de Velocity.
-velocity.error.moved-to-new-server=Has sido echado de {0}\: {1}
-velocity.error.no-available-servers=No hay servidores disponibles a los que conectarte. Inténtalo de nuevo más tarde o contacta con un administrador.
-
-# Commands
-velocity.command.generic-error=Se ha producido un error al ejecutar este comando.
-velocity.command.command-does-not-exist=Este comando no existe.
-
-velocity.command.players-only=Solo los jugadores pueden ejecutar este comando.
-velocity.command.server-does-not-exist=El servidor especificado {0} no existe.
-
-velocity.command.server-current-server=Estás conectado a {0}.
-velocity.command.server-too-many=Hay demasiados servidores registrados. Usa la finalización con tabulación para ver todos los servidores disponibles.
-velocity.command.server-available=Servidores disponibles\:
-velocity.command.server-tooltip-player-online={0} jugador conectado
-velocity.command.server-tooltip-players-online={0} jugadores conectados
-velocity.command.server-tooltip-current-server=Estás conectado a este servidor
-velocity.command.server-tooltip-offer-connect-server=Haz clic para conectarte a este servidor
-
-velocity.command.glist-player-singular={0} jugador está conectado al proxy.
-velocity.command.glist-player-plural={0} jugadores están conectados al proxy.
-velocity.command.glist-view-all=Para ver todos los jugadores por servidores, usa /glist all.
-
-velocity.command.reload-success=La configuración de Velocity ha sido recargada correctamente.
-velocity.command.reload-failure=No ha sido posible recargar la configuración de Velocity. Para obtener más información, revisa la consola.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} está licenciado bajo los términos de la Licencia Pública General de GNU v3.
-
-velocity.command.no-plugins=Actualmente no hay plugins instalados.
-velocity.command.plugins-list=Complementos\: {0}
-velocity.command.plugin-tooltip-website=Página web\: {0}
-velocity.command.plugin-tooltip-author=Autor\: {0}
-velocity.command.plugin-tooltip-authors=Autores\: {0}
-
-velocity.command.dump-uploading=Subiendo la información recopilada...
-velocity.command.dump-send-error=Se ha producido un error al comunicarse con los servidores de Velocity. Es posible que los servidores no estén disponibles temporalmente o que exista un problema en tu configuración de red. Puedes encontrar más información en el archivo de registro o la consola de tu servidor Velocity.
-velocity.command.dump-success=Se ha creado un informe anónimo que contiene información útil sobre este proxy. Si un desarrollador lo solicita, puedes compartir el siguiente enlace con él\:
-velocity.command.dump-will-expire=Este enlace caducará en unos días.
-velocity.command.dump-server-error=Se ha producido un error en los servidores de Velocity y la subida no se ha podido completar. Notifica al equipo de Velocity sobre este problema y proporciona los detalles sobre este error disponibles en el archivo de registro o la consola de tu servidor Velocity.
-velocity.command.dump-offline=Causa probable\: la configuración DNS del sistema no es válida o no hay conexión a internet
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_et_EE.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_et_EE.properties
deleted file mode 100644
index 3062c953..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_et_EE.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Sa oled juba antud serveriga ühendatud\!
-velocity.error.already-connected-proxy=Sa oled juba antud proksiga ühendatud\!
-velocity.error.already-connecting=Sa juba ühendad severiga\!
-velocity.error.cant-connect=Unable to connect to {0}\: {1}
-velocity.error.connecting-server-error=Unable to connect you to {0}. Please try again later.
-velocity.error.connected-server-error=Your connection to {0} encountered a problem.
-velocity.error.internal-server-connection-error=An internal server connection error occurred.
-velocity.error.logging-in-too-fast=Sa logid sisse liiga kiiresti, proovi hiljem uuesti.
-velocity.error.online-mode-only=You are not logged into your Minecraft account. If you are logged into your Minecraft account, try restarting your Minecraft client.
-velocity.error.player-connection-error=An internal error occurred in your connection.
-velocity.error.modern-forwarding-needs-new-client=This server is only compatible with Minecraft 1.13 and above.
-velocity.error.modern-forwarding-failed=Your server did not send a forwarding request to the proxy. Make sure the server is configured for Velocity forwarding.
-velocity.error.moved-to-new-server=You were kicked from {0}\: {1}
-velocity.error.no-available-servers=There are no available servers to connect you to. Try again later or contact an admin.
-
-# Commands
-velocity.command.generic-error=An error occurred while running this command.
-velocity.command.command-does-not-exist=Antud käsklust ei eksisteeri.
-
-velocity.command.players-only=Ainult mängijad saavad antud käsklust kasutada.
-velocity.command.server-does-not-exist=Server {0} ei eksisteeri.
-
-velocity.command.server-current-server=Sa oled hetkel ühendatud serveriga {0}.
-velocity.command.server-too-many=There are too many servers set up. Use tab completion to view all servers available.
-velocity.command.server-available=Saadaolevad serverid\:
-velocity.command.server-tooltip-player-online={0} mängija online
-velocity.command.server-tooltip-players-online={0} mängijat online
-velocity.command.server-tooltip-current-server=Currently connected to this server
-velocity.command.server-tooltip-offer-connect-server=Vajuta, et ühendada antud serveriga
-
-velocity.command.glist-player-singular={0} player is currently connected to the proxy.
-velocity.command.glist-player-plural={0} players are currently connected to the proxy.
-velocity.command.glist-view-all=Et näha kõiki mängijaid kõikides serverites, kasuta käsklust /glist all.
-
-velocity.command.reload-success=Velocity seadistus edukalt taaslaetud.
-velocity.command.reload-failure=Unable to reload your Velocity configuration. Check the console for more details.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} is licensed under the terms of the GNU General Public License v3.
-
-velocity.command.no-plugins=There are no plugins currently installed.
-velocity.command.plugins-list=Pluginad\: {0}
-velocity.command.plugin-tooltip-website=Veebileht\: {0}
-velocity.command.plugin-tooltip-author=Autor\: {0}
-velocity.command.plugin-tooltip-authors=Autorid\: {0}
-
-velocity.command.dump-uploading=Kogutud informatsiooni üleslaadimine...
-velocity.command.dump-send-error=An error occurred while communicating with the Velocity servers. The servers may be temporarily unavailable or there is an issue with your network settings. You can find more information in the log or console of your Velocity server.
-velocity.command.dump-success=Created an anonymised report containing useful information about this proxy. If a developer requested it, you may share the following link with them\:
-velocity.command.dump-will-expire=Link aegub paari päeva pärast.
-velocity.command.dump-server-error=An error occurred on the Velocity servers and the dump could not be completed. Please contact the Velocity staff about this problem and provide the details about this error from the Velocity console or server log.
-velocity.command.dump-offline=Likely cause\: Invalid system DNS settings or no internet connection
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_fi_FI.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_fi_FI.properties
deleted file mode 100644
index a90567a7..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_fi_FI.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Olet jo yhteydessä tälle palvelimelle\!
-velocity.error.already-connected-proxy=Olet jo yhteydessä tälle välityspalvelimelle\!
-velocity.error.already-connecting=Yrität jo yhdistää palvelimeen\!
-velocity.error.cant-connect={0} ei saatu yhteyttä\: {1}
-velocity.error.connecting-server-error=Yhteyttä palvelimeen {0} ei voitu muodostaa. Yritä myöhemmin uudelleen.
-velocity.error.connected-server-error=Yhteydessäsi palvelimeen {0} tapahtui virhe.
-velocity.error.internal-server-connection-error=Tapahtui palvelimen sisäinen yhteysvirhe.
-velocity.error.logging-in-too-fast=Kirjaudut sisään liian nopeasti, yritä uudelleen hetken kuluttua.
-velocity.error.online-mode-only=Et ole kirjautuneena Minecraft-tilillesi. Jos olet kirjautuneena sisään, yritä pelin uudelleenkäynnistämistä.
-velocity.error.player-connection-error=Yhteydessäsi tapahtui sisäinen virhe.
-velocity.error.modern-forwarding-needs-new-client=Tämä palvelin on yhteensopiva vain Minecraft 1.13\:n ja sitä uudempien versioiden kanssa.
-velocity.error.modern-forwarding-failed=Valitsemasi palvelin ei lähettänyt välityspyyntöä välityspalvelimelle. Tarkista että palvelin on määritetty oikein Velocityä varten.
-velocity.error.moved-to-new-server=Sinut potkittiin pois palvelimelta {0}\: {1}
-velocity.error.no-available-servers=Yhtään palvelinta ei ole tällä hetkellä saatavilla. Yritä myöhemmin uudelleen tai ota yhteyttä palvelimen ylläpitäjään.
-
-# Commands
-velocity.command.generic-error=Tämän komennon suorittamisessa tapahtui virhe.
-velocity.command.command-does-not-exist=Tuota komentoa ei ole olemassa.
-
-velocity.command.players-only=Vain pelaajat voivat käyttää tuota komentoa.
-velocity.command.server-does-not-exist=Palvelinta {0} ei ole olemassa.
-
-velocity.command.server-current-server=Olet tällä hetkellä yhdistettynä palvelimeen {0}.
-velocity.command.server-too-many=Liian monta palvelinta on määritetty. Paina Tab -näppäintä nähdäksesi kaikki saatavilla olevat palvelimet.
-velocity.command.server-available=Saatavilla olevat palvelimet\:
-velocity.command.server-tooltip-player-online={0} pelaaja paikalla
-velocity.command.server-tooltip-players-online={0} pelaajaa paikalla
-velocity.command.server-tooltip-current-server=Tällä hetkellä yhdistetty tähän palvelimeen
-velocity.command.server-tooltip-offer-connect-server=Napsauta yhdistääksesi tähän palvelimeen
-
-velocity.command.glist-player-singular={0} pelaaja on tällä hetkellä paikalla verkostossa.
-velocity.command.glist-player-plural={0} pelaajaa on tällä hetkellä paikalla verkostossa.
-velocity.command.glist-view-all=Nähdäksesi pelaajat kaikilta palvelimilta, käytä komentoa /glist all.
-
-velocity.command.reload-success=Velocityn konfiguraatio uudelleenladattiin onnistuneesti.
-velocity.command.reload-failure=Velocityn konfiguraation uudelleenlataus epäonnistui. Katso tarkemmat lisätiedot konsolista.
-
-velocity.command.version-copyright=Tekijänoikeus 2018-2021 {0}. {1} on lisensoitu GNU General Public License v3\:n ehtojen mukaisesti.
-
-velocity.command.no-plugins=Yhtäkään pluginia ei ole asennettu.
-velocity.command.plugins-list=Pluginit\: {0}
-velocity.command.plugin-tooltip-website=Verkkosivu\: {0}
-velocity.command.plugin-tooltip-author=Tekijä\: {0}
-velocity.command.plugin-tooltip-authors=Tekijät\: {0}
-
-velocity.command.dump-uploading=Lähetetään kerättyjä tietoja...
-velocity.command.dump-send-error=Velocity-palvelimien kanssa kommunikoidessa tapahtui virhe. Palvelimet eivät ehkä ole tilapäisesti käytettävissä tai verkkoasetuksissa on ongelma. Löydät lisätietoja Velocity-palvelimesi lokista tai konsolista.
-velocity.command.dump-success=Luotiin anonyymi raportti, joka sisältää hyödyllistä tietoa tästä välityspalvelimesta. Jos jokin kehittäjä on pyytänyt sitä, voit jakaa seuraavan linkin heidän kanssaan\:
-velocity.command.dump-will-expire=Tämä linkki vanhenee muutaman päivän kuluttua.
-velocity.command.dump-server-error=Virhe tapahtui Velocity-palvelimissa ja tiedonkeruuta ei voitu suorittaa loppuun. Ota yhteyttä Velocityn henkilökuntaan liittyen tästä ongelmasta, ja lisää yksityiskohdat virheestä Velocityn konsolista tai palvelimen lokista.
-velocity.command.dump-offline=Todennäköinen syy\: DNS-asetukset ovat virheelliset tai internet-yhteyttä ei ole
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_fr_FR.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_fr_FR.properties
deleted file mode 100644
index 123a8a85..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_fr_FR.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Vous êtes déjà connecté(e) à ce serveur \!
-velocity.error.already-connected-proxy=Vous êtes déjà connecté(e) à ce proxy \!
-velocity.error.already-connecting=Vous êtes déjà en train d'essayer de vous connecter à un serveur \!
-velocity.error.cant-connect=Impossible de se connecter à {0} \: {1}
-velocity.error.connecting-server-error=Impossible de vous connecter à {0}. Veuillez réessayer ultérieurement.
-velocity.error.connected-server-error=Votre connexion à {0} a rencontré un problème.
-velocity.error.internal-server-connection-error=Une erreur interne s'est produite lors de la connexion au serveur.
-velocity.error.logging-in-too-fast=Vous vous connectez trop rapidement, réessayez ultérieurement.
-velocity.error.online-mode-only=Vous n'êtes pas connecté(e) à votre compte Minecraft. Si vous l'êtes, essayez de redémarrer votre client Minecraft.
-velocity.error.player-connection-error=Une erreur interne s'est produite lors de votre connexion.
-velocity.error.modern-forwarding-needs-new-client=Ce serveur est uniquement compatible avec Minecraft 1.13 et les versions ultérieures.
-velocity.error.modern-forwarding-failed=Votre serveur n'a pas envoyé de requête de transfert vers le proxy. Assurez-vous que le serveur est configuré pour le transfert Velocity.
-velocity.error.moved-to-new-server=Vous avez été expulsé(e) de {0} \: {1}
-velocity.error.no-available-servers=Il n'y a pas de serveurs disponibles auxquels vous connecter. Réessayez ultérieurement ou contactez un administrateur.
-
-# Commands
-velocity.command.generic-error=Une erreur est survenue lors de l'exécution de cette commande.
-velocity.command.command-does-not-exist=Cette commande n'existe pas.
-
-velocity.command.players-only=Seuls les joueurs peuvent exécuter cette commande.
-velocity.command.server-does-not-exist=Le serveur spécifié {0} n''existe pas.
-
-velocity.command.server-current-server=Vous êtes actuellement connecté(e) à {0}.
-velocity.command.server-too-many=Il y a trop de serveurs configurés. Utilisez la saisie semi-automatique via la touche Tab pour afficher tous les serveurs disponibles.
-velocity.command.server-available=Serveurs disponibles \:
-velocity.command.server-tooltip-player-online={0} joueur connecté
-velocity.command.server-tooltip-players-online={0} joueurs connectés
-velocity.command.server-tooltip-current-server=Actuellement connecté(e) à ce serveur
-velocity.command.server-tooltip-offer-connect-server=Cliquez pour vous connecter à ce serveur
-
-velocity.command.glist-player-singular={0} joueur est actuellement connecté au proxy.
-velocity.command.glist-player-plural={0} joueurs sont actuellement connectés au proxy.
-velocity.command.glist-view-all=Pour afficher tous les joueurs connectés aux serveurs, utilisez /glist all.
-
-velocity.command.reload-success=Configuration de Velocity rechargée avec succès.
-velocity.command.reload-failure=Impossible de recharger votre configuration de Velocity. Consultez la console pour plus de détails.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} est sous la licence GNU General Public License v3.
-
-velocity.command.no-plugins=Il n'y a aucun plugin actuellement installé.
-velocity.command.plugins-list=Plugins \: {0}
-velocity.command.plugin-tooltip-website=Site Internet \: {0}
-velocity.command.plugin-tooltip-author=Auteur \: {0}
-velocity.command.plugin-tooltip-authors=Auteurs \: {0}
-
-velocity.command.dump-uploading=Envoi des informations collectées...
-velocity.command.dump-send-error=Une erreur est survenue lors de la communication avec les serveurs Velocity. Soit les serveurs sont temporairement indisponibles, soit il y a un problème avec les paramètres de votre réseau. Vous trouverez plus d'informations dans le journal ou la console de votre serveur Velocity.
-velocity.command.dump-success=Un rapport anonyme contenant des informations utiles sur ce proxy a été créé. Si un développeur vous le demande, vous pouvez le partager avec le lien suivant \:
-velocity.command.dump-will-expire=Ce lien expirera dans quelques jours.
-velocity.command.dump-server-error=Une erreur s'est produite sur les serveurs Velocity et le dump n'a pas pu être terminé. Veuillez contacter l'équipe de Velocity et leur communiquer les détails sur cette erreur à partir de la console de Velocity ou du journal du serveur.
-velocity.command.dump-offline=Cause probable \: paramètres DNS non valides ou aucune connexion Internet
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_he_IL.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_he_IL.properties
deleted file mode 100644
index 37cfdf46..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_he_IL.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=אתה כבר מחובר לשרת זה\!
-velocity.error.already-connected-proxy=אתה כבר מחובר ל- proxy זה\!
-velocity.error.already-connecting=אתה כבר מנסה להתחבר לשרת\!
-velocity.error.cant-connect=לא ניתן להתחבר ל- {0}\: {1}
-velocity.error.connecting-server-error=לא ניתן לחבר אותך ל- {0}. אנא נסה שנית מאוחר יותר.
-velocity.error.connected-server-error=החיבר שלך ל- {0} נתקל בבעיה.
-velocity.error.internal-server-connection-error=התרחש שגיאת חיבור שרת פנימית.
-velocity.error.logging-in-too-fast=אתה נכנס מהר מדי, נסה שוב מאוחר יותר.
-velocity.error.online-mode-only=אינך מחובר לחשבון Minecraft שלך. אם אתה מחובר לחשבון Minecraft שלך, נסה להפעיל מחדש את המשחק שלך.
-velocity.error.player-connection-error=התרחש שגיאה פנימית בחיבור שלך.
-velocity.error.modern-forwarding-needs-new-client=שרת זה תואם רק עם Minecraft 1.13 ומעלה.
-velocity.error.modern-forwarding-failed=השרת שלך לא שלח בקשת העברה ל- proxy. ודא שתצורת השרת נקבעה להעברת Velocity.
-velocity.error.moved-to-new-server=אתה הורחקתה מ- {0}\: {1}
-velocity.error.no-available-servers=אין שרתים זמינים אליהם יש לחבר אותך. נסה שוב מאוחר יותר או פנה למנהל מערכת.
-
-# Commands
-velocity.command.generic-error=התרחש שגיאה בעת הפעלת פקודה זו.
-velocity.command.command-does-not-exist=פקודה זו אינה קיימת.
-
-velocity.command.players-only=רק שחקנים יכולים להפעיל פקודה זו.
-velocity.command.server-does-not-exist=השרת {0} שצוין אינו קיים.
-
-velocity.command.server-current-server=אתה מחובר כעת ל- {0}.
-velocity.command.server-too-many=הוגדרו שרתים רבים מדי. השתמש בהשלמת כרטיסיה כדי להציג את כל השרתים הזמינים.
-velocity.command.server-available=שרתים זמינים\:
-velocity.command.server-tooltip-player-online=שחקן {0} מחובר
-velocity.command.server-tooltip-players-online={0} שחקנים מחוברים
-velocity.command.server-tooltip-current-server=מחובר כעת לשרת זה
-velocity.command.server-tooltip-offer-connect-server=לחץ על מנת להתחבר לשרת זה
-
-velocity.command.glist-player-singular=שחקן {0} כעת מחובר ל- proxy.
-velocity.command.glist-player-plural={0} שחקנים מחוברים כעת ל- proxy.
-velocity.command.glist-view-all=כדי להציג את כל השחקנים בשרתים, השתמש ב- /glist all.
-
-velocity.command.reload-success=תצורת Velocity נטענה מחדש בהצלחה.
-velocity.command.reload-failure=אין אפשרות לטעון מחדש את תצורת ה- Velocity שלך. עיין בקונסולה לקבלת פרטים נוספים.
-
-velocity.command.version-copyright=זכויות יוצרים 2018-2021 {0}. {1} מורשה על פי תנאי v3 הרישיון הציבורי הכללי של GNU.
-
-velocity.command.no-plugins=לא מותקנים כעת תוספים.
-velocity.command.plugins-list=תוספים\: {0}
-velocity.command.plugin-tooltip-website=אתר אינטרנט\: {0}
-velocity.command.plugin-tooltip-author=יוצר\: {0}
-velocity.command.plugin-tooltip-authors=יוצר\: {0}
-
-velocity.command.dump-uploading=מעלה מידע שנאסף...
-velocity.command.dump-send-error=התרחש שגיאה בעת קיום תקשורת עם שרתי ה- Velocity. ייתכן שהשרתים אינם זמינים באופן זמני או שקיימת בעיה בהגדרות הרשת שלך. באפשרותך למצוא מידע נוסף ביומן הרישום או בקונסולה של שרת ה- Velocity שלך.
-velocity.command.dump-success=נוצר דוח אנונימיות המכיל מידע שימושי אודות proxy זה. אם מפתח ביקש זאת, באפשרותך לשתף איתם את הקישור הבא\:
-velocity.command.dump-will-expire=קישור זה יפוג בעוד מספר ימים.
-velocity.command.dump-server-error=התרחש שגיאה בשרתי ה- Velocity ולא הייתה אפשרות להשלים את קובץ ה- dump. אנא צור קשר עם צוות ה- Velocity בנוגע לבעיה זו ולספק את הפרטים אודות שגיאה זו מקונסולה ה- Velocity או מיומן השרת.
-velocity.command.dump-offline=סביר להניח\: הגדרות DNS לא חוקיות של המערכת או ללא חיבור לאינטרנט
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_hu_HU.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_hu_HU.properties
deleted file mode 100644
index c654e096..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_hu_HU.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Már csatlakozva vagy ehhez a szerverhez\!
-velocity.error.already-connected-proxy=Már csatlakozva vagy ehhez a proxyhoz\!
-velocity.error.already-connecting=Jelenleg is csatlakozol egy szerverre\!
-velocity.error.cant-connect=Nem lehet csatlakozni a(z) {0} szerverhez\: {1}
-velocity.error.connecting-server-error=Nem tudunk csatlakoztatni a(z) {0} szerverhez. Kérlek próbáld újra később.
-velocity.error.connected-server-error=A kapcsolatod a(z) {0} szerverhez hibába ütközött.
-velocity.error.internal-server-connection-error=Egy szerveroldali hiba történt.
-velocity.error.logging-in-too-fast=Túl gyorsan próbálsz csatlakozni, kérlek próbáld újra később.
-velocity.error.online-mode-only=Nem vagy belépve a Minecraft profilodba. Ha mégis be vagy lépve, kérlek próbáld újraindítani a Minecraft kliensedet.
-velocity.error.player-connection-error=Egy belső hiba keletkezett a kapcsolatodban.
-velocity.error.modern-forwarding-needs-new-client=Ez a szerver csak a Minecraft 1.13 és afölötti verziókkal kompatibilis.
-velocity.error.modern-forwarding-failed=A szerver ahonnan csatlakoztál nem küldött modern átirányítási kérelmet a proxy felé. Bizonyosodj meg róla, hogy a szerver be van állítva a modern Velocity átirányítás használatára.
-velocity.error.moved-to-new-server=Ki lettél rúgva a(z) {0} szerverről\: {1}
-velocity.error.no-available-servers=Jelenleg nincs elérhető szerver ahová csatlakoztatni tudnánk. Próbáld újra később, vagy lépj kapcsolatba egy adminisztrátorral.
-
-# Commands
-velocity.command.generic-error=Hiba történt a parancs futtatása közben.
-velocity.command.command-does-not-exist=Ilyen parancs nem létezik.
-
-velocity.command.players-only=Ezt a parancsot csak játékosok használhatják.
-velocity.command.server-does-not-exist=A megadott szerver ({0}) nem létezik.
-
-velocity.command.server-current-server=Jelenleg a(z) {0} szerveren tartózkodsz.
-velocity.command.server-too-many=Túl sok szerver van beállítva. Használd a tab parancs befejező funkciót, hogy megnézd az összes elérhető szervert.
-velocity.command.server-available=Elérhető szerverek\:
-velocity.command.server-tooltip-player-online={0} játékos online
-velocity.command.server-tooltip-players-online={0} játékos online
-velocity.command.server-tooltip-current-server=Jelenleg ezen a szerveren tartózkodsz
-velocity.command.server-tooltip-offer-connect-server=Kattints ide, hogy csatlakozz erre a szerverre
-
-velocity.command.glist-player-singular={0} játékos van jelenleg csatlakozva a proxyhoz.
-velocity.command.glist-player-plural={0} játékos van jelenleg csatlakozva a proxyhoz.
-velocity.command.glist-view-all=Hogy megnézd az összes játékost az összes szerveren, használd a /glist all parancsot.
-
-velocity.command.reload-success=A Velocity beállításai sikeresen frissítve lettek.
-velocity.command.reload-failure=Hiba történt a Velocity beállításainak frissítése közben. Több információt a konzolban találsz.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} licenszelve van a GNU General Public License v3 alatt.
-
-velocity.command.no-plugins=Jelenleg egyetlen plugin sincs telepítve.
-velocity.command.plugins-list=Pluginok\: {0}
-velocity.command.plugin-tooltip-website=Weboldal\: {0}
-velocity.command.plugin-tooltip-author=Készítő\: {0}
-velocity.command.plugin-tooltip-authors=Készítők\: {0}
-
-velocity.command.dump-uploading=Az összegyűjtött információ feltöltése...
-velocity.command.dump-send-error=Egy hiba lépett fel miközben kommunikálni próbáltunk a Velocity szerverekkel. Lehetséges, hogy a szerver(ek) ideiglenesen elérhetetlenek, vagy ez egy hiba a te hálózati beállításaiddal. Több információt a logban, vagy a Velocity konzoljában találsz.
-velocity.command.dump-success=Egy anonimizált jelentés sikeresen el lett készítve erről a proxyról. Ha egy fejlesztő kérte, akkor innen kimásolhatod a linket, és megoszthatod velük\: 
-velocity.command.dump-will-expire=Ez a link egy pár napon belül le fog járni.
-velocity.command.dump-server-error=Egy hiba lépett fel a Velocity szervereken, és a jelentést nem tudtuk elkészíteni. Kérlek lépj kapcsolatba egy Velocity személyzeti taggal ezzel a problémával kapcsolatban, és adj információt ezzel a hibával kapcsolatban a Veloctiy logokból, vagy a szerver konzolból. 
-velocity.command.dump-offline=Valószínűleg a következő a hiba okozója\: Hibás DNS beállítások, vagy nincs internetkapcsolat.
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_it_IT.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_it_IT.properties
deleted file mode 100644
index 8f88bee3..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_it_IT.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Sei già connesso a questo server\!
-velocity.error.already-connected-proxy=Sei già connesso a questo proxy\!
-velocity.error.already-connecting=Stai già cercando di connetterti a un server\!
-velocity.error.cant-connect=Impossibile connettersi a {0}\: {1}
-velocity.error.connecting-server-error=Impossibile connetterti a {0}. Prova più tardi.
-velocity.error.connected-server-error=La tua connessione a {0} ha incontrato un problema.
-velocity.error.internal-server-connection-error=Si è verificato un errore di connessione interna al server.
-velocity.error.logging-in-too-fast=Stai accedendo troppo velocemente, riprova più tardi.
-velocity.error.online-mode-only=Non sei connesso al tuo account Minecraft. Se hai effettuato l'accesso al tuo account Minecraft, prova a riavviare il tuo client Minecraft.
-velocity.error.player-connection-error=Si è verificato un errore interno nella connessione.
-velocity.error.modern-forwarding-needs-new-client=Questo server è compatibile solo con versioni uguali o superiori a Minecraft 1.13.
-velocity.error.modern-forwarding-failed=Il server non ha inviato una richiesta di inoltro al proxy. Assicurati che il server sia configurato per l'inoltro di Velocity.
-velocity.error.moved-to-new-server=Sei stato cacciato da {0}\: {1}
-velocity.error.no-available-servers=Non ci sono server disponibili per connetterti. Riprova più tardi o contatta un amministratore.
-
-# Commands
-velocity.command.generic-error=Si è verificato un errore durante l'esecuzione di questo comando.
-velocity.command.command-does-not-exist=Questo comando non esiste.
-
-velocity.command.players-only=Solo i giocatori possono eseguire questo comando.
-velocity.command.server-does-not-exist=Il server {0} non esiste.
-
-velocity.command.server-current-server=Sei già connesso a {0}.
-velocity.command.server-too-many=Ci sono troppi server impostati. Usa il completamento con il tasto tab per visualizzare tutti i server disponibili.
-velocity.command.server-available=Server disponibili\:
-velocity.command.server-tooltip-player-online={0} giocatore online
-velocity.command.server-tooltip-players-online={0} giocatori online
-velocity.command.server-tooltip-current-server=Sei già connesso a questo server
-velocity.command.server-tooltip-offer-connect-server=Clicca per connetterti a questo server
-
-velocity.command.glist-player-singular={0} giocatore è attualmente connesso al proxy.
-velocity.command.glist-player-plural={0} giocatori sono attualmente connessi al proxy.
-velocity.command.glist-view-all=Per visualizzare tutti i giocatori sui server, usa /glist all.
-
-velocity.command.reload-success=La configurazione di Velocity è stata ricaricata con successo.
-velocity.command.reload-failure=Impossibile ricaricare la configurazione di Velocity. Controlla la console per maggiori dettagli.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} è concesso in licenza secondo i termini della GNU General Public License v3.
-
-velocity.command.no-plugins=Non ci sono plugin installati.
-velocity.command.plugins-list=Plugins\: {0}
-velocity.command.plugin-tooltip-website=Sito web\: {0}
-velocity.command.plugin-tooltip-author=Autore\: {0}
-velocity.command.plugin-tooltip-authors=Autori\: {0}
-
-velocity.command.dump-uploading=Caricamento informazioni raccolte...
-velocity.command.dump-send-error=Si è verificato un errore durante la comunicazione con i server Velocity. I server potrebbero essere temporaneamente non disponibili o c'è un problema con le impostazioni di rete. Puoi trovare maggiori informazioni nel log o nella console del tuo server Velocity.
-velocity.command.dump-success=Creato un report anonimo contenente informazioni utili su questo proxy. Se uno sviluppatore lo richiede, è possibile condividere con loro il seguente link\:
-velocity.command.dump-will-expire=Questo link scadrà tra pochi giorni.
-velocity.command.dump-server-error=Si è verificato un errore sui server Velocity e il dump non può essere completato. Contattare lo staff di Velocity per questo problema e fornire i dettagli relativi a questo errore dalla console di Velocity o dai log del server.
-velocity.command.dump-offline=Probabile causa\: Impostazioni DNS di sistema non valide o nessuna connessione internet
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_ja_JP.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_ja_JP.properties
deleted file mode 100644
index bfcbf86d..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_ja_JP.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=すでにこのサーバーに接続されています。
-velocity.error.already-connected-proxy=すでにこのプロキシに接続されています。
-velocity.error.already-connecting=すでにサーバーに接続しようとしています！
-velocity.error.cant-connect={0} に接続できません\: {1}
-velocity.error.connecting-server-error={0} に接続できませんでした。後でもう一度お試しください。
-velocity.error.connected-server-error={0} との接続に問題が発生しました。
-velocity.error.internal-server-connection-error=内部サーバー接続エラーが発生しました。
-velocity.error.logging-in-too-fast=ログイン速度が速すぎます。後でもう一度お試しください。
-velocity.error.online-mode-only=無効なセッションです（ゲームとランチャーを再起動してください）
-velocity.error.player-connection-error=接続中に内部エラーが発生しました。
-velocity.error.modern-forwarding-needs-new-client=このサーバーは Minecraft 1.13以降のみ互換性があります。
-velocity.error.modern-forwarding-failed=サーバーがプロキシに転送要求を送信しませんでした。 サーバーが Velocity 用に構成されていることを確認してください。
-velocity.error.moved-to-new-server=あなたは {0} からキックされました\: {1}
-velocity.error.no-available-servers=接続できるサーバーがありません。後でもう一度試すか、管理者にお問い合わせください。
-
-# Commands
-velocity.command.generic-error=このコマンドの実行中にエラーが発生しました。
-velocity.command.command-does-not-exist=未知のコマンドです。
-
-velocity.command.players-only=このコマンドはプレイヤーのみ実行できます。
-velocity.command.server-does-not-exist=指定されたサーバー {0} は存在しません。
-
-velocity.command.server-current-server=現在 {0} に接続しています。
-velocity.command.server-too-many=設定されているサーバー数が多すぎます。タブ補完を使い、利用可能なすべてのサーバーを表示してください。
-velocity.command.server-available=利用可能なサーバー\:
-velocity.command.server-tooltip-player-online={0} 人のプレイヤーがオンライン
-velocity.command.server-tooltip-players-online={0} 人のプレイヤーがオンライン
-velocity.command.server-tooltip-current-server=現在、このサーバーに接続しています
-velocity.command.server-tooltip-offer-connect-server=クリックしてこのサーバーに接続
-
-velocity.command.glist-player-singular={0} 人が現在プロキシに接続しています。
-velocity.command.glist-player-plural={0} 人が現在プロキシに接続しています。
-velocity.command.glist-view-all=サーバー上のすべてのプレイヤーを表示するには、/glist allを使用してください。
-
-velocity.command.reload-success=Velocityの設定が再読み込みされました。
-velocity.command.reload-failure=Velocityの設定を再読み込みできません。詳細はコンソールで確認してください。
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} は、GNU General Public License v3に基づいてライセンスされています。
-
-velocity.command.no-plugins=現在インストールされているプラグインはありません。
-velocity.command.plugins-list=プラグイン\: {0}
-velocity.command.plugin-tooltip-website=ウェブサイト\: {0}
-velocity.command.plugin-tooltip-author=作者\: {0}
-velocity.command.plugin-tooltip-authors=作者\: {0}
-
-velocity.command.dump-uploading=収集した情報をアップロードしています...
-velocity.command.dump-send-error=Velocityサーバーとの通信中にエラーが発生しました。サーバーが一時的に利用できないか、ネットワーク設定に問題がある可能性があります。詳細はコンソールまたはサーバーログで確認できます。
-velocity.command.dump-success=このプロキシに関する有用な情報を含む匿名化されたレポートを作成しました。開発者が要求した場合は、次のリンクを共有してください\:
-velocity.command.dump-will-expire=このリンクは数日後に期限切れになります。
-velocity.command.dump-server-error=Velocityサーバーでエラーが発生し、ダンプが完了できませんでした。 この問題についてはVelocityスタッフに連絡し、コンソールまたはサーバーログからこのエラーの詳細を提供してください。
-velocity.command.dump-offline=考えられる原因\: システムのDNS設定が無効であるか、インターネットに接続されていません
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_ko_KR.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_ko_KR.properties
deleted file mode 100644
index 253d0c25..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_ko_KR.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=이미 이 서버에 연결되어 있습니다\!
-velocity.error.already-connected-proxy=이미 이 프록시에 연결되어 있습니다\!
-velocity.error.already-connecting=이미 이 서버에 연결하는 중입니다\!
-velocity.error.cant-connect={0}\: {1} 에 연결할 수 없습니다.
-velocity.error.connecting-server-error={0} 에 연결할 수 없습니다. 나중에 다시 시도해주세요.
-velocity.error.connected-server-error={0} 에 연결하던 도중 문제가 발생했습니다.
-velocity.error.internal-server-connection-error=내부 오류가 발생했습니다.
-velocity.error.logging-in-too-fast=너무 빠르게 로그인을 시도했습니다. 나중에 다시 시도해주세요.
-velocity.error.online-mode-only=Minecraft 계정에 로그인되어 있지 않습니다. 만약 로그인중이 맞다면, 클라이언트를 재실행해보세요.
-velocity.error.player-connection-error=연결에 내부 오류가 발생했습니다.
-velocity.error.modern-forwarding-needs-new-client=이 서버는 Minecraft 1.13 이상만 지원합니다.
-velocity.error.modern-forwarding-failed=서버가 프록시에 포워딩 요청을 보내지 않았습니다. 서버가 Velocity 포워딩이 설정되어 있는지 확인하세요.
-velocity.error.moved-to-new-server={0}\: {1} 에서 추방됐습니다.
-velocity.error.no-available-servers=연결할 수 있는 서버가 없습니다. 나중에 다시 시도하거나 관리자에게 문의하세요.
-
-# Commands
-velocity.command.generic-error=명령어를 실행하는 도중 오류가 발생했습니다.
-velocity.command.command-does-not-exist=그 명령어는 존재하지 않습니다.
-
-velocity.command.players-only=이 명령어는 플레이어만 사용할 수 있습니다.
-velocity.command.server-does-not-exist=서버 {0} (은)는 존재하지 않습니다.
-
-velocity.command.server-current-server={0} 에 연결되어 있습니다.
-velocity.command.server-too-many=너무 많은 서버가 존재합니다. tab 자동완성으로 가능한 모든 서버를 보세요.
-velocity.command.server-available=사용 가능한 서버\:
-velocity.command.server-tooltip-player-online={0} 플레이어 접속중
-velocity.command.server-tooltip-players-online={0} 플레이어 접속중
-velocity.command.server-tooltip-current-server=이 서버에 연결되어 있습니다
-velocity.command.server-tooltip-offer-connect-server=클릭해 이 서버에 연결합니다.
-
-velocity.command.glist-player-singular={0} 플레이어가 현재 프록시에 연결되어 있습니다.
-velocity.command.glist-player-plural={0} 플레이어가 현재 프록시에 연결되어 있습니다.
-velocity.command.glist-view-all=서버에 있는 모든 플레이어를 보려면, /glist all 를 사용하세요.
-
-velocity.command.reload-success=Velocity 설정이 성공적으로 리로드되었습니다.
-velocity.command.reload-failure=Velocity 설정을 리로드할 수 없습니다. 콘솔에서 더 많은 정보를 확인하세요.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} 는 GNU General Public License v3 라이센스의 약관을 따릅니다.
-
-velocity.command.no-plugins=설치된 플러그인이 없습니다.
-velocity.command.plugins-list=플러그인\: {0}
-velocity.command.plugin-tooltip-website=웹사이트\: {0}
-velocity.command.plugin-tooltip-author=제작자\: {0}
-velocity.command.plugin-tooltip-authors=제작자\: {0}
-
-velocity.command.dump-uploading=모인 정보를 업로드하는 중...
-velocity.command.dump-send-error=Velocity 서버와 통신하는데 오류가 발생했습니다. 서버가 일시적으로 사용할 수 없거나 네트워크 설정에 문제가 있습니다. Velocity 서버의 콘솔 또는 로그에서 자세한 정보를 찾아볼 수 있습니다.
-velocity.command.dump-success=이 프록시와 관련된 유용한 정보를 담은 익명 보고서를 만들었습니다. 만약 개발자가 요청한다면, 다음 링크를 그들에게 공유해보세요\:
-velocity.command.dump-will-expire=이 링크는 수 일 안에 만료됩니다.
-velocity.command.dump-server-error=Velocity 서버에 문제가 발생했으며 덤프가 완료되지 않았습니다. Velocity 스태프에게 연락해 이 문제에 대해 설명하고 Velocity 콘솔 또는 서버 로그를 제공해주세요.
-velocity.command.dump-offline=가능성 높은 원인\: 잘못된 DNS 설정 또는 인터넷 연결 없음
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_nb_NO.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_nb_NO.properties
deleted file mode 100644
index d18def67..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_nb_NO.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Du er allerede tilkoblet denne serveren\!
-velocity.error.already-connected-proxy=Du er allerede tilkoblet denne proxyen\!
-velocity.error.already-connecting=Du tilkobles allerede en server\!
-velocity.error.cant-connect=Kan ikke koble til {0}\: {1}
-velocity.error.connecting-server-error=Kan ikke koble deg til {0}. Vennligst prøv igjen senere.
-velocity.error.connected-server-error=Din oppkobling mot {0} traff et uventet problem.
-velocity.error.internal-server-connection-error=Et internt problem oppstod.
-velocity.error.logging-in-too-fast=Du logger inn for raskt, prøv igjen senere.
-velocity.error.online-mode-only=Du er ikke innlogget på din Minecraft konto. Om du er innlogget, prøv å restarte din Minecraft klient.
-velocity.error.player-connection-error=Et internt problem oppstod.
-velocity.error.modern-forwarding-needs-new-client=Denne serveren er bare kompatibel med Minecraft 1.13 og nyere.
-velocity.error.modern-forwarding-failed=Din server sendte ikke en viderekoblingsforespørsel til proxyen. Pass på at serveren er konfigurert for Velocity viderekobling.
-velocity.error.moved-to-new-server=Du ble sparket ut fra {0}\: {1}
-velocity.error.no-available-servers=Det finnes ingen tilgjengelige servere å koble deg til. Prøv igjen senere eller kontakt en administrator.
-
-# Commands
-velocity.command.generic-error=En feil oppstod under gjennomføringen av denne kommandoen.
-velocity.command.command-does-not-exist=Denne kommandoen finnes ikke.
-
-velocity.command.players-only=Bare spillere kan utføre denne kommandoen.
-velocity.command.server-does-not-exist=Den spesifiserte serveren {0} finnes ikke.
-
-velocity.command.server-current-server=Du er for øyeblikket tilkoblet {0}.
-velocity.command.server-too-many=Det er for mange servere satt opp. Bruk tabfullførelse for å se alle tilgjengelige servere.
-velocity.command.server-available=Tilgjengelige servere\:
-velocity.command.server-tooltip-player-online={0} spiller tilkoblet
-velocity.command.server-tooltip-players-online={0} spillere tilkoblet
-velocity.command.server-tooltip-current-server=Du er for øyeblikket tilkoblet denne serveren
-velocity.command.server-tooltip-offer-connect-server=Trykk for å koble til denne serveren
-
-velocity.command.glist-player-singular={0} spiller er for øyeblikket tilkoblet denne proxyen.
-velocity.command.glist-player-plural={0} spillere er for øyeblikket tilkoblet denne proxyen.
-velocity.command.glist-view-all=For å se alle tilkoblede spillere, utfør /glist all.
-
-velocity.command.reload-success=Velocity konfigurasjonen ble lastet inn på nytt.
-velocity.command.reload-failure=Kan ikke laste inn Velocity konfigurasjonen din. Sjekk konsollen for mer detaljer.
-
-velocity.command.version-copyright=Opphavsrett 2018-2021 {0}. {1} er lisensiert under betingelsene av GNU General Public License v3.
-
-velocity.command.no-plugins=Ingen plugin er installert.
-velocity.command.plugins-list=Plugins\: {0}
-velocity.command.plugin-tooltip-website=Hjemmeside\: {0}
-velocity.command.plugin-tooltip-author=Skaper\: {0}
-velocity.command.plugin-tooltip-authors=Skapere\: {0}
-
-velocity.command.dump-uploading=Laster opp diagnostisk informasjon...
-velocity.command.dump-send-error=En feil oppstod under kommunikasjon med Velocityserverne. Enten er disse serverne midlertidig utilgjengelige, ellers er det noe galt med dine nettverksinnstillinger. Du kan finne mer informasjon i din logg eller i konsollen på Velocityservern.
-velocity.command.dump-success=Skapte en anonymisert rapport med utfyllende informasjon om denne proxyen. Om en utvikler forespurte den, kan du dele følgende lenke med dem\:
-velocity.command.dump-will-expire=Denne lenken kommer til å fjernes om noen dager.
-velocity.command.dump-server-error=En feil oppstod på Velocityserverne og en diagnostisk informasjonsinnsamling kunne ikke gennomføres. Vennligst kontakt organisasjonen bak Velocity om problemet og oppgi alle detaljene du kan finne i Velocitykonsollen eller loggen.
-velocity.command.dump-offline=Sannsynlig årsak\: Ugyldige DNS innstillinger eller manglende internettforbindelse
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_nl_NL.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_nl_NL.properties
deleted file mode 100644
index 58d1f7b2..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_nl_NL.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Je bent al met deze server verbonden\!
-velocity.error.already-connected-proxy=Je bent al met deze proxy verbonden\!
-velocity.error.already-connecting=Je probeert al verbinding te maken met een server\!
-velocity.error.cant-connect=Kan geen verbinding maken met {0}\: {1}
-velocity.error.connecting-server-error=Kan je niet verbinden met {0}. Probeer het later opnieuw.
-velocity.error.connected-server-error=Er is een probleem opgetreden bij je verbinding met {0}.
-velocity.error.internal-server-connection-error=Er is een interne serververbindingsfout opgetreden.
-velocity.error.logging-in-too-fast=Je logt te snel in, probeer het later opnieuw.
-velocity.error.online-mode-only=Je bent niet aangemeld bij je Minecraft-account. Indien dit wel het geval is, probeer dan je Minecraft-client opnieuw op te starten.
-velocity.error.player-connection-error=Er is een interne fout opgetreden bij je verbinding.
-velocity.error.modern-forwarding-needs-new-client=Deze server is alleen compatibel met Minecraft 1.13 en nieuwer.
-velocity.error.modern-forwarding-failed=Je server heeft geen forwarding request naar de proxy gestuurd. Zorg ervoor dat de server is geconfigureerd voor Velocity forwarding.
-velocity.error.moved-to-new-server=Je bent verwijderd van {0}\: {1}
-velocity.error.no-available-servers=Er zijn geen beschikbare servers om je met te verbinden. Probeer het later opnieuw of neem contact op met een administrator.
-
-# Commands
-velocity.command.generic-error=Er is een fout opgetreden bij het uitvoeren van dit commando.
-velocity.command.command-does-not-exist=Dit commando bestaat niet.
-
-velocity.command.players-only=Alleen spelers kunnen dit commando uitvoeren.
-velocity.command.server-does-not-exist=De opgegeven server {0} bestaat niet.
-
-velocity.command.server-current-server=Je bent op dit moment verbonden met {0}.
-velocity.command.server-too-many=Er zijn te veel servers ingesteld. Gebruik tabvervollediging om alle beschikbare servers te bekijken.
-velocity.command.server-available=Beschikbare servers\:
-velocity.command.server-tooltip-player-online={0} speler online
-velocity.command.server-tooltip-players-online={0} spelers online
-velocity.command.server-tooltip-current-server=Momenteel verbonden met deze server
-velocity.command.server-tooltip-offer-connect-server=Klik om te verbinden met deze server
-
-velocity.command.glist-player-singular={0} speler is momenteel verbonden met de proxy.
-velocity.command.glist-player-plural={0} spelers zijn momenteel verbonden met de proxy.
-velocity.command.glist-view-all=Om alle spelers op de servers te bekijken, gebruik /glist all.
-
-velocity.command.reload-success=Velocity configuratie succesvol herladen.
-velocity.command.reload-failure=De Velocity-configuratie kan niet opnieuw worden geladen. Kijk op de console voor meer details.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} is gelicentieerd onder de voorwaarden van de GNU General Public License v3.
-
-velocity.command.no-plugins=Er zijn momenteel geen plugins geïnstalleerd.
-velocity.command.plugins-list=Plugins\: {0}
-velocity.command.plugin-tooltip-website=Website\: {0}
-velocity.command.plugin-tooltip-author=Auteur\: {0}
-velocity.command.plugin-tooltip-authors=Auteurs\: {0}
-
-velocity.command.dump-uploading=Verzamelde informatie uploaden...
-velocity.command.dump-send-error=Er is een fout opgetreden tijdens de communicatie met de Velocity-servers. De servers zijn mogelijk tijdelijk niet beschikbaar of er is een probleem met je netwerkinstellingen. Je kunt meer informatie vinden in de logs of de console van je Velocity-server.
-velocity.command.dump-success=Een anoniem rapport is gemaakt met nuttige informatie over deze proxy. Als een ontwikkelaar dit heeft verzocht, kun je de volgende link delen\:
-velocity.command.dump-will-expire=Deze link verloopt over een paar dagen.
-velocity.command.dump-server-error=Er is een fout opgetreden op de Velocity-servers en de dump kan niet worden voltooid. Neem contact op met het Velocity-personeel over dit probleem en geef de details over deze fout op vanuit de Velocity-console of de logs.
-velocity.command.dump-offline=Waarschijnlijke oorzaak\: ongeldige DNS-instellingen van het systeem of geen internetverbinding
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_nn_NO.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_nn_NO.properties
deleted file mode 100644
index 1396137b..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_nn_NO.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Du er allereie tilkopla denne sørvaren\!
-velocity.error.already-connected-proxy=Du er allereie tilkopla denne proxyen\!
-velocity.error.already-connecting=Du tilkoplas allereie ein sørvar\!
-velocity.error.cant-connect=Kan ikkje kopla til {0}\: {1}
-velocity.error.connecting-server-error=Kan ikkje kopla deg til {0}. Prøv gjerne igjen seinare.
-velocity.error.connected-server-error=Din oppkopling mot {0} trefte eit uventa problem.
-velocity.error.internal-server-connection-error=Eit internt problem oppstod.
-velocity.error.logging-in-too-fast=Du loggar inn for raskt, prøv igjen seinare.
-velocity.error.online-mode-only=Du er ikkje innlogga på din Minecraft konto. Dersom du er innlogga, prøv å restarta din Minecraft klient.
-velocity.error.player-connection-error=Eit internt problem oppstod.
-velocity.error.modern-forwarding-needs-new-client=Denne sørvaren er bare kompatibel med Minecraft 1.13 og nyare.
-velocity.error.modern-forwarding-failed=Din server sende ikkje ein vidarekoplingsførespurnad til proxyen. Pass på at sørvaren er konfigurert for Velocity vidarekopling.
-velocity.error.moved-to-new-server=Du blei sparka ut frå {0}\: {1}
-velocity.error.no-available-servers=Det finst ingen tilgjengelege sørvarar å kopla deg til. Prøv igjen seinare eller kontakt ein administrator.
-
-# Commands
-velocity.command.generic-error=Ein feil oppstod under utføringa av denne kommandoen.
-velocity.command.command-does-not-exist=Denne kommandoen finst ikkje.
-
-velocity.command.players-only=Bare spelarar kan utføra denne kommandoen.
-velocity.command.server-does-not-exist=Den oppgjevne sørvaren {0} finst ikkje.
-
-velocity.command.server-current-server=Du er for augneblinken tilkopla {0}.
-velocity.command.server-too-many=Det er for mange sørvarar sette opp. Bruk tabfullføring for å sjå alle tilgjengelege sørvarar.
-velocity.command.server-available=Tilgjengelege sørvarar\:
-velocity.command.server-tooltip-player-online={0} spelar tilkopla
-velocity.command.server-tooltip-players-online={0} spelarar tilkopla
-velocity.command.server-tooltip-current-server=Du er for augneblinken tilkopla denne sørvaren
-velocity.command.server-tooltip-offer-connect-server=Trykk for å kopla til denne sørvaren
-
-velocity.command.glist-player-singular={0} spelar er for augneblinken tilkopla denne proxyen.
-velocity.command.glist-player-plural={0} spelare er for augneblinken tilkopla denne proxyen.
-velocity.command.glist-view-all=For å sjå alle tilkopla spelarar, gjer /glist all.
-
-velocity.command.reload-success=Velocity konfigurasjonen blei lasta inn på nytt.
-velocity.command.reload-failure=Kan ikkje lasta inn Velocity konfigurasjonen din. Sjekk konsollen for meir detaljar.
-
-velocity.command.version-copyright=Opphavsrett 2018-2021 {0}. {1} er lisensiert under vilkåra av GNU General Public License v3.
-
-velocity.command.no-plugins=Det er ingen plugins installert.
-velocity.command.plugins-list=Plugins\: {0}
-velocity.command.plugin-tooltip-website=Heimeside\: {0}
-velocity.command.plugin-tooltip-author=Skapar\: {0}
-velocity.command.plugin-tooltip-authors=Skaparar\: {0}
-
-velocity.command.dump-uploading=Uploading gathered information...
-velocity.command.dump-send-error=An error occurred while communicating with the Velocity servers. The servers may be temporarily unavailable or there is an issue with your network settings. You can find more information in the log or console of your Velocity server.
-velocity.command.dump-success=Created an anonymised report containing useful information about this proxy. If a developer requested it, you may share the following link with them\:
-velocity.command.dump-will-expire=This link will expire in a few days.
-velocity.command.dump-server-error=An error occurred on the Velocity servers and the dump could not be completed. Please contact the Velocity staff about this problem and provide the details about this error from the Velocity console or server log.
-velocity.command.dump-offline=Likely cause\: Invalid system DNS settings or no internet connection
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_pl_PL.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_pl_PL.properties
deleted file mode 100644
index 9dc179d1..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_pl_PL.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Już jesteś połączony z tym serwerem\!
-velocity.error.already-connected-proxy=Już jesteś połączony z tym serwerem proxy\!
-velocity.error.already-connecting=Już próbujesz połączyć się z serwerem\!
-velocity.error.cant-connect=Nie udało się połączyć z serwerem {0}\: {1}
-velocity.error.connecting-server-error=Nie udało się Ciebie połączyć z serwerem {0}. Spróbuj ponownie później.
-velocity.error.connected-server-error=Podczas łączenia z serwerem {0} wystąpił błąd.
-velocity.error.internal-server-connection-error=W łączeniu się z serwerem wystąpił błąd wewnętrzny.
-velocity.error.logging-in-too-fast=Wysyłasz zbyt wiele prób zalogowania, spróbuj ponownie później.
-velocity.error.online-mode-only=Nie jesteś zalogowany za pomocą konta Minecraft. Jeżeli jesteś zalogowany, spróbuj zrestartować grę.
-velocity.error.player-connection-error=Wystąpił błąd wewnętrzny w twoim połączeniu.
-velocity.error.modern-forwarding-needs-new-client=Ten serwer jest kompatybilny tylko z wersją Minecraft 1.13 lub nowszymi.
-velocity.error.modern-forwarding-failed=Twój serwer nie wysłał żądania przekazania do serwera proxy. Upewnij się, że serwer jest skonfigurowany do przekazywania Velocity.
-velocity.error.moved-to-new-server=Zostałeś wyrzucony z serwera {0}\: {1}
-velocity.error.no-available-servers=Brak dostępnych serwerów, z którymi można by Cię połączyć. Spróbuj ponownie później lub skontaktuj się z administratorem.
-
-# Commands
-velocity.command.generic-error=Podczas wykonywania tego polecenia wystąpił błąd.
-velocity.command.command-does-not-exist=To polecenie nie istnieje.
-
-velocity.command.players-only=Jedynie gracze mogą wykonywać to polecenie.
-velocity.command.server-does-not-exist=Wybrany serwer {0} nie istnieje.
-
-velocity.command.server-current-server=Jesteś obecnie połączony z serwerem {0}.
-velocity.command.server-too-many=Skonfigurowano zbyt wiele serwerów. Użyj uzupełniania klawiszem tab, aby wyświetlić wszystkie dostępne serwery.
-velocity.command.server-available=Dostępne serwery\:
-velocity.command.server-tooltip-player-online={0} gracz online
-velocity.command.server-tooltip-players-online={0} graczy online
-velocity.command.server-tooltip-current-server=Jesteś obecnie połączony z tym serwerem
-velocity.command.server-tooltip-offer-connect-server=Kliknij, aby połączyć się z tym serwerem
-
-velocity.command.glist-player-singular=Z tym „proxy” jest obecnie połączony {0} gracz.
-velocity.command.glist-player-plural=Liczba graczy obecnie połączonych z tym „proxy”\: {0}
-velocity.command.glist-view-all=Aby zobaczyć wszystkich graczy na serwerach, użyj /glist all.
-
-velocity.command.reload-success=Konfiguracja Velocity została pomyślnie załadowana ponownie.
-velocity.command.reload-failure=Nie udało się załadować konfiguracji Velocity. Sprawdź konsolę, aby uzyskać więcej informacji.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} jest objęty licencją na warunkach GNU General Public License v3.
-
-velocity.command.no-plugins=Brak zainstalowanych wtyczek.
-velocity.command.plugins-list=Wtyczki\: {0}
-velocity.command.plugin-tooltip-website=Strona internetowa\: {0}
-velocity.command.plugin-tooltip-author=Twórca\: {0}
-velocity.command.plugin-tooltip-authors=Twórcy\: {0}
-
-velocity.command.dump-uploading=Przesyłanie zebranych informacji…
-velocity.command.dump-send-error=Wystąpił błąd podczas komunikacji z serwerami Velocity. Serwery mogą być chwilowo niedostępne lub wystąpił problem z ustawieniami sieci. Więcej informacji można znaleźć w dzienniku lub konsoli serwera Velocity. 
-velocity.command.dump-success=Utworzono zanonimizowany raport zawierający przydatne informacje o tym proxy. Jeśli programista o to poprosił, możesz udostępnić mu następujący link\:
-velocity.command.dump-will-expire=Ten odnośnik wygaśnie za kilka dni.
-velocity.command.dump-server-error=Wystąpił błąd na serwerach Velocity i nie można było ukończyć przekazania. Skontaktuj się z personelem Velocity w sprawie tego problemu i podaj szczegółowe informacje o tym błędzie z konsoli Velocity lub dziennika serwera.
-velocity.command.dump-offline=Prawdopodobna przyczyna\: nieprawidłowe ustawienia DNS systemu lub brak połączenia internetowego
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_pt_BR.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_pt_BR.properties
deleted file mode 100644
index c7031527..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_pt_BR.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Você já está conectado a esse servidor\!
-velocity.error.already-connected-proxy=Você já está conectado a esse proxy\!
-velocity.error.already-connecting=Você já está tentando se conectar a um servidor\!
-velocity.error.cant-connect=Não foi possível se conectar a {0}\: {1}
-velocity.error.connecting-server-error=Não foi possível conectar você a {0}. Tente novamente mais tarde.
-velocity.error.connected-server-error=Sua conexão com o servidor {0} encontrou um problema.
-velocity.error.internal-server-connection-error=Ocorreu um erro interno de conexão com o servidor.
-velocity.error.logging-in-too-fast=Você está entrando muito rápido, tente novamente mais tarde.
-velocity.error.online-mode-only=Você não está logado na sua conta do Minecraft. Se você já está logado na sua conta do Minecraft, tente reiniciar seu cliente do Minecraft.
-velocity.error.player-connection-error=Um erro interno ocorreu em sua conexão.
-velocity.error.modern-forwarding-needs-new-client=Este servidor é compatível apenas com o Minecraft 1.13 e superior.
-velocity.error.modern-forwarding-failed=Seu servidor não enviou uma solicitação de encaminhamento para o proxy. Certifique-se de que o servidor está configurado para encaminhamento Velocity.
-velocity.error.moved-to-new-server=Você foi expulso de {0}\: {1}
-velocity.error.no-available-servers=Não há servidores disponíveis para conectá-lo. Tente novamente mais tarde ou contate um administrador.
-
-# Commands
-velocity.command.generic-error=Ocorreu um erro ao executar este comando.
-velocity.command.command-does-not-exist=Esse comando não existe.
-
-velocity.command.players-only=Apenas jogadores podem executar esse comando.
-velocity.command.server-does-not-exist=O servidor {0} não existe.
-
-velocity.command.server-current-server=Você está atualmente conectado a {0}.
-velocity.command.server-too-many=Há muitos servidores configurados. Utilize o auto-preenchimento tab para ver todos os servidores disponíveis.
-velocity.command.server-available=Servidores disponíveis\:
-velocity.command.server-tooltip-player-online={0} jogador conectado
-velocity.command.server-tooltip-players-online={0} jogadores conectados
-velocity.command.server-tooltip-current-server=Atualmente conectado a este servidor
-velocity.command.server-tooltip-offer-connect-server=Clique para conectar a este servidor
-
-velocity.command.glist-player-singular=O jogador {0} está atualmente conectado ao proxy.
-velocity.command.glist-player-plural={0} jogadores estão atualmente conectados ao proxy.
-velocity.command.glist-view-all=Para ver todos os jogadores em todos os servidores, use /glist all.
-
-velocity.command.reload-success=Configuração do Velocity recarregada com êxito.
-velocity.command.reload-failure=Não foi possível recarregar a configuração do Velocity. Verifique o console para mais detalhes.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} está licenciado sobre os termos da Licença Pública Geral GNU v3.
-
-velocity.command.no-plugins=Não há plugins instalados atualmente.
-velocity.command.plugins-list=Plugins\: {0}
-velocity.command.plugin-tooltip-website=Site\: {0}
-velocity.command.plugin-tooltip-author=Autor\: {0}
-velocity.command.plugin-tooltip-authors=Autores\: {0}
-
-velocity.command.dump-uploading=Enviando informações coletadas...
-velocity.command.dump-send-error=Ocorreu um erro ao se comunicar com os servidores Velocity. Os servidores podem estar temporariamente indisponíveis ou há um problema com suas configurações de rede. Você pode encontrar mais informações no log ou no console de seu servidor Velocity.
-velocity.command.dump-success=Foi criado um relatório anônimo contendo informações úteis sobre este proxy. Se um desenvolvedor o solicitou, você pode compartilhar o seguinte link com eles\:
-velocity.command.dump-will-expire=Este link irá expirar em alguns dias.
-velocity.command.dump-server-error=Ocorreu um erro nos servidores Velocity e o dump não pôde ser concluído. Por favor, entre em contato com a staff do Velocity sobre este problema e forneça detalhes sobre esse erro a partir do log do console Velocity ou do servidor.
-velocity.command.dump-offline=Causa provavel\: configurações de DNS do sistema inválidas ou sem conexão de internet
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_ru_RU.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_ru_RU.properties
deleted file mode 100644
index 55949fbd..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_ru_RU.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Вы уже подключены к этому серверу\!
-velocity.error.already-connected-proxy=Игрок с таким ником уже играет на сервере\!
-velocity.error.already-connecting=Вы уже подключаетесь к серверу\!
-velocity.error.cant-connect=Не удалось подключиться к серверу {0}\: {1}
-velocity.error.connecting-server-error=Не удалось подключить вас к серверу {0}. Пожалуйста, попробуйте снова через некоторое время.
-velocity.error.connected-server-error=С вашим подключением к серверу {0} возникла проблема.
-velocity.error.internal-server-connection-error=На сервере произошла внутренняя ошибка подключения.
-velocity.error.logging-in-too-fast=Вы входите слишком быстро, попробуйте снова через некоторое время.
-velocity.error.online-mode-only=Вы не вошли в свой аккаунт Minecraft. Если вы уверены, что вошли в аккаунт, попробуйте перезапустить свой клиент Minecraft.
-velocity.error.player-connection-error=В вашем подключении произошла внутренняя ошибка.
-velocity.error.modern-forwarding-needs-new-client=Этот сервер совместим только с Minecraft 1.13 и выше.
-velocity.error.modern-forwarding-failed=Ваш сервер не посылал запрос на переадресацию на прокси-сервер. Убедитесь, что сервер настроен на переадресацию Velocity.
-velocity.error.moved-to-new-server=Вы были кикнуты с сервера {0}\: {1}
-velocity.error.no-available-servers=Нет серверов, доступных для подключения. Попробуйте позже или свяжитесь с администратором.
-
-# Commands
-velocity.command.generic-error=Во время выполнения этой команды произошла ошибка.
-velocity.command.command-does-not-exist=Этой команды не существует.
-
-velocity.command.players-only=Только игроки могут использовать эту команду.
-velocity.command.server-does-not-exist=Указанный сервер {0} не существует.
-
-velocity.command.server-current-server=На данный момент вы подключены к серверу {0}.
-velocity.command.server-too-many=Настроено слишком много серверов. Для просмотра всех доступных серверов, используйте автозаполнение клавишей Tab.
-velocity.command.server-available=Доступные серверы\:
-velocity.command.server-tooltip-player-online={0} игрок онлайн
-velocity.command.server-tooltip-players-online={0} игрок(а, ов) онлайн
-velocity.command.server-tooltip-current-server=Подключен к этому серверу
-velocity.command.server-tooltip-offer-connect-server=Кликните, чтобы присоединиться к этому серверу
-
-velocity.command.glist-player-singular={0} игрок подключен к прокси на данный момент.
-velocity.command.glist-player-plural={0} игрок(а, ов) подключены к прокси на данный момент.
-velocity.command.glist-view-all=Чтобы просмотреть всех игроков на серверах, используйте /glist all.
-
-velocity.command.reload-success=Конфигурация Velocity успешно перезагружена.
-velocity.command.reload-failure=Не удалось перезагрузить конфигурацию Velocity. Проверьте консоль для подробностей.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} лицензирована на условиях GNU General Public License v3.
-
-velocity.command.no-plugins=Ни одного плагина не установлено.
-velocity.command.plugins-list=Плагины\: {0}
-velocity.command.plugin-tooltip-website=Вебсайт\: {0}
-velocity.command.plugin-tooltip-author=Автор\: {0}
-velocity.command.plugin-tooltip-authors=Авторы\: {0}
-
-velocity.command.dump-uploading=Загрузка полученной информации...
-velocity.command.dump-send-error=Во время связи с серверами Velocity произошла ошибка. Возможно, серверы временно недоступны или проблема в настройках вашей сети. Более подробную информацию можно найти в логе или консоли вашего сервера Velocity.
-velocity.command.dump-success=Создан анонимный отчет, содержащий полезную информацию об этом прокси. Если этот отчёт запросил разработчик, вы можете поделиться с ним следующей ссылкой\:
-velocity.command.dump-will-expire=Срок действия этой ссылки истечёт через несколько дней.
-velocity.command.dump-server-error=На серверах Velocity произошла ошибка, и дамп не удалось завершить. Пожалуйста, свяжитесь с сотрудниками Velocity по поводу этой проблемы и сообщите подробности, а также предоставьте подробную информацию об этой ошибке из консоли Velocity или лога сервера.
-velocity.command.dump-offline=Вероятная причина\: Неверные настройки DNS или отсутствие подключения к Интернету
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_sk_SK.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_sk_SK.properties
deleted file mode 100644
index 6dfb48ad..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_sk_SK.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Na tento server si už pripojený\!
-velocity.error.already-connected-proxy=Na tento proxy server si už pripojený\!
-velocity.error.already-connecting=Už sa pokúšaš o pripojenie na server\!
-velocity.error.cant-connect=Nepodarilo sa pripojiť na {0}\: {1}
-velocity.error.connecting-server-error=Nepodarilo sa pripojiť ťa na {0}. Skús to prosím neskôr.
-velocity.error.connected-server-error=V tvojom pripojení na {0} sa vyskytla chyba.
-velocity.error.internal-server-connection-error=V serverovom pripojení sa vyskytla interná chyba.
-velocity.error.logging-in-too-fast=Pripájaš sa príliš rýchlo, skús to znova neskôr.
-velocity.error.online-mode-only=Nie si prihlásený do svojho Minecraft účtu. Ak si prihlásený, skús reštartovať svoj Minecraft klient.
-velocity.error.player-connection-error=V tvojom pripojení sa vyskytla interná chyba.
-velocity.error.modern-forwarding-needs-new-client=Tento server je kompatibilný len s Minecraftom 1.13 a novším.
-velocity.error.modern-forwarding-failed=Tvoj server neodoslal presmerovaciu požiadavku proxy serveru. Uisti sa, že server je nastavený na presmerovanie Velocity.
-velocity.error.moved-to-new-server=Bol si odpojený z {0}\: {1}
-velocity.error.no-available-servers=Nie sú k dispozícii žiadne servery na pripojenie. Skús to neskôr alebo kontaktuj admina.
-
-# Commands
-velocity.command.generic-error=Nastala chyba pri vykonávaní tohto príkazu.
-velocity.command.command-does-not-exist=Tento príkaz neexistuje.
-
-velocity.command.players-only=Len hráči môžu vykonať tento príkaz.
-velocity.command.server-does-not-exist=Zadaný server {0} neexistuje.
-
-velocity.command.server-current-server=Aktuálne si pripojený na {0}.
-velocity.command.server-too-many=Je nastavených príliš veľa serverov. Použi tab pre zobrazenie dostupných serverov.
-velocity.command.server-available=Dostupné servery\:
-velocity.command.server-tooltip-player-online={0} hráč online
-velocity.command.server-tooltip-players-online={0} hráčov online
-velocity.command.server-tooltip-current-server=Aktuálne si pripojený na tento server
-velocity.command.server-tooltip-offer-connect-server=Klikni pre pripojenie na tento server
-
-velocity.command.glist-player-singular={0} hráč je pripojený na tento proxy server.
-velocity.command.glist-player-plural={0} hráčov je pripojených na tento proxy server.
-velocity.command.glist-view-all=Pre zobrazenie všetkých hráčov na všetkých serveroch použi /glist all.
-
-velocity.command.reload-success=Konfigurácia Velocity úspešne načítaná.
-velocity.command.reload-failure=Nepodarilo sa načítať konfiguráciu Velocity. Pozri sa do konzoly pre viac informácií.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} je licencovaný pod podmienkami GNU General Public License v3.
-
-velocity.command.no-plugins=Aktuálne nie sú nainštalované žiadne pluginy.
-velocity.command.plugins-list=Pluginy\: {0}
-velocity.command.plugin-tooltip-website=Webstránka\: {0}
-velocity.command.plugin-tooltip-author=Autor\: {0}
-velocity.command.plugin-tooltip-authors=Autori\: {0}
-
-velocity.command.dump-uploading=Nahrávanie získaných informácií...
-velocity.command.dump-send-error=Nastala chyba pri komunikácii s Velocity servermi. Servery môžu byť dočasne nedostupné alebo je chyba v prístupe na internet. Viac informácií je v logu a v konzole tvojho Velocity servera.
-velocity.command.dump-success=Bol vytvorený anonymný záznam o tomto serveri. Ak si ho vyžiadal developer, môžeš mu poslať nasledujúci odkaz\:
-velocity.command.dump-will-expire=Tento odkaz vyprší za niekoľko dní.
-velocity.command.dump-server-error=Nastala chyba vo Velocity serveroch a záznam nebolo možné vytvoriť. Prosím kontaktuj tím Velocity a poskytni detaily o tejto chybe z konzoly Velocity alebo z logu servera.
-velocity.command.dump-offline=Pravdepodobná príčina\: Neplatné systémové nastavenie DNS alebo chýbajúce pripojenie na internet
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_sq_AL.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_sq_AL.properties
deleted file mode 100644
index a5af20c8..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_sq_AL.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Ju tashmë jeni lidhur me këtë server\!
-velocity.error.already-connected-proxy=Ju jeni lidhur tashmë me këtë përfaqësues\!
-velocity.error.already-connecting=Ju tashmë po përpiqeni të lidheni me një server\!
-velocity.error.cant-connect=Nuk mund të lidhet me {0}\: {1}
-velocity.error.connecting-server-error=Nuk mund të të lidh me {0}. Ju lutemi provoni përsëri më vonë.
-velocity.error.connected-server-error=Lidhja juaj me {0} hasi një problem.
-velocity.error.internal-server-connection-error=Ndodhi një gabim i brendshëm i lidhjes së serverit.
-velocity.error.logging-in-too-fast=Po hyni shumë shpejt, provoni përsëri më vonë.
-velocity.error.online-mode-only=Ju nuk jeni regjistruar në llogarinë tuaj në Minecraft. Nëse jeni regjistruar në llogarinë tuaj Minecraft, provoni të rindizni klientin tuaj Minecraft.
-velocity.error.player-connection-error=Ndodhi një gabim i brendshëm në lidhjen tuaj.
-velocity.error.modern-forwarding-needs-new-client=Ky server është i pajtueshëm vetëm me Minecraft 1.13 e lart.
-velocity.error.modern-forwarding-failed=Serveri juaj nuk i dërgoi një kërkesë për transferim përfaqësuesit. Sigurohuni që serveri të jetë konfiguruar për transferimin e shpejtësisë.
-velocity.error.moved-to-new-server=Ju kanë dëbuar nga {0}\: {1}
-velocity.error.no-available-servers=Nuk ka servera të disponueshëm për t'ju lidhur. Provo përsëri më vonë ose kontakto një administrator.
-
-# Commands
-velocity.command.generic-error=Ndodhi një gabim gjatë ekzekutimit të kësaj komande.
-velocity.command.command-does-not-exist=Kjo komandë nuk ekziston.
-
-velocity.command.players-only=Vetëm lojtarët mund ta drejtojnë këtë komandë.
-velocity.command.server-does-not-exist=Serveri i specifikuar {0} nuk ekziston.
-
-velocity.command.server-current-server=Aktualisht jeni i lidhur me {0}.
-velocity.command.server-too-many=Ka shumë servera të konfiguruar. Përdorni përfundimin e skedave për të parë të gjithë serverat e disponueshëm.
-velocity.command.server-available=Serverat e disponueshëm\:
-velocity.command.server-tooltip-player-online={0} lojtar në internet
-velocity.command.server-tooltip-players-online={0} lojtarë në internet
-velocity.command.server-tooltip-current-server=Aktualisht e lidhur me këtë server
-velocity.command.server-tooltip-offer-connect-server=Klikoni për t'u lidhur me këtë server
-
-velocity.command.glist-player-singular={0} lojtari aktualisht është i lidhur me përfaqësuesin.
-velocity.command.glist-player-plural={0} lojtarët janë aktualisht të lidhur me përfaqësuesin.
-velocity.command.glist-view-all=Për të parë të gjithë lojtarët në servera, përdorni /glist all.
-
-velocity.command.reload-success=Konfigurimi i shpejtësisë u ringarkua me sukses.
-velocity.command.reload-failure=Nuk mund të ringarkohet konfigurimi i shpejtësisë. Kontrolloni konsolën për më shumë detaje.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} is licensed under the terms of the GNU General Public License v3.
-
-velocity.command.no-plugins=There are no plugins currently installed.
-velocity.command.plugins-list=Plugins\: {0}
-velocity.command.plugin-tooltip-website=Website\: {0}
-velocity.command.plugin-tooltip-author=Author\: {0}
-velocity.command.plugin-tooltip-authors=Authors\: {0}
-
-velocity.command.dump-uploading=Uploading gathered information...
-velocity.command.dump-send-error=An error occurred while communicating with the Velocity servers. The servers may be temporarily unavailable or there is an issue with your network settings. You can find more information in the log or console of your Velocity server.
-velocity.command.dump-success=Created an anonymised report containing useful information about this proxy. If a developer requested it, you may share the following link with them\:
-velocity.command.dump-will-expire=This link will expire in a few days.
-velocity.command.dump-server-error=An error occurred on the Velocity servers and the dump could not be completed. Please contact the Velocity staff about this problem and provide the details about this error from the Velocity console or server log.
-velocity.command.dump-offline=Likely cause\: Invalid system DNS settings or no internet connection
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_sr_CS.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_sr_CS.properties
deleted file mode 100644
index 40cf80d5..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_sr_CS.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Već ste povezani na ovaj server\!
-velocity.error.already-connected-proxy=Već ste povezani na ovaj proxy\!
-velocity.error.already-connecting=Već pokušavate da se povežete na server\!
-velocity.error.cant-connect=Nije moguće povezati se na {0}\: {1}
-velocity.error.connecting-server-error=Nije moguće povezati Vas na {0}. Molimo pokušajte ponovo kasnije.
-velocity.error.connected-server-error=Došlo je do problema sa Vašom vezom sa {0}.
-velocity.error.internal-server-connection-error=Dogodila se interna greška sa konekcijom sa serverom.
-velocity.error.logging-in-too-fast=Logujete se prebrzo, molimo pokušajte kasnije.
-velocity.error.online-mode-only=Niste ulogovani na Vaš Minecraft nalog. Ako ipak jeste, probajte da restartujete Minecraft klijent.
-velocity.error.player-connection-error=Dogodila se interna greška sa Vašom konekcijom.
-velocity.error.modern-forwarding-needs-new-client=Ovaj server je kompatibilan samo sa Minecraft-om 1.13 i višim verzijama.
-velocity.error.modern-forwarding-failed=Vaš server nije poslao zahtev za prosleđivanje na proxy. Proverite je li server konfigurisan za Velocity prosleđivanje.
-velocity.error.moved-to-new-server=Izbačeni ste iz {0}\: {1}
-velocity.error.no-available-servers=Nema dostupnih servera za povezati Vas. Pokušajte ponovo kasnije ili kontaktirajte nekog admina.
-
-# Commands
-velocity.command.generic-error=Došlo je do greške pri pokretanju te komande.
-velocity.command.command-does-not-exist=Ta komanda ne postoji.
-
-velocity.command.players-only=Tu komandu mogu pokrenuti samo igrači.
-velocity.command.server-does-not-exist=Navedeni server {0} ne postoji.
-
-velocity.command.server-current-server=Trenutno ste povezani na {0}.
-velocity.command.server-too-many=Postoji mnogo servera. Koristite tab dovršavanje za pregled svih dostupnih servera.
-velocity.command.server-available=Dostupni serveri\:
-velocity.command.server-tooltip-player-online={0} igrač online
-velocity.command.server-tooltip-players-online={0} igrača online
-velocity.command.server-tooltip-current-server=Trenutno ste povezani na ovaj server
-velocity.command.server-tooltip-offer-connect-server=Kliknite za povezivanje na ovaj server
-
-velocity.command.glist-player-singular={0} igrač je trenutno povezan na proxy.
-velocity.command.glist-player-plural={0} igrača je trenutno povezano na proxy.
-velocity.command.glist-view-all=Za pregled svih igrača na serverima koristite /glist all.
-
-velocity.command.reload-success=Velocity konfiguracija uspešno ponovno učitana.
-velocity.command.reload-failure=Nije moguće ponovo učitati Vašu Velocity konfiguraciju. Proverite konzolu za više detalja.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} je licenciran pod uslovima licence GNU General Public License v3.
-
-velocity.command.no-plugins=Trenutno nema instaliranih plugin-a.
-velocity.command.plugins-list=Plugin-i\: {0}
-velocity.command.plugin-tooltip-website=Web stranica\: {0}
-velocity.command.plugin-tooltip-author=Autor\: {0}
-velocity.command.plugin-tooltip-authors=Autori\: {0}
-
-velocity.command.dump-uploading=Otpremanje prikupljenih informacija...
-velocity.command.dump-send-error=Dogodila se greška pri komunikaciji sa Velocity serverima. Serveri su ili trenutno nedostupni, ili postoji problem sa Vašim mrežnim podešavanjima. Možete saznati više informacija u log-u ili konzoli Vašeg Velocity servera.
-velocity.command.dump-success=Kreiran anonimiziran izveštaj koji sadrži korisne informacije o ovom proxy-u. Ako ga developer zatraži, možete mu poslati ovaj link\:
-velocity.command.dump-will-expire=Ovaj link će isteći za nekoliko dana.
-velocity.command.dump-server-error=Dogodila se greška na Velocity serverima i nije moguće završiti dump. Molimo kontaktirajte Velocity staff u pitanju ovog problema i pružite detalje o ovoj grešci iz Velocity konzole ili server log-a.
-velocity.command.dump-offline=Verovatan uzrok\: Nevalidan sistem DNS podešavanja ili nema internet konekcije
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_sv_SE.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_sv_SE.properties
deleted file mode 100644
index 32d2c70e..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_sv_SE.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=You are already connected to this server\!
-velocity.error.already-connected-proxy=You are already connected to this proxy\!
-velocity.error.already-connecting=You are already trying to connect to a server\!
-velocity.error.cant-connect=Unable to connect to {0}\: {1}
-velocity.error.connecting-server-error=Unable to connect you to {0}. Please try again later.
-velocity.error.connected-server-error=Your connection to {0} encountered a problem.
-velocity.error.internal-server-connection-error=An internal server connection error occurred.
-velocity.error.logging-in-too-fast=You are logging in too fast, try again later.
-velocity.error.online-mode-only=You are not logged into your Minecraft account. If you are logged into your Minecraft account, try restarting your Minecraft client.
-velocity.error.player-connection-error=An internal error occurred in your connection.
-velocity.error.modern-forwarding-needs-new-client=This server is only compatible with Minecraft 1.13 and above.
-velocity.error.modern-forwarding-failed=Your server did not send a forwarding request to the proxy. Make sure the server is configured for Velocity forwarding.
-velocity.error.moved-to-new-server=You were kicked from {0}\: {1}
-velocity.error.no-available-servers=There are no available servers to connect you to. Try again later or contact an admin.
-
-# Commands
-velocity.command.generic-error=An error occurred while running this command.
-velocity.command.command-does-not-exist=This command does not exist.
-
-velocity.command.players-only=Only players can run this command.
-velocity.command.server-does-not-exist=The specified server {0} does not exist.
-
-velocity.command.server-current-server=You are currently connected to {0}.
-velocity.command.server-too-many=There are too many servers set up. Use tab completion to view all servers available.
-velocity.command.server-available=Available servers\:
-velocity.command.server-tooltip-player-online={0} player online
-velocity.command.server-tooltip-players-online={0} players online
-velocity.command.server-tooltip-current-server=Currently connected to this server
-velocity.command.server-tooltip-offer-connect-server=Click to connect to this server
-
-velocity.command.glist-player-singular={0} player is currently connected to the proxy.
-velocity.command.glist-player-plural={0} players are currently connected to the proxy.
-velocity.command.glist-view-all=To view all players on servers, use /glist all.
-
-velocity.command.reload-success=Velocity configuration successfully reloaded.
-velocity.command.reload-failure=Unable to reload your Velocity configuration. Check the console for more details.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} is licensed under the terms of the GNU General Public License v3.
-
-velocity.command.no-plugins=There are no plugins currently installed.
-velocity.command.plugins-list=Plugins\: {0}
-velocity.command.plugin-tooltip-website=Website\: {0}
-velocity.command.plugin-tooltip-author=Author\: {0}
-velocity.command.plugin-tooltip-authors=Authors\: {0}
-
-velocity.command.dump-uploading=Uploading gathered information...
-velocity.command.dump-send-error=An error occurred while communicating with the Velocity servers. The servers may be temporarily unavailable or there is an issue with your network settings. You can find more information in the log or console of your Velocity server.
-velocity.command.dump-success=Created an anonymised report containing useful information about this proxy. If a developer requested it, you may share the following link with them\:
-velocity.command.dump-will-expire=This link will expire in a few days.
-velocity.command.dump-server-error=An error occurred on the Velocity servers and the dump could not be completed. Please contact the Velocity staff about this problem and provide the details about this error from the Velocity console or server log.
-velocity.command.dump-offline=Likely cause\: Invalid system DNS settings or no internet connection
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_tl_PH.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_tl_PH.properties
deleted file mode 100644
index 78b8b5bb..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_tl_PH.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Nakakonekta ka na sa serbidor na ito\!
-velocity.error.already-connected-proxy=Nakakonekta ka na sa proxy na ito\!
-velocity.error.already-connecting=Sinusubukan mo na makakonekta sa isang serbidor\!
-velocity.error.cant-connect=Hindi makakonekta sa {0} dahil {1}
-velocity.error.connecting-server-error=Hindi ka makakonekta sa {0}. Paki-ulitin mo ulit na mamaya.
-velocity.error.connected-server-error=Maencounter isang problema ang koneksyon mo sa {0}.
-velocity.error.internal-server-connection-error=Nangyari isang internal server error.
-velocity.error.logging-in-too-fast=Masyadong mabilis ang mga attempt ng pagpapatunay mo. Paki-ulitin mo ulit na mamaya.
-velocity.error.online-mode-only=Hindi nakapagpatunay sa akawnt ng Minecraft mo. Kung nakapatunayan sa akawnt ng Minecraft mo, tapos sinubukan i-restart mo ang klient ng Minecraft niyo.
-velocity.error.player-connection-error=Nangyari isang internal server error sa ng koneksiyon mo.
-velocity.error.modern-forwarding-needs-new-client=Ang server na ito magkasundo lang kasama ang version 1.13 at sa itaas.
-velocity.error.modern-forwarding-failed=Hindi ipadala ang serbidor mo ng forwarding request sa proxy. Dapat nae-ensure mo ng naka-configure ang server para ng forwarding ng Velocity.
-velocity.error.moved-to-new-server=Nanipa ka mula sa {0} dahil {1}
-velocity.error.no-available-servers=Wala na ang mga serbidor na magagamit para sa'yo. Paki-ulitin mo ulit o magcontact ka isang admin.
-
-# Commands
-velocity.command.generic-error=Nangyari isang pagkakamali kapag sinubukan ng serbidor magamit ang komando ng ito.
-velocity.command.command-does-not-exist=Walang komando sa serbidor.
-
-velocity.command.players-only=Mga manlalaro lang makagamit ang komando ito.
-velocity.command.server-does-not-exist=Walang serbidor {0}.
-
-velocity.command.server-current-server=Nakakonekta ka sa {0}.
-velocity.command.server-too-many=Meron masyadong serbidor sa konfig. Magamit ka ng tab completion sa makita lahat ng serbidor na magagamit.
-velocity.command.server-available=Magagamit na mga serbidor\:
-velocity.command.server-tooltip-player-online={0} manlalaro sa online
-velocity.command.server-tooltip-players-online={0} mga manlalaro sa online
-velocity.command.server-tooltip-current-server=Nakakonekta ka sa serbidor na ito
-velocity.command.server-tooltip-offer-connect-server=I-click dito sa kumonekta sa serbidor na ito
-
-velocity.command.glist-player-singular={0} manlalaro nasa proxy.
-velocity.command.glist-player-plural={0} mga manlalaro nasa proxy.
-velocity.command.glist-view-all=Para sa makita ang mga lahat ng manlalaro sa mga serbidor, magamit ka ng /glist all.
-
-velocity.command.reload-success=Matagumpay ang reload ng konfigurasyon ng Velocity.
-velocity.command.reload-failure=Hindi kaya ang magreload ng konfigurasyon mo sa Velocity. Magsiyasat ang konsole para mas maraming detalye.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}. {1} is licensed under the terms of the GNU General Public License v3.
-
-velocity.command.no-plugins=Walang plugin nang naka-install.
-velocity.command.plugins-list=Mga plugin\: {0}
-velocity.command.plugin-tooltip-website=Website\: {0}
-velocity.command.plugin-tooltip-author=Autor\: {0}
-velocity.command.plugin-tooltip-authors=Mga autor\: {0}
-
-velocity.command.dump-uploading=Inu-upload ang ipong impormasyon...
-velocity.command.dump-send-error=Nangyari isang pagkakamali sa panahon ng koneksiyon kasama ang mga serbidor ng Velocity. Baka hindi magagamit na pansamantalang ang mga serbidor o may isang isyu sa mga network settings mo. Hinapin mo mas impormasyon sa log o console sa serbidor ng Velocity mo.
-velocity.command.dump-success=Lumikha isang report ng hindi nagpapakilala ng may impormasyon mahalaga tungkol sa proxy ng ito. Kung hingin ito ng developer, makashare ka ang link na ito kasama siya\:
-velocity.command.dump-will-expire=Magwakas ang link na ito sa ilang araw.
-velocity.command.dump-server-error=Nangyari isang pagkakamali sa mga serbidor ng Velocity at hindi nakakumpleto ang dump. Paki-kumontak ka ng staff ng Velocity tungkol sa problema ng ito at ka maglaan ang mga detalye ng pagkakamali ng ito mula sa konsole ng Velocity o log ng serbidor.
-velocity.command.dump-offline=Ang malamang sanhi\: Hindi wasto ang mga setting ng DNS sa system mo o wala koneksiyon ka sa Internet
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_tr_TR.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_tr_TR.properties
deleted file mode 100644
index 8666df83..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_tr_TR.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=Bu sunucuya zaten bağlısın\!
-velocity.error.already-connected-proxy=Bu sunucuya zaten bağlısın\!
-velocity.error.already-connecting=Bu sunucuya zaten bağlanmaya çalışıyorsun\!
-velocity.error.cant-connect={0}\:{1} ile bağlantı kurulamadı
-velocity.error.connecting-server-error=Seni {0}''ye bağlayamadık. Lütfen daha sonra tekrar deneyiniz.
-velocity.error.connected-server-error={0} ile bağlantında bir problem meydana geldi.
-velocity.error.internal-server-connection-error=Dahili sunucu bağlantısında bir hata meydana geldi.
-velocity.error.logging-in-too-fast=Çok hızlı bağlanmaya çalışıyorsun, daha sonra tekrar dene.
-velocity.error.online-mode-only=Minecraft hesabına bağlı değilsin. Eğer Minecraft hesabına bağlıysan, Minecraft istemcini kapatıp tekrardan başlat.
-velocity.error.player-connection-error=Bağlantında dahili bir hata meydana geldi.
-velocity.error.modern-forwarding-needs-new-client=Bu sunucuya Minecraft'ın sadece 1.13 ve üzeri sürümleri ile giriş yapabilirsin.
-velocity.error.modern-forwarding-failed=Sunucun Velocity'ye yönlendirme isteğinde bulunmadı. Sunucunun Velocity'nin ayarlarında ayarlandığına emin ol.
-velocity.error.moved-to-new-server={0}\:{1} sunucusundan atıldınız
-velocity.error.no-available-servers=Seni bağlayabileceğimiz bir sunucu bulamadık. Lütfen daha sonra tekrar dene veya bir yetkili ile iletişime geç.
-
-# Commands
-velocity.command.generic-error=Bu komutu çalıştırırken bir hata meydana geldi.
-velocity.command.command-does-not-exist=Böyle bir komut yok.
-
-velocity.command.players-only=Sadece oyuncular bu komutu çalıştırabilir.
-velocity.command.server-does-not-exist=Belirlenmiş sunucu {0} bulunmuyor.
-
-velocity.command.server-current-server=Şu anda {0} sunucusuna bağlısın.
-velocity.command.server-too-many=Ayarlanmış birçok sunucu mevcut. Mevcut bütün sunucuları görmek için tamamlama özelliğini kullan.
-velocity.command.server-available=Müsait sunucular\:
-velocity.command.server-tooltip-player-online={0} oyuncu çevrimiçi
-velocity.command.server-tooltip-players-online={0} oyuncu çevrimiçi
-velocity.command.server-tooltip-current-server=Şu anda bu sunucuya bağlısın
-velocity.command.server-tooltip-offer-connect-server=Bu sunucuya bağlanmak için tıkla
-
-velocity.command.glist-player-singular=Şu anda sunucuya toplam {0} oyuncu bağlı.
-velocity.command.glist-player-plural=Şu anda sunucuya toplam {0} oyuncu bağlı.
-velocity.command.glist-view-all=Sunucudaki bütün oyuncuları görüntülemek için /glist all komutunu kullan.
-
-velocity.command.reload-success=Velocity ayarları başarıyla güncellendi.
-velocity.command.reload-failure=Velocity ayarlarınız güncellenemiyor. Daha fazla bilgi için konsolu kontrol edin.
-
-velocity.command.version-copyright=Talif hakkı 2018-2021 {0}. {1}, GNU General Public License v3 adı altında lisanslanmıştır.
-
-velocity.command.no-plugins=Yüklenmiş herhangi bir eklenti yok.
-velocity.command.plugins-list=Eklentiler\: {0}
-velocity.command.plugin-tooltip-website=Website\: {0}
-velocity.command.plugin-tooltip-author=Yapımcı\: {0}
-velocity.command.plugin-tooltip-authors=Yapımcılar\: {0}
-
-velocity.command.dump-uploading=Toplanılan bilgiler yükleniyor...
-velocity.command.dump-send-error=Velocity sunucuları ile iletişim sırasında bir hata oluştu. Sunucular geçici olarak kullanılamıyor olabilir veya ağ ayarlarınızla ilgili bir sorun olabilir. Velocity sunucunuzun logunda veya konsolunda daha fazla bilgi bulabilirsiniz.
-velocity.command.dump-success=Bu proxy hakkında faydalı bilgiler içeren anonim bir rapor oluşturdu. Bir geliştirici talep ettiyse, aşağıdaki bağlantıyı onlarla paylaşabilirsiniz\:
-velocity.command.dump-will-expire=Bu bağlantı birkaç gün içinde geçersiz olacak.
-velocity.command.dump-server-error=Velocity sunucularında bir hata oluştu ve döküm tamamlanamadı. Lütfen bu sorunla ilgili olarak Velocity ekibiyle iletişime geçin ve bu hatayla ilgili ayrıntıları Velocity konsolundan veya sunucu logundan sağlayın.
-velocity.command.dump-offline=Olası neden\: Geçersiz sistem DNS ayarları veya internet bağlantısı yok
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_zh_CN.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_zh_CN.properties
deleted file mode 100644
index e22e751b..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_zh_CN.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=您已经连接到此服务器了！
-velocity.error.already-connected-proxy=您已经连接到此代理服务器了！
-velocity.error.already-connecting=您已经在尝试连接服务器了！
-velocity.error.cant-connect=无法连接至 {0}：{1}
-velocity.error.connecting-server-error=无法将您连接至 {0}，请稍后再试。
-velocity.error.connected-server-error=您与 {0} 的连接出现问题。
-velocity.error.internal-server-connection-error=发送内部服务器连接错误。
-velocity.error.logging-in-too-fast=您的登录过于频繁，请稍后重试。
-velocity.error.online-mode-only=您尚未登录至 Minecraft 账户。若您已登录，请尝试重启您的客户端。
-velocity.error.player-connection-error=您的连接发生内部错误。
-velocity.error.modern-forwarding-needs-new-client=此服务器仅兼容 Minecraft 1.13 及更高版本。
-velocity.error.modern-forwarding-failed=您的服务器未向代理服务器转发请求，请确保已配置 Velocity 转发。
-velocity.error.moved-to-new-server=您已被踢出 {0}：{1}
-velocity.error.no-available-servers=您当前没有可连接的服务器，请稍后重试或联系管理员。
-
-# Commands
-velocity.command.generic-error=执行此命令时发生错误。
-velocity.command.command-does-not-exist=此命令不存在。
-
-velocity.command.players-only=只有玩家才能执行此命令。
-velocity.command.server-does-not-exist=指定的服务器 {0} 不存在。
-
-velocity.command.server-current-server=您已连接至 {0}。
-velocity.command.server-too-many=设置的服务器过多，请使用 Tab 键补全来查看所有可用的服务器。
-velocity.command.server-available=可用的服务器：
-velocity.command.server-tooltip-player-online={0} 名玩家在线
-velocity.command.server-tooltip-players-online={0} 名玩家在线
-velocity.command.server-tooltip-current-server=当前已连接至此服务器
-velocity.command.server-tooltip-offer-connect-server=点击连接至此服务器
-
-velocity.command.glist-player-singular=共有 {0} 名玩家已连接至此代理服务器。
-velocity.command.glist-player-plural=共有 {0} 名玩家已连接至此代理服务器。
-velocity.command.glist-view-all=使用 /glist all 命令来查看所有服务器的全部玩家列表。
-
-velocity.command.reload-success=Velocity 配置已成功重载。
-velocity.command.reload-failure=无法重载 Velocity 配置，请查看控制台了解详情。
-
-velocity.command.version-copyright=Copyright 2018-2021 {0}。{1} 以 GNU 通用公共许可证第三版授权。
-
-velocity.command.no-plugins=当前没有安装任何插件。
-velocity.command.plugins-list=插件：{0}
-velocity.command.plugin-tooltip-website=网站：{0}
-velocity.command.plugin-tooltip-author=作者：{0}
-velocity.command.plugin-tooltip-authors=作者：{0}
-
-velocity.command.dump-uploading=正在上传已收集的信息...
-velocity.command.dump-send-error=与 Velocity 服务器通信时发生错误，服务器可能暂不可用或您的网络设置存在问题。您可在 Velocity 服务器日志或控制台中了解详情。
-velocity.command.dump-success=已创建关于此代理的匿名反馈数据。若开发者需要，您可与其分享以下链接：
-velocity.command.dump-will-expire=此链接将于几天后过期。
-velocity.command.dump-server-error=Velocity 服务器发生错误，无法完成内存转储。请联系 Velocity 开发者并从 Velocity 控制台或日志中提供详细错误信息。
-velocity.command.dump-offline=可能原因：系统 DNS 设置无效或无网络连接
\ No newline at end of file
diff --git a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_zh_HK.properties b/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_zh_HK.properties
deleted file mode 100644
index b1630092..00000000
--- a/proxy/src/main/resources/com/velocitypowered/proxy/l10n/messages_zh_HK.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#
-# Copyright (C) 2018 Velocity Contributors
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <https://www.gnu.org/licenses/>.
-#
-
-velocity.error.already-connected=You are already connected to this server\!
-velocity.error.already-connected-proxy=You are already connected to this proxy\!
-velocity.error.already-connecting=You are already trying to connect to a server\!
-velocity.error.cant-connect=Unable to connect to {0}\: {1}
-velocity.error.connecting-server-error=Unable to connect you to {0}. Please try again later.
-velocity.error.connected-server-error=Your connection to {0} encountered a problem.
-velocity.error.internal-server-connection-error=An internal server connection error occurred.
-velocity.error.logging-in-too-fast=You are logging in too fast, try again later.
-velocity.error.online-mode-only=You are not logged into your Minecraft account. If you are logged into your Minecraft account, try restarting your Minecraft client.
-velocity.error.player-connection-error=An internal error occurred in your connection.
-velocity.error.modern-forwarding-needs-new-client=This server is only compatible with Minecraft 1.13 and above.
-velocity.error.modern-forwarding-failed=Your server did not send a forwarding request to the proxy. Make sure the server is configured for Velocity forwarding.
-velocity.error.moved-to-new-server=You were kicked from {0}\: {1}
-velocity.error.no-available-servers=There are no available servers to connect you to. Try again later or contact an admin.
-
-# Commands
-velocity.command.generic-error=An error occurred while running this command.
-velocity.command.command-does-not-exist=This command does not exist.
-
-velocity.command.players-only=Only players can run this command.
-velocity.command.server-does-not-exist=The specified server {0} does not exist.
-
-velocity.command.server-current-server=You are currently connected to {0}.
-velocity.command.server-too-many=There are too many servers set up. Use tab completion to view all servers available.
-velocity.command.server-available=Available servers\:
-velocity.command.server-tooltip-player-online={0} player online
-velocity.command.server-tooltip-players-online={0} players online
-velocity.command.server-tooltip-current-server=Currently connected to this server
-velocity.command.server-tooltip-offer-connect-server=Click to connect to this server
-
-velocity.command.glist-player-singular={0} player is currently connected to the proxy.
-velocity.command.glist-player-plural={0} players are currently connected to the proxy.
-velocity.command.glist-view-all=To view all players on servers, use /glist all.
-
-velocity.command.reload-success=Velocity configuration successfully reloaded.
-velocity.command.reload-failure=Unable to reload your Velocity configuration. Check the console for more details.
-
-velocity.command.version-copyright=Copyright 2018-2021 {0} （ {1} 的授權條款爲： GNU 通用公共授權條款第三版）
-
-velocity.command.no-plugins=目前未有安裝任何 Velocity 插件。
-velocity.command.plugins-list=插件： {0}
-velocity.command.plugin-tooltip-website=網站： {0}
-velocity.command.plugin-tooltip-author=作者： {0}
-velocity.command.plugin-tooltip-authors=作者： {0}
-
-velocity.command.dump-uploading=正在收集並上載 Velocity 設定資料...
-velocity.command.dump-send-error=An error occurred while communicating with the Velocity servers. The servers may be temporarily unavailable or there is an issue with your network settings. You can find more information in the log or console of your Velocity server.
-velocity.command.dump-success=Created an anonymised report containing useful information about this proxy. If a developer requested it, you may share the following link with them\:
-velocity.command.dump-will-expire=This link will expire in a few days.
-velocity.command.dump-server-error=An error occurred on the Velocity servers and the dump could not be completed. Please contact the Velocity staff about this problem and provide the details about this error from the Velocity console or server log.
-velocity.command.dump-offline=Likely cause\: Invalid system DNS settings or no internet connection
\ No newline at end of file
diff --git a/proxy/src/test/java/com/velocitypowered/proxy/protocol/PacketRegistryTest.java b/proxy/src/test/java/com/velocitypowered/proxy/protocol/PacketRegistryTest.java
index b2f6e857..88679261 100644
--- a/proxy/src/test/java/com/velocitypowered/proxy/protocol/PacketRegistryTest.java
+++ b/proxy/src/test/java/com/velocitypowered/proxy/protocol/PacketRegistryTest.java
@@ -38,7 +38,6 @@ import static org.junit.jupiter.api.Assertions.assertThrows;
 import com.velocitypowered.api.network.ProtocolVersion;
 import com.velocitypowered.proxy.protocol.packet.Handshake;
 import com.velocitypowered.proxy.protocol.packet.StatusPing;
-
 import org.junit.jupiter.api.Test;
 
 class PacketRegistryTest {
diff --git a/proxy/src/test/java/com/velocitypowered/proxy/protocol/ProtocolUtilsTest.java b/proxy/src/test/java/com/velocitypowered/proxy/protocol/ProtocolUtilsTest.java
index 04b2f319..470d9019 100644
--- a/proxy/src/test/java/com/velocitypowered/proxy/protocol/ProtocolUtilsTest.java
+++ b/proxy/src/test/java/com/velocitypowered/proxy/protocol/ProtocolUtilsTest.java
@@ -19,7 +19,6 @@ package com.velocitypowered.proxy.protocol;
 
 import static org.junit.jupiter.api.Assertions.assertArrayEquals;
 import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertTrue;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufUtil;
-- 
2.24.1.windows.2

